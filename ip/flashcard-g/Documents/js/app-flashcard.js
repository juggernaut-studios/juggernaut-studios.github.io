(function($){function int_prop(fx){fx.elem.style[fx.prop]=parseInt(fx.now,10)+fx.unit}var throwError=function(message){throw ({name:"jquery.flip.js plugin error",message:message})};var isIE6orOlder=function(){return(/*@cc_on!@*/false&&(typeof document.body.style.maxHeight==="undefined"))};var colors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0],transparent:[255,255,255]};var acceptHexColor=function(color){if(color&&color.indexOf("#")==-1&&color.indexOf("(")==-1){return"rgb("+colors[color].toString()+")"}else{return color}};$.extend($.fx.step,{borderTopWidth:int_prop,borderBottomWidth:int_prop,borderLeftWidth:int_prop,borderRightWidth:int_prop});$.fn.revertFlip=function(){return this.each(function(){var $this=$(this);$this.flip($this.data("flipRevertedSettings"))})};$.fn.flip=function(settings){return this.each(function(){var $this=$(this),flipObj,$clone,dirOption,dirOptions,newContent,ie6=isIE6orOlder();if($this.data("flipLock")){return false}var revertedSettings={direction:(function(direction){switch(direction){case"tb":return"bt";case"bt":return"tb";case"lr":return"rl";case"rl":return"lr";default:return"bt"}})(settings.direction),bgColor:acceptHexColor(settings.color)||"#999",color:acceptHexColor(settings.bgColor)||$this.css("background-color"),content:$this.html(),speed:settings.speed||500,onBefore:settings.onBefore||function(){},onEnd:settings.onEnd||function(){},onAnimation:settings.onAnimation||function(){}};$this.data("flipRevertedSettings",revertedSettings).data("flipLock",1).data("flipSettings",revertedSettings);flipObj={width:$this.width(),height:$this.height(),bgColor:acceptHexColor(settings.bgColor)||$this.css("background-color"),fontSize:$this.css("font-size")||"12px",direction:settings.direction||"tb",toColor:acceptHexColor(settings.color)||"#999",speed:settings.speed||500,top:$this.offset().top,left:$this.offset().left,target:settings.content||null,transparent:"transparent",dontChangeColor:settings.dontChangeColor||false,onBefore:settings.onBefore||function(){},onEnd:settings.onEnd||function(){},onAnimation:settings.onAnimation||function(){}};ie6&&(flipObj.transparent="#123456");$clone=$this.css("visibility","hidden").clone(true).data("flipLock",1).appendTo("body").html("").css({visibility:"visible",position:"absolute",left:flipObj.left,top:flipObj.top,margin:0,zIndex:9999,"-webkit-box-shadow":"0px 0px 0px #000","-moz-box-shadow":"0px 0px 0px #000"});$clone.attr("id","newName");var defaultStart=function(){return{backgroundColor:flipObj.transparent,fontSize:0,lineHeight:0,borderTopWidth:0,borderLeftWidth:0,borderRightWidth:0,borderBottomWidth:0,borderTopColor:flipObj.transparent,borderBottomColor:flipObj.transparent,borderLeftColor:flipObj.transparent,borderRightColor:flipObj.transparent,background:"none",borderStyle:"solid",height:0,width:0}};var defaultHorizontal=function(){var waist=(flipObj.height/100)*25;var start=defaultStart();start.width=flipObj.width;return{start:start,first:{borderTopWidth:0,borderLeftWidth:waist,borderRightWidth:waist,borderBottomWidth:0,borderTopColor:"#999",borderBottomColor:"#999",top:(flipObj.top+(flipObj.height/2)),left:(flipObj.left-waist)},second:{borderBottomWidth:0,borderTopWidth:0,borderLeftWidth:0,borderRightWidth:0,borderTopColor:flipObj.transparent,borderBottomColor:flipObj.transparent,top:flipObj.top,left:flipObj.left}}};var defaultVertical=function(){var waist=(flipObj.height/100)*25;var start=defaultStart();start.height=flipObj.height;return{start:start,first:{borderTopWidth:waist,borderLeftWidth:0,borderRightWidth:0,borderBottomWidth:waist,borderLeftColor:"#999",borderRightColor:"#999",top:flipObj.top-waist,left:flipObj.left+(flipObj.width/2)},second:{borderTopWidth:0,borderLeftWidth:0,borderRightWidth:0,borderBottomWidth:0,borderLeftColor:flipObj.transparent,borderRightColor:flipObj.transparent,top:flipObj.top,left:flipObj.left}}};dirOptions={tb:function(){var d=defaultHorizontal();d.start.borderTopWidth=flipObj.height;d.start.borderTopColor=flipObj.bgColor;d.second.borderBottomWidth=flipObj.height;d.second.borderBottomColor=flipObj.toColor;return d},bt:function(){var d=defaultHorizontal();d.start.borderBottomWidth=flipObj.height;d.start.borderBottomColor=flipObj.bgColor;d.second.borderTopWidth=flipObj.height;d.second.borderTopColor=flipObj.toColor;return d},lr:function(){var d=defaultVertical();d.start.borderLeftWidth=flipObj.width;d.start.borderLeftColor=flipObj.bgColor;d.second.borderRightWidth=flipObj.width;d.second.borderRightColor=flipObj.toColor;return d},rl:function(){var d=defaultVertical();d.start.borderRightWidth=flipObj.width;d.start.borderRightColor=flipObj.bgColor;d.second.borderLeftWidth=flipObj.width;d.second.borderLeftColor=flipObj.toColor;return d}};dirOption=dirOptions[flipObj.direction]();ie6&&(dirOption.start.filter="chroma(color="+flipObj.transparent+")");newContent=function(){var target=flipObj.target;return target&&target.jquery?target.html():target};$clone.queue(function(){flipObj.onBefore($clone,$this);$clone.html("").css(dirOption.start);$clone.dequeue()});$clone.animate(dirOption.first,flipObj.speed);$clone.queue(function(){flipObj.onAnimation($clone,$this);$clone.dequeue()});$clone.animate(dirOption.second,flipObj.speed);$clone.queue(function(){if(!flipObj.dontChangeColor){$this.css({backgroundColor:flipObj.toColor})}$this.css({visibility:"visible"});var nC=newContent();if(nC){$this.html(nC)}$clone.remove();flipObj.onEnd($clone,$this);$this.removeData("flipLock");$clone.dequeue()})})}})(jQuery);/*! * jQuery UI 1.8.16 * * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about) * Dual licensed under the MIT or GPL Version 2 licenses. * http://jquery.org/license * * http://docs.jquery.com/UI */(function(e,d){function b(f,c){var g=f.nodeName.toLowerCase();if("area"===g){c=f.parentNode;g=c.name;if(!f.href||!g||c.nodeName.toLowerCase()!=="map"){return false}f=e("img[usemap=#"+g+"]")[0];return !!f&&a(f)}return(/input|select|textarea|button|object/.test(g)?!f.disabled:"a"==g?f.href||c:c)&&a(f)}function a(c){return !e(c).parents().andSelf().filter(function(){return e.curCSS(this,"visibility")==="hidden"||e.expr.filters.hidden(this)}).length}e.ui=e.ui||{};if(!e.ui.version){e.extend(e.ui,{version:"1.8.16",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});e.fn.extend({propAttr:e.fn.prop||e.fn.attr,_focus:e.fn.focus,focus:function(f,c){return typeof f==="number"?this.each(function(){var g=this;setTimeout(function(){e(g).focus();c&&c.call(g)},f)}):this._focus.apply(this,arguments)},scrollParent:function(){var c;c=e.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.curCSS(this,"position",1))&&/(auto|scroll)/.test(e.curCSS(this,"overflow",1)+e.curCSS(this,"overflow-y",1)+e.curCSS(this,"overflow-x",1))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(e.curCSS(this,"overflow",1)+e.curCSS(this,"overflow-y",1)+e.curCSS(this,"overflow-x",1))}).eq(0);return/fixed/.test(this.css("position"))||!c.length?e(document):c},zIndex:function(f){if(f!==d){return this.css("zIndex",f)}if(this.length){f=e(this[0]);for(var c;f.length&&f[0]!==document;){c=f.css("position");if(c==="absolute"||c==="relative"||c==="fixed"){c=parseInt(f.css("zIndex"),10);if(!isNaN(c)&&c!==0){return c}}f=f.parent()}}return 0},disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(c){c.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});e.each(["Width","Height"],function(f,c){function l(o,i,h,p){e.each(k,function(){i-=parseFloat(e.curCSS(o,"padding"+this,true))||0;if(h){i-=parseFloat(e.curCSS(o,"border"+this+"Width",true))||0}if(p){i-=parseFloat(e.curCSS(o,"margin"+this,true))||0}});return i}var k=c==="Width"?["Left","Right"]:["Top","Bottom"],j=c.toLowerCase(),g={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+c]=function(h){if(h===d){return g["inner"+c].call(this)}return this.each(function(){e(this).css(j,l(this,h)+"px")})};e.fn["outer"+c]=function(i,h){if(typeof i!=="number"){return g["outer"+c].call(this,i)}return this.each(function(){e(this).css(j,l(this,i,true,h)+"px")})}});e.extend(e.expr[":"],{data:function(f,c,g){return !!e.data(f,g[3])},focusable:function(c){return b(c,!isNaN(e.attr(c,"tabindex")))},tabbable:function(f){var c=e.attr(f,"tabindex"),g=isNaN(c);return(g||c>=0)&&b(f,!g)}});e(function(){var f=document.body,c=f.appendChild(c=document.createElement("div"));e.extend(c.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});e.support.minHeight=c.offsetHeight===100;e.support.selectstart="onselectstart" in c;f.removeChild(c).style.display="none"});e.extend(e.ui,{plugin:{add:function(f,c,h){f=e.ui[f].prototype;for(var g in h){f.plugins[g]=f.plugins[g]||[];f.plugins[g].push([c,h[g]])}},call:function(f,c,h){if((c=f.plugins[c])&&f.element[0].parentNode){for(var g=0;g<c.length;g++){f.options[c[g][0]]&&c[g][1].apply(f.element,h)}}}},contains:function(f,c){return document.compareDocumentPosition?f.compareDocumentPosition(c)&16:f!==c&&f.contains(c)},hasScroll:function(f,c){if(e(f).css("overflow")==="hidden"){return false}c=c&&c==="left"?"scrollLeft":"scrollTop";var g=false;if(f[c]>0){return true}f[c]=1;g=f[c]>0;f[c]=0;return g},isOverAxis:function(f,c,g){return f>c&&f<c+g},isOver:function(f,c,l,k,j,g){return e.ui.isOverAxis(f,l,j)&&e.ui.isOverAxis(c,k,g)}})}})(jQuery);/*! * jQuery UI Widget 1.8.16 * * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about) * Dual licensed under the MIT or GPL Version 2 licenses. * http://jquery.org/license * * http://docs.jquery.com/UI/Widget */(function(a,e){if(a.cleanData){var d=a.cleanData;a.cleanData=function(b){for(var h=0,g;(g=b[h])!=null;h++){try{a(g).triggerHandler("remove")}catch(f){}}d(b)}}else{var c=a.fn.remove;a.fn.remove=function(b,f){return this.each(function(){if(!f){if(!b||a.filter(b,[this]).length){a("*",this).add([this]).each(function(){try{a(this).triggerHandler("remove")}catch(g){}})}}return c.call(a(this),b,f)})}}a.widget=function(b,j,i){var h=b.split(".")[0],g;b=b.split(".")[1];g=h+"-"+b;if(!i){i=j;j=a.Widget}a.expr[":"][g]=function(f){return !!a.data(f,b)};a[h]=a[h]||{};a[h][b]=function(f,k){arguments.length&&this._createWidget(f,k)};j=new j;j.options=a.extend(true,{},j.options);a[h][b].prototype=a.extend(true,j,{namespace:h,widgetName:b,widgetEventPrefix:a[h][b].prototype.widgetEventPrefix||b,widgetBaseClass:g},i);a.widget.bridge(b,a[h][b])};a.widget.bridge=function(b,f){a.fn[b]=function(k){var j=typeof k==="string",i=Array.prototype.slice.call(arguments,1),g=this;k=!j&&i.length?a.extend.apply(null,[true,k].concat(i)):k;if(j&&k.charAt(0)==="_"){return g}j?this.each(function(){var l=a.data(this,b),h=l&&a.isFunction(l[k])?l[k].apply(l,i):l;if(h!==l&&h!==e){g=h;return false}}):this.each(function(){var h=a.data(this,b);h?h.option(k||{})._init():a.data(this,b,new f(k,this))});return g}};a.Widget=function(b,f){arguments.length&&this._createWidget(b,f)};a.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(b,g){a.data(g,this.widgetName,this);this.element=a(g);this.options=a.extend(true,{},this.options,this._getCreateOptions(),b);var f=this;this.element.bind("remove."+this.widgetName,function(){f.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return a.metadata&&a.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled ui-state-disabled")},widget:function(){return this.element},option:function(b,g){var f=b;if(arguments.length===0){return a.extend({},this.options)}if(typeof b==="string"){if(g===e){return this.options[b]}f={};f[b]=g}this._setOptions(f);return this},_setOptions:function(b){var f=this;a.each(b,function(h,g){f._setOption(h,g)});return this},_setOption:function(b,f){this.options[b]=f;if(b==="disabled"){this.widget()[f?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",f)}return this},enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(b,j,i){var h=this.options[b];j=a.Event(j);j.type=(b===this.widgetEventPrefix?b:this.widgetEventPrefix+b).toLowerCase();i=i||{};if(j.originalEvent){b=a.event.props.length;for(var g;b;){g=a.event.props[--b];j[g]=j.originalEvent[g]}}this.element.trigger(j,i);return !(a.isFunction(h)&&h.call(this.element[0],j,i)===false||j.isDefaultPrevented())}}})(jQuery);/*! * jQuery UI Mouse 1.8.16 * * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about) * Dual licensed under the MIT or GPL Version 2 licenses. * http://jquery.org/license * * http://docs.jquery.com/UI/Mouse * * Depends: *	jquery.ui.widget.js */ (function (a) {    var c = false;    a(document).mouseup(function () {        c = false    });    a.widget("ui.mouse", {        options: {            cancel: ":input,option",            distance: 1,            delay: 0        },        _mouseInit: function () {            var b = this;            this.element.bind("mousedown." + this.widgetName, function (d) {                return b._mouseDown(d)            }).bind("click." + this.widgetName, function (d) {                if (true === a.data(d.target, b.widgetName + ".preventClickEvent")) {                    a.removeData(d.target, b.widgetName + ".preventClickEvent");                    d.stopImmediatePropagation();                    return false                }            });            this.started = false        },        _mouseDestroy: function () {            this.element.unbind("." + this.widgetName)        },        _mouseDown: function (b) {            if (!c) {                this._mouseStarted && this._mouseUp(b);                this._mouseDownEvent = b;                var h = this,                    e = b.which == 1,                    d = typeof this.options.cancel == "string" && b.target.nodeName ? a(b.target).closest(this.options.cancel).length : false;                if (!e || d || !this._mouseCapture(b)) {                    return true                }                this.mouseDelayMet = !this.options.delay;                if (!this.mouseDelayMet) {                    this._mouseDelayTimer = setTimeout(function () {                        h.mouseDelayMet = true                    }, this.options.delay)                }                if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) {                    this._mouseStarted = this._mouseStart(b) !== false;                    if (!this._mouseStarted) {                        b.preventDefault();                        return true                    }                }                true === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent");                this._mouseMoveDelegate = function (f) {                    return h._mouseMove(f)                };                this._mouseUpDelegate = function (f) {                    return h._mouseUp(f)                };                a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);                b.preventDefault();                return c = true            }        },        _mouseMove: function (b) {            if (a.browser.msie && !(document.documentMode >= 9) && !b.button) {                return this._mouseUp(b)            }            if (this._mouseStarted) {                this._mouseDrag(b);                return b.preventDefault()            }            if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) {                (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== false) ? this._mouseDrag(b) : this._mouseUp(b)            }            return !this._mouseStarted        },        _mouseUp: function (b) {            a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);            if (this._mouseStarted) {                this._mouseStarted = false;                b.target == this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", true);                this._mouseStop(b)            }            return false        },        _mouseDistanceMet: function (b) {            return Math.max(Math.abs(this._mouseDownEvent.pageX - b.pageX), Math.abs(this._mouseDownEvent.pageY - b.pageY)) >= this.options.distance        },        _mouseDelayMet: function () {            return this.mouseDelayMet        },        _mouseStart: function () {},        _mouseDrag: function () {},        _mouseStop: function () {},        _mouseCapture: function () {            return true        }    })})(jQuery);(function (f) {    f.ui = f.ui || {};    var e = /left|center|right/,        d = /top|center|bottom/,        b = f.fn.position,        a = f.fn.offset;    f.fn.position = function (c) {        if (!c || !c.of) {            return b.apply(this, arguments)        }        c = f.extend({}, c);        var i = f(c.of),            r = i[0],            p = (c.collision || "flip").split(" "),            q = c.offset ? c.offset.split(" ") : [0, 0],            o, l, n;        if (r.nodeType === 9) {            o = i.width();            l = i.height();            n = {                top: 0,                left: 0            }        } else {            if (r.setTimeout) {                o = i.width();                l = i.height();                n = {                    top: i.scrollTop(),                    left: i.scrollLeft()                }            } else {                if (r.preventDefault) {                    c.at = "left top";                    o = l = 0;                    n = {                        top: c.of.pageY,                        left: c.of.pageX                    }                } else {                    o = i.outerWidth();                    l = i.outerHeight();                    n = i.offset()                }            }        }        f.each(["my", "at"], function () {            var g = (c[this] || "").split(" ");            if (g.length === 1) {                g = e.test(g[0]) ? g.concat(["center"]) : d.test(g[0]) ? ["center"].concat(g) : ["center", "center"]            }            g[0] = e.test(g[0]) ? g[0] : "center";            g[1] = d.test(g[1]) ? g[1] : "center";            c[this] = g        });        if (p.length === 1) {            p[1] = p[0]        }        q[0] = parseInt(q[0], 10) || 0;        if (q.length === 1) {            q[1] = q[0]        }        q[1] = parseInt(q[1], 10) || 0;        if (c.at[0] === "right") {            n.left += o        } else {            if (c.at[0] === "center") {                n.left += o / 2            }        } if (c.at[1] === "bottom") {            n.top += l        } else {            if (c.at[1] === "center") {                n.top += l / 2            }        }        n.left += q[0];        n.top += q[1];        return this.each(function () {            var x = f(this),                s = x.outerWidth(),                k = x.outerHeight(),                j = parseInt(f.curCSS(this, "marginLeft", true)) || 0,                h = parseInt(f.curCSS(this, "marginTop", true)) || 0,                z = s + j + (parseInt(f.curCSS(this, "marginRight", true)) || 0),                y = k + h + (parseInt(f.curCSS(this, "marginBottom", true)) || 0),                u = f.extend({}, n),                g;            if (c.my[0] === "right") {                u.left -= s            } else {                if (c.my[0] === "center") {                    u.left -= s / 2                }            } if (c.my[1] === "bottom") {                u.top -= k            } else {                if (c.my[1] === "center") {                    u.top -= k / 2                }            }            u.left = Math.round(u.left);            u.top = Math.round(u.top);            g = {                left: u.left - j,                top: u.top - h            };            f.each(["left", "top"], function (w, v) {                f.ui.position[p[w]] && f.ui.position[p[w]][v](u, {                    targetWidth: o,                    targetHeight: l,                    elemWidth: s,                    elemHeight: k,                    collisionPosition: g,                    collisionWidth: z,                    collisionHeight: y,                    offset: q,                    my: c.my,                    at: c.at                })            });            f.fn.bgiframe && x.bgiframe();            x.offset(f.extend(u, {                using: c.using            }))        })    };    f.ui.position = {        fit: {            left: function (c, g) {                var h = f(window);                h = g.collisionPosition.left + g.collisionWidth - h.width() - h.scrollLeft();                c.left = h > 0 ? c.left - h : Math.max(c.left - g.collisionPosition.left, c.left)            },            top: function (c, g) {                var h = f(window);                h = g.collisionPosition.top + g.collisionHeight - h.height() - h.scrollTop();                c.top = h > 0 ? c.top - h : Math.max(c.top - g.collisionPosition.top, c.top)            }        },        flip: {            left: function (c, i) {                if (i.at[0] !== "center") {                    var n = f(window);                    n = i.collisionPosition.left + i.collisionWidth - n.width() - n.scrollLeft();                    var k = i.my[0] === "left" ? -i.elemWidth : i.my[0] === "right" ? i.elemWidth : 0,                        l = i.at[0] === "left" ? i.targetWidth : -i.targetWidth,                        j = -2 * i.offset[0];                    c.left += i.collisionPosition.left < 0 ? k + l + j : n > 0 ? k + l + j : 0                }            },            top: function (c, i) {                if (i.at[1] !== "center") {                    var n = f(window);                    n = i.collisionPosition.top + i.collisionHeight - n.height() - n.scrollTop();                    var k = i.my[1] === "top" ? -i.elemHeight : i.my[1] === "bottom" ? i.elemHeight : 0,                        l = i.at[1] === "top" ? i.targetHeight : -i.targetHeight,                        j = -2 * i.offset[1];                    c.top += i.collisionPosition.top < 0 ? k + l + j : n > 0 ? k + l + j : 0                }            }        }    };    if (!f.offset.setOffset) {        f.offset.setOffset = function (c, i) {            if (/static/.test(f.curCSS(c, "position"))) {                c.style.position = "relative"            }            var n = f(c),                k = n.offset(),                l = parseInt(f.curCSS(c, "top", true), 10) || 0,                j = parseInt(f.curCSS(c, "left", true), 10) || 0;            k = {                top: i.top - k.top + l,                left: i.left - k.left + j            };            "using" in i ? i.using.call(c, k) : n.css(k)        };        f.fn.offset = function (c) {            var g = this[0];            if (!g || !g.ownerDocument) {                return null            }            if (c) {                return this.each(function () {                    f.offset.setOffset(this, c)                })            }            return a.call(this)        }    }})(jQuery);(function (a) {    a.widget("ui.draggable", a.ui.mouse, {        widgetEventPrefix: "drag",        options: {            addClasses: true,            appendTo: "parent",            axis: false,            connectToSortable: false,            containment: false,            cursor: "auto",            cursorAt: false,            grid: false,            handle: false,            helper: "original",            iframeFix: false,            opacity: false,            refreshPositions: false,            revert: false,            revertDuration: 500,            scope: "default",            scroll: true,            scrollSensitivity: 20,            scrollSpeed: 20,            snap: false,            snapMode: "both",            snapTolerance: 20,            stack: false,            zIndex: false        },        _create: function () {            if (this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position"))) {                this.element[0].style.position = "relative"            }            this.options.addClasses && this.element.addClass("ui-draggable");            this.options.disabled && this.element.addClass("ui-draggable-disabled");            this._mouseInit()        },        destroy: function () {            if (this.element.data("draggable")) {                this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");                this._mouseDestroy();                return this            }        },        _mouseCapture: function (d) {            var c = this.options;            if (this.helper || c.disabled || a(d.target).is(".ui-resizable-handle")) {                return false            }            this.handle = this._getHandle(d);            if (!this.handle) {                return false            }            if (c.iframeFix) {                a(c.iframeFix === true ? "iframe" : c.iframeFix).each(function () {                    a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({                        width: this.offsetWidth + "px",                        height: this.offsetHeight + "px",                        position: "absolute",                        opacity: "0.001",                        zIndex: 1000                    }).css(a(this).offset()).appendTo("body")                })            }            return true        },        _mouseStart: function (d) {            var c = this.options;            this.helper = this._createHelper(d);            this._cacheHelperProportions();            if (a.ui.ddmanager) {                a.ui.ddmanager.current = this            }            this._cacheMargins();            this.cssPosition = this.helper.css("position");            this.scrollParent = this.helper.scrollParent();            this.offset = this.positionAbs = this.element.offset();            this.offset = {                top: this.offset.top - this.margins.top,                left: this.offset.left - this.margins.left            };            a.extend(this.offset, {                click: {                    left: d.pageX - this.offset.left,                    top: d.pageY - this.offset.top                },                parent: this._getParentOffset(),                relative: this._getRelativeOffset()            });            this.originalPosition = this.position = this._generatePosition(d);            this.originalPageX = d.pageX;            this.originalPageY = d.pageY;            c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt);            c.containment && this._setContainment();            if (this._trigger("start", d) === false) {                this._clear();                return false            }            this._cacheHelperProportions();            a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, d);            this.helper.addClass("ui-draggable-dragging");            this._mouseDrag(d, true);            a.ui.ddmanager && a.ui.ddmanager.dragStart(this, d);            return true        },        _mouseDrag: function (d, c) {            this.position = this._generatePosition(d);            this.positionAbs = this._convertPositionTo("absolute");            if (!c) {                c = this._uiHash();                if (this._trigger("drag", d, c) === false) {                    this._mouseUp({});                    return false                }                this.position = c.position            }            if (!this.options.axis || this.options.axis != "y") {                this.helper[0].style.left = this.position.left + "px"            }            if (!this.options.axis || this.options.axis != "x") {                this.helper[0].style.top = this.position.top + "px"            }            a.ui.ddmanager && a.ui.ddmanager.drag(this, d);            return false        },        _mouseStop: function (e) {            var d = false;            if (a.ui.ddmanager && !this.options.dropBehaviour) {                d = a.ui.ddmanager.drop(this, e)            }            if (this.dropped) {                d = this.dropped;                this.dropped = false            }            if ((!this.element[0] || !this.element[0].parentNode) && this.options.helper == "original") {                return false            }            if (this.options.revert == "invalid" && !d || this.options.revert == "valid" && d || this.options.revert === true || a.isFunction(this.options.revert) && this.options.revert.call(this.element, d)) {                var f = this;                a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {                    f._trigger("stop", e) !== false && f._clear()                })            } else {                this._trigger("stop", e) !== false && this._clear()            }            return false        },        _mouseUp: function (b) {            this.options.iframeFix === true && a("div.ui-draggable-iframeFix").each(function () {                this.parentNode.removeChild(this)            });            a.ui.ddmanager && a.ui.ddmanager.dragStop(this, b);            return a.ui.mouse.prototype._mouseUp.call(this, b)        },        cancel: function () {            this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear();            return this        },        _getHandle: function (d) {            var c = !this.options.handle || !a(this.options.handle, this.element).length ? true : false;            a(this.options.handle, this.element).find("*").andSelf().each(function () {                if (this == d.target) {                    c = true                }            });            return c        },        _createHelper: function (d) {            var c = this.options;            d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [d])) : c.helper == "clone" ? this.element.clone().removeAttr("id") : this.element;            d.parents("body").length || d.appendTo(c.appendTo == "parent" ? this.element[0].parentNode : c.appendTo);            d[0] != this.element[0] && !/(fixed|absolute)/.test(d.css("position")) && d.css("position", "absolute");            return d        },        _adjustOffsetFromHelper: function (b) {            if (typeof b == "string") {                b = b.split(" ")            }            if (a.isArray(b)) {                b = {                    left: +b[0],                    top: +b[1] || 0                }            }            if ("left" in b) {                this.offset.click.left = b.left + this.margins.left            }            if ("right" in b) {                this.offset.click.left = this.helperProportions.width - b.right + this.margins.left            }            if ("top" in b) {                this.offset.click.top = b.top + this.margins.top            }            if ("bottom" in b) {                this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top            }        },        _getParentOffset: function () {            this.offsetParent = this.helper.offsetParent();            var b = this.offsetParent.offset();            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) {                b.left += this.scrollParent.scrollLeft();                b.top += this.scrollParent.scrollTop()            }            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) {                b = {                    top: 0,                    left: 0                }            }            return {                top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),                left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)            }        },        _getRelativeOffset: function () {            if (this.cssPosition == "relative") {                var b = this.element.position();                return {                    top: b.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),                    left: b.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()                }            } else {                return {                    top: 0,                    left: 0                }            }        },        _cacheMargins: function () {            this.margins = {                left: parseInt(this.element.css("marginLeft"), 10) || 0,                top: parseInt(this.element.css("marginTop"), 10) || 0,                right: parseInt(this.element.css("marginRight"), 10) || 0,                bottom: parseInt(this.element.css("marginBottom"), 10) || 0            }        },        _cacheHelperProportions: function () {            this.helperProportions = {                width: this.helper.outerWidth(),                height: this.helper.outerHeight()            }        },        _setContainment: function () {            var e = this.options;            if (e.containment == "parent") {                e.containment = this.helper[0].parentNode            }            if (e.containment == "document" || e.containment == "window") {                this.containment = [e.containment == "document" ? 0 : a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, e.containment == "document" ? 0 : a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (e.containment == "document" ? 0 : a(window).scrollLeft()) + a(e.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (e.containment == "document" ? 0 : a(window).scrollTop()) + (a(e.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]            }            if (!/^(document|window|parent)$/.test(e.containment) && e.containment.constructor != Array) {                e = a(e.containment);                var d = e[0];                if (d) {                    e.offset();                    var f = a(d).css("overflow") != "hidden";                    this.containment = [(parseInt(a(d).css("borderLeftWidth"), 10) || 0) + (parseInt(a(d).css("paddingLeft"), 10) || 0), (parseInt(a(d).css("borderTopWidth"), 10) || 0) + (parseInt(a(d).css("paddingTop"), 10) || 0), (f ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(a(d).css("borderLeftWidth"), 10) || 0) - (parseInt(a(d).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (f ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(a(d).css("borderTopWidth"), 10) || 0) - (parseInt(a(d).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];                    this.relative_container = e                }            } else {                if (e.containment.constructor == Array) {                    this.containment = e.containment                }            }        },        _convertPositionTo: function (e, d) {            if (!d) {                d = this.position            }            e = e == "absolute" ? 1 : -1;            var h = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,                g = /(html|body)/i.test(h[0].tagName);            return {                top: d.top + this.offset.relative.top * e + this.offset.parent.top * e - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : h.scrollTop()) * e),                left: d.left + this.offset.relative.left * e + this.offset.parent.left * e - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : h.scrollLeft()) * e)            }        },        _generatePosition: function (i) {            var d = this.options,                o = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,                l = /(html|body)/i.test(o[0].tagName),                n = i.pageX,                j = i.pageY;            if (this.originalPosition) {                var k;                if (this.containment) {                    if (this.relative_container) {                        k = this.relative_container.offset();                        k = [this.containment[0] + k.left, this.containment[1] + k.top, this.containment[2] + k.left, this.containment[3] + k.top]                    } else {                        k = this.containment                    } if (i.pageX - this.offset.click.left < k[0]) {                        n = k[0] + this.offset.click.left                    }                    if (i.pageY - this.offset.click.top < k[1]) {                        j = k[1] + this.offset.click.top                    }                    if (i.pageX - this.offset.click.left > k[2]) {                        n = k[2] + this.offset.click.left                    }                    if (i.pageY - this.offset.click.top > k[3]) {                        j = k[3] + this.offset.click.top                    }                }                if (d.grid) {                    j = d.grid[1] ? this.originalPageY + Math.round((j - this.originalPageY) / d.grid[1]) * d.grid[1] : this.originalPageY;                    j = k ? !(j - this.offset.click.top < k[1] || j - this.offset.click.top > k[3]) ? j : !(j - this.offset.click.top < k[1]) ? j - d.grid[1] : j + d.grid[1] : j;                    n = d.grid[0] ? this.originalPageX + Math.round((n - this.originalPageX) / d.grid[0]) * d.grid[0] : this.originalPageX;                    n = k ? !(n - this.offset.click.left < k[0] || n - this.offset.click.left > k[2]) ? n : !(n - this.offset.click.left < k[0]) ? n - d.grid[0] : n + d.grid[0] : n                }            }            return {                top: j - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : l ? 0 : o.scrollTop()),                left: n - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : l ? 0 : o.scrollLeft())            }        },        _clear: function () {            this.helper.removeClass("ui-draggable-dragging");            this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove();            this.helper = null;            this.cancelHelperRemoval = false        },        _trigger: function (e, d, f) {            f = f || this._uiHash();            a.ui.plugin.call(this, e, [d, f]);            if (e == "drag") {                this.positionAbs = this._convertPositionTo("absolute")            }            return a.Widget.prototype._trigger.call(this, e, d, f)        },        plugins: {},        _uiHash: function () {            return {                helper: this.helper,                position: this.position,                originalPosition: this.originalPosition,                offset: this.positionAbs            }        }    });    a.extend(a.ui.draggable, {        version: "1.8.16"    });    a.ui.plugin.add("draggable", "connectToSortable", {        start: function (g, d) {            var j = a(this).data("draggable"),                h = j.options,                i = a.extend({}, d, {                    item: j.element                });            j.sortables = [];            a(h.connectToSortable).each(function () {                var b = a.data(this, "sortable");                if (b && !b.options.disabled) {                    j.sortables.push({                        instance: b,                        shouldRevert: b.options.revert                    });                    b.refreshPositions();                    b._trigger("activate", g, i)                }            })        },        stop: function (e, d) {            var h = a(this).data("draggable"),                g = a.extend({}, d, {                    item: h.element                });            a.each(h.sortables, function () {                if (this.instance.isOver) {                    this.instance.isOver = 0;                    h.cancelHelperRemoval = true;                    this.instance.cancelHelperRemoval = false;                    if (this.shouldRevert) {                        this.instance.options.revert = true                    }                    this.instance._mouseStop(e);                    this.instance.options.helper = this.instance.options._helper;                    h.options.helper == "original" && this.instance.currentItem.css({                        top: "auto",                        left: "auto"                    })                } else {                    this.instance.cancelHelperRemoval = false;                    this.instance._trigger("deactivate", e, g)                }            })        },        drag: function (e, d) {            var h = a(this).data("draggable"),                g = this;            a.each(h.sortables, function () {                this.instance.positionAbs = h.positionAbs;                this.instance.helperProportions = h.helperProportions;                this.instance.offset.click = h.offset.click;                if (this.instance._intersectsWith(this.instance.containerCache)) {                    if (!this.instance.isOver) {                        this.instance.isOver = 1;                        this.instance.currentItem = a(g).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", true);                        this.instance.options._helper = this.instance.options.helper;                        this.instance.options.helper = function () {                            return d.helper[0]                        };                        e.target = this.instance.currentItem[0];                        this.instance._mouseCapture(e, true);                        this.instance._mouseStart(e, true, true);                        this.instance.offset.click.top = h.offset.click.top;                        this.instance.offset.click.left = h.offset.click.left;                        this.instance.offset.parent.left -= h.offset.parent.left - this.instance.offset.parent.left;                        this.instance.offset.parent.top -= h.offset.parent.top - this.instance.offset.parent.top;                        h._trigger("toSortable", e);                        h.dropped = this.instance.element;                        h.currentItem = h.element;                        this.instance.fromOutside = h                    }                    this.instance.currentItem && this.instance._mouseDrag(e)                } else {                    if (this.instance.isOver) {                        this.instance.isOver = 0;                        this.instance.cancelHelperRemoval = true;                        this.instance.options.revert = false;                        this.instance._trigger("out", e, this.instance._uiHash(this.instance));                        this.instance._mouseStop(e, true);                        this.instance.options.helper = this.instance.options._helper;                        this.instance.currentItem.remove();                        this.instance.placeholder && this.instance.placeholder.remove();                        h._trigger("fromSortable", e);                        h.dropped = false                    }                }            })        }    });    a.ui.plugin.add("draggable", "cursor", {        start: function () {            var d = a("body"),                c = a(this).data("draggable").options;            if (d.css("cursor")) {                c._cursor = d.css("cursor")            }            d.css("cursor", c.cursor)        },        stop: function () {            var b = a(this).data("draggable").options;            b._cursor && a("body").css("cursor", b._cursor)        }    });    a.ui.plugin.add("draggable", "opacity", {        start: function (d, c) {            d = a(c.helper);            c = a(this).data("draggable").options;            if (d.css("opacity")) {                c._opacity = d.css("opacity")            }            d.css("opacity", c.opacity)        },        stop: function (d, c) {            d = a(this).data("draggable").options;            d._opacity && a(c.helper).css("opacity", d._opacity)        }    });    a.ui.plugin.add("draggable", "scroll", {        start: function () {            var b = a(this).data("draggable");            if (b.scrollParent[0] != document && b.scrollParent[0].tagName != "HTML") {                b.overflowOffset = b.scrollParent.offset()            }        },        drag: function (e) {            var d = a(this).data("draggable"),                h = d.options,                g = false;            if (d.scrollParent[0] != document && d.scrollParent[0].tagName != "HTML") {                if (!h.axis || h.axis != "x") {                    if (d.overflowOffset.top + d.scrollParent[0].offsetHeight - e.pageY < h.scrollSensitivity) {                        d.scrollParent[0].scrollTop = g = d.scrollParent[0].scrollTop + h.scrollSpeed                    } else {                        if (e.pageY - d.overflowOffset.top < h.scrollSensitivity) {                            d.scrollParent[0].scrollTop = g = d.scrollParent[0].scrollTop - h.scrollSpeed                        }                    }                }                if (!h.axis || h.axis != "y") {                    if (d.overflowOffset.left + d.scrollParent[0].offsetWidth - e.pageX < h.scrollSensitivity) {                        d.scrollParent[0].scrollLeft = g = d.scrollParent[0].scrollLeft + h.scrollSpeed                    } else {                        if (e.pageX - d.overflowOffset.left < h.scrollSensitivity) {                            d.scrollParent[0].scrollLeft = g = d.scrollParent[0].scrollLeft - h.scrollSpeed                        }                    }                }            } else {                if (!h.axis || h.axis != "x") {                    if (e.pageY - a(document).scrollTop() < h.scrollSensitivity) {                        g = a(document).scrollTop(a(document).scrollTop() - h.scrollSpeed)                    } else {                        if (a(window).height() - (e.pageY - a(document).scrollTop()) < h.scrollSensitivity) {                            g = a(document).scrollTop(a(document).scrollTop() + h.scrollSpeed)                        }                    }                }                if (!h.axis || h.axis != "y") {                    if (e.pageX - a(document).scrollLeft() < h.scrollSensitivity) {                        g = a(document).scrollLeft(a(document).scrollLeft() - h.scrollSpeed)                    } else {                        if (a(window).width() - (e.pageX - a(document).scrollLeft()) < h.scrollSensitivity) {                            g = a(document).scrollLeft(a(document).scrollLeft() + h.scrollSpeed)                        }                    }                }            }            g !== false && a.ui.ddmanager && !h.dropBehaviour && a.ui.ddmanager.prepareOffsets(d, e)        }    });    a.ui.plugin.add("draggable", "snap", {        start: function () {            var d = a(this).data("draggable"),                c = d.options;            d.snapElements = [];            a(c.snap.constructor != String ? c.snap.items || ":data(draggable)" : c.snap).each(function () {                var e = a(this),                    b = e.offset();                this != d.element[0] && d.snapElements.push({                    item: this,                    width: e.outerWidth(),                    height: e.outerHeight(),                    top: b.top,                    left: b.left                })            })        },        drag: function (L, K) {            for (var J = a(this).data("draggable"), H = J.options, I = H.snapTolerance, F = K.offset.left, G = F + J.helperProportions.width, z = K.offset.top, y = z + J.helperProportions.height, E = J.snapElements.length - 1; E >= 0; E--) {                var D = J.snapElements[E].left,                    B = D + J.snapElements[E].width,                    C = J.snapElements[E].top,                    A = C + J.snapElements[E].height;                if (D - I < F && F < B + I && C - I < z && z < A + I || D - I < F && F < B + I && C - I < y && y < A + I || D - I < G && G < B + I && C - I < z && z < A + I || D - I < G && G < B + I && C - I < y && y < A + I) {                    if (H.snapMode != "inner") {                        var x = Math.abs(C - y) <= I,                            w = Math.abs(A - z) <= I,                            v = Math.abs(D - G) <= I,                            u = Math.abs(B - F) <= I;                        if (x) {                            K.position.top = J._convertPositionTo("relative", {                                top: C - J.helperProportions.height,                                left: 0                            }).top - J.margins.top                        }                        if (w) {                            K.position.top = J._convertPositionTo("relative", {                                top: A,                                left: 0                            }).top - J.margins.top                        }                        if (v) {                            K.position.left = J._convertPositionTo("relative", {                                top: 0,                                left: D - J.helperProportions.width                            }).left - J.margins.left                        }                        if (u) {                            K.position.left = J._convertPositionTo("relative", {                                top: 0,                                left: B                            }).left - J.margins.left                        }                    }                    var d = x || w || v || u;                    if (H.snapMode != "outer") {                        x = Math.abs(C - z) <= I;                        w = Math.abs(A - y) <= I;                        v = Math.abs(D - F) <= I;                        u = Math.abs(B - G) <= I;                        if (x) {                            K.position.top = J._convertPositionTo("relative", {                                top: C,                                left: 0                            }).top - J.margins.top                        }                        if (w) {                            K.position.top = J._convertPositionTo("relative", {                                top: A - J.helperProportions.height,                                left: 0                            }).top - J.margins.top                        }                        if (v) {                            K.position.left = J._convertPositionTo("relative", {                                top: 0,                                left: D                            }).left - J.margins.left                        }                        if (u) {                            K.position.left = J._convertPositionTo("relative", {                                top: 0,                                left: B - J.helperProportions.width                            }).left - J.margins.left                        }                    }                    if (!J.snapElements[E].snapping && (x || w || v || u || d)) {                        J.options.snap.snap && J.options.snap.snap.call(J.element, L, a.extend(J._uiHash(), {                            snapItem: J.snapElements[E].item                        }))                    }                    J.snapElements[E].snapping = x || w || v || u || d                } else {                    J.snapElements[E].snapping && J.options.snap.release && J.options.snap.release.call(J.element, L, a.extend(J._uiHash(), {                        snapItem: J.snapElements[E].item                    }));                    J.snapElements[E].snapping = false                }            }        }    });    a.ui.plugin.add("draggable", "stack", {        start: function () {            var d = a(this).data("draggable").options;            d = a.makeArray(a(d.stack)).sort(function (e, b) {                return (parseInt(a(e).css("zIndex"), 10) || 0) - (parseInt(a(b).css("zIndex"), 10) || 0)            });            if (d.length) {                var c = parseInt(d[0].style.zIndex) || 0;                a(d).each(function (b) {                    this.style.zIndex = c + b                });                this[0].style.zIndex = c + d.length            }        }    });    a.ui.plugin.add("draggable", "zIndex", {        start: function (d, c) {            d = a(c.helper);            c = a(this).data("draggable").options;            if (d.css("zIndex")) {                c._zIndex = d.css("zIndex")            }            d.css("zIndex", c.zIndex)        },        stop: function (d, c) {            d = a(this).data("draggable").options;            d._zIndex && a(c.helper).css("zIndex", d._zIndex)        }    })})(jQuery);(function (a) {    a.widget("ui.droppable", {        widgetEventPrefix: "drop",        options: {            accept: "*",            activeClass: false,            addClasses: true,            greedy: false,            hoverClass: false,            scope: "default",            tolerance: "intersect"        },        _create: function () {            var d = this.options,                c = d.accept;            this.isover = 0;            this.isout = 1;            this.accept = a.isFunction(c) ? c : function (b) {                return b.is(c)            };            this.proportions = {                width: this.element[0].offsetWidth,                height: this.element[0].offsetHeight            };            a.ui.ddmanager.droppables[d.scope] = a.ui.ddmanager.droppables[d.scope] || [];            a.ui.ddmanager.droppables[d.scope].push(this);            d.addClasses && this.element.addClass("ui-droppable")        },        destroy: function () {            for (var d = a.ui.ddmanager.droppables[this.options.scope], c = 0; c < d.length; c++) {                d[c] == this && d.splice(c, 1)            }            this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");            return this        },        _setOption: function (d, c) {            if (d == "accept") {                this.accept = a.isFunction(c) ? c : function (b) {                    return b.is(c)                }            }            a.Widget.prototype._setOption.apply(this, arguments)        },        _activate: function (d) {            var c = a.ui.ddmanager.current;            this.options.activeClass && this.element.addClass(this.options.activeClass);            c && this._trigger("activate", d, this.ui(c))        },        _deactivate: function (d) {            var c = a.ui.ddmanager.current;            this.options.activeClass && this.element.removeClass(this.options.activeClass);            c && this._trigger("deactivate", d, this.ui(c))        },        _over: function (d) {            var c = a.ui.ddmanager.current;            if (!(!c || (c.currentItem || c.element)[0] == this.element[0])) {                if (this.accept.call(this.element[0], c.currentItem || c.element)) {                    this.options.hoverClass && this.element.addClass(this.options.hoverClass);                    this._trigger("over", d, this.ui(c))                }            }        },        _out: function (d) {            var c = a.ui.ddmanager.current;            if (!(!c || (c.currentItem || c.element)[0] == this.element[0])) {                if (this.accept.call(this.element[0], c.currentItem || c.element)) {                    this.options.hoverClass && this.element.removeClass(this.options.hoverClass);                    this._trigger("out", d, this.ui(c))                }            }        },        _drop: function (f, d) {            var h = d || a.ui.ddmanager.current;            if (!h || (h.currentItem || h.element)[0] == this.element[0]) {                return false            }            var g = false;            this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function () {                var b = a.data(this, "droppable");                if (b.options.greedy && !b.options.disabled && b.options.scope == h.options.scope && b.accept.call(b.element[0], h.currentItem || h.element) && a.ui.intersect(h, a.extend(b, {                    offset: b.element.offset()                }), b.options.tolerance)) {                    g = true;                    return false                }            });            if (g) {                return false            }            if (this.accept.call(this.element[0], h.currentItem || h.element)) {                this.options.activeClass && this.element.removeClass(this.options.activeClass);                this.options.hoverClass && this.element.removeClass(this.options.hoverClass);                this._trigger("drop", f, this.ui(h));                return this.element            }            return false        },        ui: function (b) {            return {                draggable: b.currentItem || b.element,                helper: b.helper,                position: b.position,                offset: b.positionAbs            }        }    });    a.extend(a.ui.droppable, {        version: "1.8.16"    });    a.ui.intersect = function (x, w, v) {        if (!w.offset) {            return false        }        var u = (x.positionAbs || x.position.absolute).left,            r = u + x.helperProportions.width,            s = (x.positionAbs || x.position.absolute).top,            q = s + x.helperProportions.height,            p = w.offset.left,            n = p + w.proportions.width,            o = w.offset.top,            d = o + w.proportions.height;        switch (v) {        case "fit":            return p <= u && r <= n && o <= s && q <= d;        case "intersect":            return p < u + x.helperProportions.width / 2 && r - x.helperProportions.width / 2 < n && o < s + x.helperProportions.height / 2 && q - x.helperProportions.height / 2 < d;        case "pointer":            return a.ui.isOver((x.positionAbs || x.position.absolute).top + (x.clickOffset || x.offset.click).top, (x.positionAbs || x.position.absolute).left + (x.clickOffset || x.offset.click).left, o, p, w.proportions.height, w.proportions.width);        case "touch":            return (s >= o && s <= d || q >= o && q <= d || s < o && q > d) && (u >= p && u <= n || r >= p && r <= n || u < p && r > n);        default:            return false        }    };    a.ui.ddmanager = {        current: null,        droppables: {            "default": []        },        prepareOffsets: function (i, d) {            var o = a.ui.ddmanager.droppables[i.options.scope] || [],                n = d ? d.type : null,                k = (i.currentItem || i.element).find(":data(droppable)").andSelf(),                l = 0;            i: for (; l < o.length; l++) {                if (!(o[l].options.disabled || i && !o[l].accept.call(o[l].element[0], i.currentItem || i.element))) {                    for (var j = 0; j < k.length; j++) {                        if (k[j] == o[l].element[0]) {                            o[l].proportions.height = 0;                            continue i                        }                    }                    o[l].visible = o[l].element.css("display") != "none";                    if (o[l].visible) {                        n == "mousedown" && o[l]._activate.call(o[l], d);                        o[l].offset = o[l].element.offset();                        o[l].proportions = {                            width: o[l].element[0].offsetWidth,                            height: o[l].element[0].offsetHeight                        }                    }                }            }        },        drop: function (e, d) {            var f = false;            a.each(a.ui.ddmanager.droppables[e.options.scope] || [], function () {                if (this.options) {                    if (!this.options.disabled && this.visible && a.ui.intersect(e, this, this.options.tolerance)) {                        f = f || this._drop.call(this, d)                    }                    if (!this.options.disabled && this.visible && this.accept.call(this.element[0], e.currentItem || e.element)) {                        this.isout = 1;                        this.isover = 0;                        this._deactivate.call(this, d)                    }                }            });            return f        },        dragStart: function (d, c) {            d.element.parents(":not(body,html)").bind("scroll.droppable", function () {                d.options.refreshPositions || a.ui.ddmanager.prepareOffsets(d, c)            })        },        drag: function (d, c) {            d.options.refreshPositions && a.ui.ddmanager.prepareOffsets(d, c);            a.each(a.ui.ddmanager.droppables[d.options.scope] || [], function () {                if (!(this.options.disabled || this.greedyChild || !this.visible)) {                    var h = a.ui.intersect(d, this, this.options.tolerance);                    if (h = !h && this.isover == 1 ? "isout" : h && this.isover == 0 ? "isover" : null) {                        var f;                        if (this.options.greedy) {                            var b = this.element.parents(":data(droppable):eq(0)");                            if (b.length) {                                f = a.data(b[0], "droppable");                                f.greedyChild = h == "isover" ? 1 : 0                            }                        }                        if (f && h == "isover") {                            f.isover = 0;                            f.isout = 1;                            f._out.call(f, c)                        }                        this[h] = 1;                        this[h == "isout" ? "isover" : "isout"] = 0;                        this[h == "isover" ? "_over" : "_out"].call(this, c);                        if (f && h == "isout") {                            f.isout = 0;                            f.isover = 1;                            f._over.call(f, c)                        }                    }                }            })        },        dragStop: function (d, c) {            d.element.parents(":not(body,html)").unbind("scroll.droppable");            d.options.refreshPositions || a.ui.ddmanager.prepareOffsets(d, c)        }    }})(jQuery);(function (c) {    c.widget("ui.resizable", c.ui.mouse, {        widgetEventPrefix: "resize",        options: {            alsoResize: false,            animate: false,            animateDuration: "slow",            animateEasing: "swing",            aspectRatio: false,            autoHide: false,            containment: false,            ghost: false,            grid: false,            handles: "e,s,se",            helper: false,            maxHeight: null,            maxWidth: null,            minHeight: 10,            minWidth: 10,            zIndex: 1000        },        _create: function () {            var e = this,                h = this.options;            this.element.addClass("ui-resizable");            c.extend(this, {                _aspectRatio: !! h.aspectRatio,                aspectRatio: h.aspectRatio,                originalElement: this.element,                _proportionallyResizeElements: [],                _helper: h.helper || h.ghost || h.animate ? h.helper || "ui-resizable-helper" : null            });            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {                /relative/.test(this.element.css("position")) && c.browser.opera && this.element.css({                    position: "relative",                    top: "auto",                    left: "auto"                });                this.element.wrap(c('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({                    position: this.element.css("position"),                    width: this.element.outerWidth(),                    height: this.element.outerHeight(),                    top: this.element.css("top"),                    left: this.element.css("left")                }));                this.element = this.element.parent().data("resizable", this.element.data("resizable"));                this.elementIsWrapper = true;                this.element.css({                    marginLeft: this.originalElement.css("marginLeft"),                    marginTop: this.originalElement.css("marginTop"),                    marginRight: this.originalElement.css("marginRight"),                    marginBottom: this.originalElement.css("marginBottom")                });                this.originalElement.css({                    marginLeft: 0,                    marginTop: 0,                    marginRight: 0,                    marginBottom: 0                });                this.originalResizeStyle = this.originalElement.css("resize");                this.originalElement.css("resize", "none");                this._proportionallyResizeElements.push(this.originalElement.css({                    position: "static",                    zoom: 1,                    display: "block"                }));                this.originalElement.css({                    margin: this.originalElement.css("margin")                });                this._proportionallyResize()            }            this.handles = h.handles || (!c(".ui-resizable-handle", this.element).length ? "e,s,se" : {                n: ".ui-resizable-n",                e: ".ui-resizable-e",                s: ".ui-resizable-s",                w: ".ui-resizable-w",                se: ".ui-resizable-se",                sw: ".ui-resizable-sw",                ne: ".ui-resizable-ne",                nw: ".ui-resizable-nw"            });            if (this.handles.constructor == String) {                if (this.handles == "all") {                    this.handles = "n,e,s,w,se,sw,ne,nw"                }                var l = this.handles.split(",");                this.handles = {};                for (var k = 0; k < l.length; k++) {                    var j = c.trim(l[k]),                        i = c('<div class="ui-resizable-handle ' + ("ui-resizable-" + j) + '"></div>');                    /sw|se|ne|nw/.test(j) && i.css({                        zIndex: ++h.zIndex                    });                    "se" == j && i.addClass("ui-icon ui-icon-gripsmall-diagonal-se");                    this.handles[j] = ".ui-resizable-" + j;                    this.element.append(i)                }            }            this._renderAxis = function (n) {                n = n || this.element;                for (var g in this.handles) {                    if (this.handles[g].constructor == String) {                        this.handles[g] = c(this.handles[g], this.element).show()                    }                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {                        var f = c(this.handles[g], this.element),                            d = 0;                        d = /sw|ne|nw|se|n|s/.test(g) ? f.outerHeight() : f.outerWidth();                        f = ["padding", /ne|nw|n/.test(g) ? "Top" : /se|sw|s/.test(g) ? "Bottom" : /^e$/.test(g) ? "Right" : "Left"].join("");                        n.css(f, d);                        this._proportionallyResize()                    }                    c(this.handles[g])                }            };            this._renderAxis(this.element);            this._handles = c(".ui-resizable-handle", this.element).disableSelection();            this._handles.mouseover(function () {                if (!e.resizing) {                    if (this.className) {                        var d = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)                    }                    e.axis = d && d[1] ? d[1] : "se"                }            });            if (h.autoHide) {                this._handles.hide();                c(this.element).addClass("ui-resizable-autohide").hover(function () {                    if (!h.disabled) {                        c(this).removeClass("ui-resizable-autohide");                        e._handles.show()                    }                }, function () {                    if (!h.disabled) {                        if (!e.resizing) {                            c(this).addClass("ui-resizable-autohide");                            e._handles.hide()                        }                    }                })            }            this._mouseInit()        },        destroy: function () {            this._mouseDestroy();            var d = function (f) {                c(f).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()            };            if (this.elementIsWrapper) {                d(this.element);                var e = this.element;                e.after(this.originalElement.css({                    position: e.css("position"),                    width: e.outerWidth(),                    height: e.outerHeight(),                    top: e.css("top"),                    left: e.css("left")                })).remove()            }            this.originalElement.css("resize", this.originalResizeStyle);            d(this.originalElement);            return this        },        _mouseCapture: function (d) {            var e = false;            for (var f in this.handles) {                if (c(this.handles[f])[0] == d.target) {                    e = true                }            }            return !this.options.disabled && e        },        _mouseStart: function (e) {            var g = this.options,                j = this.element.position(),                i = this.element;            this.resizing = true;            this.documentScroll = {                top: c(document).scrollTop(),                left: c(document).scrollLeft()            };            if (i.is(".ui-draggable") || /absolute/.test(i.css("position"))) {                i.css({                    position: "absolute",                    top: j.top,                    left: j.left                })            }            c.browser.opera && /relative/.test(i.css("position")) && i.css({                position: "relative",                top: "auto",                left: "auto"            });            this._renderProxy();            j = a(this.helper.css("left"));            var h = a(this.helper.css("top"));            if (g.containment) {                j += c(g.containment).scrollLeft() || 0;                h += c(g.containment).scrollTop() || 0            }            this.offset = this.helper.offset();            this.position = {                left: j,                top: h            };            this.size = this._helper ? {                width: i.outerWidth(),                height: i.outerHeight()            } : {                width: i.width(),                height: i.height()            };            this.originalSize = this._helper ? {                width: i.outerWidth(),                height: i.outerHeight()            } : {                width: i.width(),                height: i.height()            };            this.originalPosition = {                left: j,                top: h            };            this.sizeDiff = {                width: i.outerWidth() - i.width(),                height: i.outerHeight() - i.height()            };            this.originalMousePosition = {                left: e.pageX,                top: e.pageY            };            this.aspectRatio = typeof g.aspectRatio == "number" ? g.aspectRatio : this.originalSize.width / this.originalSize.height || 1;            g = c(".ui-resizable-" + this.axis).css("cursor");            c("body").css("cursor", g == "auto" ? this.axis + "-resize" : g);            i.addClass("ui-resizable-resizing");            this._propagate("start", e);            return true        },        _mouseDrag: function (e) {            var f = this.helper,                h = this.originalMousePosition,                g = this._change[this.axis];            if (!g) {                return false            }            h = g.apply(this, [e, e.pageX - h.left || 0, e.pageY - h.top || 0]);            this._updateVirtualBoundaries(e.shiftKey);            if (this._aspectRatio || e.shiftKey) {                h = this._updateRatio(h, e)            }            h = this._respectSize(h, e);            this._propagate("resize", e);            f.css({                top: this.position.top + "px",                left: this.position.left + "px",                width: this.size.width + "px",                height: this.size.height + "px"            });            !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize();            this._updateCache(h);            this._trigger("resize", e, this.ui());            return false        },        _mouseStop: function (e) {            this.resizing = false;            var h = this.options,                l = this;            if (this._helper) {                var k = this._proportionallyResizeElements,                    j = k.length && /textarea/i.test(k[0].nodeName);                k = j && c.ui.hasScroll(k[0], "left") ? 0 : l.sizeDiff.height;                j = j ? 0 : l.sizeDiff.width;                j = {                    width: l.helper.width() - j,                    height: l.helper.height() - k                };                k = parseInt(l.element.css("left"), 10) + (l.position.left - l.originalPosition.left) || null;                var i = parseInt(l.element.css("top"), 10) + (l.position.top - l.originalPosition.top) || null;                h.animate || this.element.css(c.extend(j, {                    top: i,                    left: k                }));                l.helper.height(l.size.height);                l.helper.width(l.size.width);                this._helper && !h.animate && this._proportionallyResize()            }            c("body").css("cursor", "auto");            this.element.removeClass("ui-resizable-resizing");            this._propagate("stop", e);            this._helper && this.helper.remove();            return false        },        _updateVirtualBoundaries: function (e) {            var g = this.options,                j, i, h;            g = {                minWidth: b(g.minWidth) ? g.minWidth : 0,                maxWidth: b(g.maxWidth) ? g.maxWidth : Infinity,                minHeight: b(g.minHeight) ? g.minHeight : 0,                maxHeight: b(g.maxHeight) ? g.maxHeight : Infinity            };            if (this._aspectRatio || e) {                e = g.minHeight * this.aspectRatio;                i = g.minWidth / this.aspectRatio;                j = g.maxHeight * this.aspectRatio;                h = g.maxWidth / this.aspectRatio;                if (e > g.minWidth) {                    g.minWidth = e                }                if (i > g.minHeight) {                    g.minHeight = i                }                if (j < g.maxWidth) {                    g.maxWidth = j                }                if (h < g.maxHeight) {                    g.maxHeight = h                }            }            this._vBoundaries = g        },        _updateCache: function (d) {            this.offset = this.helper.offset();            if (b(d.left)) {                this.position.left = d.left            }            if (b(d.top)) {                this.position.top = d.top            }            if (b(d.height)) {                this.size.height = d.height            }            if (b(d.width)) {                this.size.width = d.width            }        },        _updateRatio: function (e) {            var f = this.position,                h = this.size,                g = this.axis;            if (b(e.height)) {                e.width = e.height * this.aspectRatio            } else {                if (b(e.width)) {                    e.height = e.width / this.aspectRatio                }            } if (g == "sw") {                e.left = f.left + (h.width - e.width);                e.top = null            }            if (g == "nw") {                e.top = f.top + (h.height - e.height);                e.left = f.left + (h.width - e.width)            }            return e        },        _respectSize: function (u) {            var v = this._vBoundaries,                s = this.axis,                r = b(u.width) && v.maxWidth && v.maxWidth < u.width,                q = b(u.height) && v.maxHeight && v.maxHeight < u.height,                p = b(u.width) && v.minWidth && v.minWidth > u.width,                o = b(u.height) && v.minHeight && v.minHeight > u.height;            if (p) {                u.width = v.minWidth            }            if (o) {                u.height = v.minHeight            }            if (r) {                u.width = v.maxWidth            }            if (q) {                u.height = v.maxHeight            }            var n = this.originalPosition.left + this.originalSize.width,                k = this.position.top + this.size.height,                e = /sw|nw|w/.test(s);            s = /nw|ne|n/.test(s);            if (p && e) {                u.left = n - v.minWidth            }            if (r && e) {                u.left = n - v.maxWidth            }            if (o && s) {                u.top = k - v.minHeight            }            if (q && s) {                u.top = k - v.maxHeight            }            if ((v = !u.width && !u.height) && !u.left && u.top) {                u.top = null            } else {                if (v && !u.top && u.left) {                    u.left = null                }            }            return u        },        _proportionallyResize: function () {            if (this._proportionallyResizeElements.length) {                for (var e = this.helper || this.element, g = 0; g < this._proportionallyResizeElements.length; g++) {                    var j = this._proportionallyResizeElements[g];                    if (!this.borderDif) {                        var i = [j.css("borderTopWidth"), j.css("borderRightWidth"), j.css("borderBottomWidth"), j.css("borderLeftWidth")],                            h = [j.css("paddingTop"), j.css("paddingRight"), j.css("paddingBottom"), j.css("paddingLeft")];                        this.borderDif = c.map(i, function (f, d) {                            f = parseInt(f, 10) || 0;                            d = parseInt(h[d], 10) || 0;                            return f + d                        })                    }                    c.browser.msie && (c(e).is(":hidden") || c(e).parents(":hidden").length) || j.css({                        height: e.height() - this.borderDif[0] - this.borderDif[2] || 0,                        width: e.width() - this.borderDif[1] - this.borderDif[3] || 0                    })                }            }        },        _renderProxy: function () {            var d = this.options;            this.elementOffset = this.element.offset();            if (this._helper) {                this.helper = this.helper || c('<div style="overflow:hidden;"></div>');                var e = c.browser.msie && c.browser.version < 7,                    f = e ? 1 : 0;                e = e ? 2 : -1;                this.helper.addClass(this._helper).css({                    width: this.element.outerWidth() + e,                    height: this.element.outerHeight() + e,                    position: "absolute",                    left: this.elementOffset.left - f + "px",                    top: this.elementOffset.top - f + "px",                    zIndex: ++d.zIndex                });                this.helper.appendTo("body").disableSelection()            } else {                this.helper = this.element            }        },        _change: {            e: function (d, e) {                return {                    width: this.originalSize.width + e                }            },            w: function (d, e) {                return {                    left: this.originalPosition.left + e,                    width: this.originalSize.width - e                }            },            n: function (d, e, f) {                return {                    top: this.originalPosition.top + f,                    height: this.originalSize.height - f                }            },            s: function (d, e, f) {                return {                    height: this.originalSize.height + f                }            },            se: function (d, e, f) {                return c.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [d, e, f]))            },            sw: function (d, e, f) {                return c.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [d, e, f]))            },            ne: function (d, e, f) {                return c.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [d, e, f]))            },            nw: function (d, e, f) {                return c.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [d, e, f]))            }        },        _propagate: function (d, e) {            c.ui.plugin.call(this, d, [e, this.ui()]);            d != "resize" && this._trigger(d, e, this.ui())        },        plugins: {},        ui: function () {            return {                originalElement: this.originalElement,                element: this.element,                helper: this.helper,                position: this.position,                size: this.size,                originalSize: this.originalSize,                originalPosition: this.originalPosition            }        }    });    c.extend(c.ui.resizable, {        version: "1.8.16"    });    c.ui.plugin.add("resizable", "alsoResize", {        start: function () {            var d = c(this).data("resizable").options,                e = function (f) {                    c(f).each(function () {                        var g = c(this);                        g.data("resizable-alsoresize", {                            width: parseInt(g.width(), 10),                            height: parseInt(g.height(), 10),                            left: parseInt(g.css("left"), 10),                            top: parseInt(g.css("top"), 10),                            position: g.css("position")                        })                    })                };            if (typeof d.alsoResize == "object" && !d.alsoResize.parentNode) {                if (d.alsoResize.length) {                    d.alsoResize = d.alsoResize[0];                    e(d.alsoResize)                } else {                    c.each(d.alsoResize, function (f) {                        e(f)                    })                }            } else {                e(d.alsoResize)            }        },        resize: function (e, i) {            var o = c(this).data("resizable");            e = o.options;            var n = o.originalSize,                l = o.originalPosition,                k = {                    height: o.size.height - n.height || 0,                    width: o.size.width - n.width || 0,                    top: o.position.top - l.top || 0,                    left: o.position.left - l.left || 0                }, j = function (f, d) {                    c(f).each(function () {                        var g = c(this),                            s = c(this).data("resizable-alsoresize"),                            u = {}, h = d && d.length ? d : g.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];                        c.each(h, function (q, p) {                            if ((q = (s[p] || 0) + (k[p] || 0)) && q >= 0) {                                u[p] = q || null                            }                        });                        if (c.browser.opera && /relative/.test(g.css("position"))) {                            o._revertToRelativePosition = true;                            g.css({                                position: "absolute",                                top: "auto",                                left: "auto"                            })                        }                        g.css(u)                    })                };            typeof e.alsoResize == "object" && !e.alsoResize.nodeType ? c.each(e.alsoResize, function (f, d) {                j(f, d)            }) : j(e.alsoResize)        },        stop: function () {            var d = c(this).data("resizable"),                e = d.options,                f = function (g) {                    c(g).each(function () {                        var h = c(this);                        h.css({                            position: h.data("resizable-alsoresize").position                        })                    })                };            if (d._revertToRelativePosition) {                d._revertToRelativePosition = false;                typeof e.alsoResize == "object" && !e.alsoResize.nodeType ? c.each(e.alsoResize, function (g) {                    f(g)                }) : f(e.alsoResize)            }            c(this).removeData("resizable-alsoresize")        }    });    c.ui.plugin.add("resizable", "animate", {        stop: function (e) {            var i = c(this).data("resizable"),                o = i.options,                n = i._proportionallyResizeElements,                l = n.length && /textarea/i.test(n[0].nodeName),                k = l && c.ui.hasScroll(n[0], "left") ? 0 : i.sizeDiff.height;            l = {                width: i.size.width - (l ? 0 : i.sizeDiff.width),                height: i.size.height - k            };            k = parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left) || null;            var j = parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top) || null;            i.element.animate(c.extend(l, j && k ? {                top: j,                left: k            } : {}), {                duration: o.animateDuration,                easing: o.animateEasing,                step: function () {                    var d = {                        width: parseInt(i.element.css("width"), 10),                        height: parseInt(i.element.css("height"), 10),                        top: parseInt(i.element.css("top"), 10),                        left: parseInt(i.element.css("left"), 10)                    };                    n && n.length && c(n[0]).css({                        width: d.width,                        height: d.height                    });                    i._updateCache(d);                    i._propagate("resize", e)                }            })        }    });    c.ui.plugin.add("resizable", "containment", {        start: function () {            var e = c(this).data("resizable"),                i = e.element,                o = e.options.containment;            if (i = o instanceof c ? o.get(0) : /parent/.test(o) ? i.parent().get(0) : o) {                e.containerElement = c(i);                if (/document/.test(o) || o == document) {                    e.containerOffset = {                        left: 0,                        top: 0                    };                    e.containerPosition = {                        left: 0,                        top: 0                    };                    e.parentData = {                        element: c(document),                        left: 0,                        top: 0,                        width: c(document).width(),                        height: c(document).height() || document.body.parentNode.scrollHeight                    }                } else {                    var n = c(i),                        l = [];                    c(["Top", "Right", "Left", "Bottom"]).each(function (f, d) {                        l[f] = a(n.css("padding" + d))                    });                    e.containerOffset = n.offset();                    e.containerPosition = n.position();                    e.containerSize = {                        height: n.innerHeight() - l[3],                        width: n.innerWidth() - l[1]                    };                    o = e.containerOffset;                    var k = e.containerSize.height,                        j = e.containerSize.width;                    j = c.ui.hasScroll(i, "left") ? i.scrollWidth : j;                    k = c.ui.hasScroll(i) ? i.scrollHeight : k;                    e.parentData = {                        element: i,                        left: o.left,                        top: o.top,                        width: j,                        height: k                    }                }            }        },        resize: function (e) {            var i = c(this).data("resizable"),                o = i.options,                n = i.containerOffset,                l = i.position;            e = i._aspectRatio || e.shiftKey;            var k = {                top: 0,                left: 0            }, j = i.containerElement;            if (j[0] != document && /static/.test(j.css("position"))) {                k = n            }            if (l.left < (i._helper ? n.left : 0)) {                i.size.width += i._helper ? i.position.left - n.left : i.position.left - k.left;                if (e) {                    i.size.height = i.size.width / o.aspectRatio                }                i.position.left = o.helper ? n.left : 0            }            if (l.top < (i._helper ? n.top : 0)) {                i.size.height += i._helper ? i.position.top - n.top : i.position.top;                if (e) {                    i.size.width = i.size.height * o.aspectRatio                }                i.position.top = i._helper ? n.top : 0            }            i.offset.left = i.parentData.left + i.position.left;            i.offset.top = i.parentData.top + i.position.top;            o = Math.abs((i._helper ? i.offset.left - k.left : i.offset.left - k.left) + i.sizeDiff.width);            n = Math.abs((i._helper ? i.offset.top - k.top : i.offset.top - n.top) + i.sizeDiff.height);            l = i.containerElement.get(0) == i.element.parent().get(0);            k = /relative|absolute/.test(i.containerElement.css("position"));            if (l && k) {                o -= i.parentData.left            }            if (o + i.size.width >= i.parentData.width) {                i.size.width = i.parentData.width - o;                if (e) {                    i.size.height = i.size.width / i.aspectRatio                }            }            if (n + i.size.height >= i.parentData.height) {                i.size.height = i.parentData.height - n;                if (e) {                    i.size.width = i.size.height * i.aspectRatio                }            }        },        stop: function () {            var e = c(this).data("resizable"),                j = e.options,                q = e.containerOffset,                p = e.containerPosition,                o = e.containerElement,                n = c(e.helper),                l = n.offset(),                k = n.outerWidth() - e.sizeDiff.width;            n = n.outerHeight() - e.sizeDiff.height;            e._helper && !j.animate && /relative/.test(o.css("position")) && c(this).css({                left: l.left - p.left - q.left,                width: k,                height: n            });            e._helper && !j.animate && /static/.test(o.css("position")) && c(this).css({                left: l.left - p.left - q.left,                width: k,                height: n            })        }    });    c.ui.plugin.add("resizable", "ghost", {        start: function () {            var d = c(this).data("resizable"),                e = d.options,                f = d.size;            d.ghost = d.originalElement.clone();            d.ghost.css({                opacity: 0.25,                display: "block",                position: "relative",                height: f.height,                width: f.width,                margin: 0,                left: 0,                top: 0            }).addClass("ui-resizable-ghost").addClass(typeof e.ghost == "string" ? e.ghost : "");            d.ghost.appendTo(d.helper)        },        resize: function () {            var d = c(this).data("resizable");            d.ghost && d.ghost.css({                position: "relative",                height: d.size.height,                width: d.size.width            })        },        stop: function () {            var d = c(this).data("resizable");            d.ghost && d.helper && d.helper.get(0).removeChild(d.ghost.get(0))        }    });    c.ui.plugin.add("resizable", "grid", {        resize: function () {            var e = c(this).data("resizable"),                i = e.options,                o = e.size,                n = e.originalSize,                l = e.originalPosition,                k = e.axis;            i.grid = typeof i.grid == "number" ? [i.grid, i.grid] : i.grid;            var j = Math.round((o.width - n.width) / (i.grid[0] || 1)) * (i.grid[0] || 1);            i = Math.round((o.height - n.height) / (i.grid[1] || 1)) * (i.grid[1] || 1);            if (/^(se|s|e)$/.test(k)) {                e.size.width = n.width + j;                e.size.height = n.height + i            } else {                if (/^(ne)$/.test(k)) {                    e.size.width = n.width + j;                    e.size.height = n.height + i;                    e.position.top = l.top - i                } else {                    if (/^(sw)$/.test(k)) {                        e.size.width = n.width + j;                        e.size.height = n.height + i                    } else {                        e.size.width = n.width + j;                        e.size.height = n.height + i;                        e.position.top = l.top - i                    }                    e.position.left = l.left - j                }            }        }    });    var a = function (d) {        return parseInt(d, 10) || 0    }, b = function (d) {            return !isNaN(parseInt(d, 10))        }})(jQuery);(function (a) {    a.widget("ui.selectable", a.ui.mouse, {        options: {            appendTo: "body",            autoRefresh: true,            distance: 0,            filter: "*",            tolerance: "touch"        },        _create: function () {            var d = this;            this.element.addClass("ui-selectable");            this.dragged = false;            var b;            this.refresh = function () {                b = a(d.options.filter, d.element[0]);                b.each(function () {                    var e = a(this),                        c = e.offset();                    a.data(this, "selectable-item", {                        element: this,                        $element: e,                        left: c.left,                        top: c.top,                        right: c.left + e.outerWidth(),                        bottom: c.top + e.outerHeight(),                        startselected: false,                        selected: e.hasClass("ui-selected"),                        selecting: e.hasClass("ui-selecting"),                        unselecting: e.hasClass("ui-unselecting")                    })                })            };            this.refresh();            this.selectees = b.addClass("ui-selectee");            this._mouseInit();            this.helper = a("<div class='ui-selectable-helper'></div>")        },        destroy: function () {            this.selectees.removeClass("ui-selectee").removeData("selectable-item");            this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");            this._mouseDestroy();            return this        },        _mouseStart: function (g) {            var b = this;            this.opos = [g.pageX, g.pageY];            if (!this.options.disabled) {                var e = this.options;                this.selectees = a(e.filter, this.element[0]);                this._trigger("start", g);                a(e.appendTo).append(this.helper);                this.helper.css({                    left: g.clientX,                    top: g.clientY,                    width: 0,                    height: 0                });                e.autoRefresh && this.refresh();                this.selectees.filter(".ui-selected").each(function () {                    var c = a.data(this, "selectable-item");                    c.startselected = true;                    if (!g.metaKey) {                        c.$element.removeClass("ui-selected");                        c.selected = false;                        c.$element.addClass("ui-unselecting");                        c.unselecting = true;                        b._trigger("unselecting", g, {                            unselecting: c.element                        })                    }                });                a(g.target).parents().andSelf().each(function () {                    var c = a.data(this, "selectable-item");                    if (c) {                        var d = !g.metaKey || !c.$element.hasClass("ui-selected");                        c.$element.removeClass(d ? "ui-unselecting" : "ui-selected").addClass(d ? "ui-selecting" : "ui-unselecting");                        c.unselecting = !d;                        c.selecting = d;                        (c.selected = d) ? b._trigger("selecting", g, {                            selecting: c.element                        }) : b._trigger("unselecting", g, {                            unselecting: c.element                        });                        return false                    }                })            }        },        _mouseDrag: function (r) {            var p = this;            this.dragged = true;            if (!this.options.disabled) {                var q = this.options,                    e = this.opos[0],                    o = this.opos[1],                    n = r.pageX,                    l = r.pageY;                if (e > n) {                    var k = n;                    n = e;                    e = k                }                if (o > l) {                    k = l;                    l = o;                    o = k                }                this.helper.css({                    left: e,                    top: o,                    width: n - e,                    height: l - o                });                this.selectees.each(function () {                    var b = a.data(this, "selectable-item");                    if (!(!b || b.element == p.element[0])) {                        var c = false;                        if (q.tolerance == "touch") {                            c = !(b.left > n || b.right < e || b.top > l || b.bottom < o)                        } else {                            if (q.tolerance == "fit") {                                c = b.left > e && b.right < n && b.top > o && b.bottom < l                            }                        } if (c) {                            if (b.selected) {                                b.$element.removeClass("ui-selected");                                b.selected = false                            }                            if (b.unselecting) {                                b.$element.removeClass("ui-unselecting");                                b.unselecting = false                            }                            if (!b.selecting) {                                b.$element.addClass("ui-selecting");                                b.selecting = true;                                p._trigger("selecting", r, {                                    selecting: b.element                                })                            }                        } else {                            if (b.selecting) {                                if (r.metaKey && b.startselected) {                                    b.$element.removeClass("ui-selecting");                                    b.selecting = false;                                    b.$element.addClass("ui-selected");                                    b.selected = true                                } else {                                    b.$element.removeClass("ui-selecting");                                    b.selecting = false;                                    if (b.startselected) {                                        b.$element.addClass("ui-unselecting");                                        b.unselecting = true                                    }                                    p._trigger("unselecting", r, {                                        unselecting: b.element                                    })                                }                            }                            if (b.selected) {                                if (!r.metaKey && !b.startselected) {                                    b.$element.removeClass("ui-selected");                                    b.selected = false;                                    b.$element.addClass("ui-unselecting");                                    b.unselecting = true;                                    p._trigger("unselecting", r, {                                        unselecting: b.element                                    })                                }                            }                        }                    }                });                return false            }        },        _mouseStop: function (d) {            var b = this;            this.dragged = false;            a(".ui-unselecting", this.element[0]).each(function () {                var c = a.data(this, "selectable-item");                c.$element.removeClass("ui-unselecting");                c.unselecting = false;                c.startselected = false;                b._trigger("unselected", d, {                    unselected: c.element                })            });            a(".ui-selecting", this.element[0]).each(function () {                var c = a.data(this, "selectable-item");                c.$element.removeClass("ui-selecting").addClass("ui-selected");                c.selecting = false;                c.selected = true;                c.startselected = true;                b._trigger("selected", d, {                    selected: c.element                })            });            this._trigger("stop", d);            this.helper.remove();            return false        }    });    a.extend(a.ui.selectable, {        version: "1.8.16"    })})(jQuery);(function (a) {    a.widget("ui.sortable", a.ui.mouse, {        widgetEventPrefix: "sort",        options: {            appendTo: "parent",            axis: false,            connectWith: false,            containment: false,            cursor: "auto",            cursorAt: false,            dropOnEmpty: true,            forcePlaceholderSize: false,            forceHelperSize: false,            grid: false,            handle: false,            helper: "original",            items: "> *",            opacity: false,            placeholder: false,            revert: false,            scroll: true,            scrollSensitivity: 20,            scrollSpeed: 20,            scope: "default",            tolerance: "intersect",            zIndex: 1000        },        _create: function () {            var b = this.options;            this.containerCache = {};            this.element.addClass("ui-sortable");            this.refresh();            this.floating = this.items.length ? b.axis === "x" || /left|right/.test(this.items[0].item.css("float")) || /inline|table-cell/.test(this.items[0].item.css("display")) : false;            this.offset = this.element.offset();            this._mouseInit()        },        destroy: function () {            this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");            this._mouseDestroy();            for (var b = this.items.length - 1; b >= 0; b--) {                this.items[b].item.removeData("sortable-item")            }            return this        },        _setOption: function (d, c) {            if (d === "disabled") {                this.options[d] = c;                this.widget()[c ? "addClass" : "removeClass"]("ui-sortable-disabled")            } else {                a.Widget.prototype._setOption.apply(this, arguments)            }        },        _mouseCapture: function (g, d) {            if (this.reverting) {                return false            }            if (this.options.disabled || this.options.type == "static") {                return false            }            this._refreshItems(g);            var j = null,                i = this;            a(g.target).parents().each(function () {                if (a.data(this, "sortable-item") == i) {                    j = a(this);                    return false                }            });            if (a.data(g.target, "sortable-item") == i) {                j = a(g.target)            }            if (!j) {                return false            }            if (this.options.handle && !d) {                var h = false;                a(this.options.handle, j).find("*").andSelf().each(function () {                    if (this == g.target) {                        h = true                    }                });                if (!h) {                    return false                }            }            this.currentItem = j;            this._removeCurrentsFromItems();            return true        },        _mouseStart: function (f, d, h) {            d = this.options;            var g = this;            this.currentContainer = this;            this.refreshPositions();            this.helper = this._createHelper(f);            this._cacheHelperProportions();            this._cacheMargins();            this.scrollParent = this.helper.scrollParent();            this.offset = this.currentItem.offset();            this.offset = {                top: this.offset.top - this.margins.top,                left: this.offset.left - this.margins.left            };            this.helper.css("position", "absolute");            this.cssPosition = this.helper.css("position");            a.extend(this.offset, {                click: {                    left: f.pageX - this.offset.left,                    top: f.pageY - this.offset.top                },                parent: this._getParentOffset(),                relative: this._getRelativeOffset()            });            this.originalPosition = this._generatePosition(f);            this.originalPageX = f.pageX;            this.originalPageY = f.pageY;            d.cursorAt && this._adjustOffsetFromHelper(d.cursorAt);            this.domPosition = {                prev: this.currentItem.prev()[0],                parent: this.currentItem.parent()[0]            };            this.helper[0] != this.currentItem[0] && this.currentItem.hide();            this._createPlaceholder();            d.containment && this._setContainment();            if (d.cursor) {                if (a("body").css("cursor")) {                    this._storedCursor = a("body").css("cursor")                }                a("body").css("cursor", d.cursor)            }            if (d.opacity) {                if (this.helper.css("opacity")) {                    this._storedOpacity = this.helper.css("opacity")                }                this.helper.css("opacity", d.opacity)            }            if (d.zIndex) {                if (this.helper.css("zIndex")) {                    this._storedZIndex = this.helper.css("zIndex")                }                this.helper.css("zIndex", d.zIndex)            }            if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {                this.overflowOffset = this.scrollParent.offset()            }            this._trigger("start", f, this._uiHash());            this._preserveHelperProportions || this._cacheHelperProportions();            if (!h) {                for (h = this.containers.length - 1; h >= 0; h--) {                    this.containers[h]._trigger("activate", f, g._uiHash(this))                }            }            if (a.ui.ddmanager) {                a.ui.ddmanager.current = this            }            a.ui.ddmanager && !d.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, f);            this.dragging = true;            this.helper.addClass("ui-sortable-helper");            this._mouseDrag(f);            return true        },        _mouseDrag: function (g) {            this.position = this._generatePosition(g);            this.positionAbs = this._convertPositionTo("absolute");            if (!this.lastPositionAbs) {                this.lastPositionAbs = this.positionAbs            }            if (this.options.scroll) {                var d = this.options,                    j = false;                if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {                    if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - g.pageY < d.scrollSensitivity) {                        this.scrollParent[0].scrollTop = j = this.scrollParent[0].scrollTop + d.scrollSpeed                    } else {                        if (g.pageY - this.overflowOffset.top < d.scrollSensitivity) {                            this.scrollParent[0].scrollTop = j = this.scrollParent[0].scrollTop - d.scrollSpeed                        }                    } if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - g.pageX < d.scrollSensitivity) {                        this.scrollParent[0].scrollLeft = j = this.scrollParent[0].scrollLeft + d.scrollSpeed                    } else {                        if (g.pageX - this.overflowOffset.left < d.scrollSensitivity) {                            this.scrollParent[0].scrollLeft = j = this.scrollParent[0].scrollLeft - d.scrollSpeed                        }                    }                } else {                    if (g.pageY - a(document).scrollTop() < d.scrollSensitivity) {                        j = a(document).scrollTop(a(document).scrollTop() - d.scrollSpeed)                    } else {                        if (a(window).height() - (g.pageY - a(document).scrollTop()) < d.scrollSensitivity) {                            j = a(document).scrollTop(a(document).scrollTop() + d.scrollSpeed)                        }                    } if (g.pageX - a(document).scrollLeft() < d.scrollSensitivity) {                        j = a(document).scrollLeft(a(document).scrollLeft() - d.scrollSpeed)                    } else {                        if (a(window).width() - (g.pageX - a(document).scrollLeft()) < d.scrollSensitivity) {                            j = a(document).scrollLeft(a(document).scrollLeft() + d.scrollSpeed)                        }                    }                }                j !== false && a.ui.ddmanager && !d.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, g)            }            this.positionAbs = this._convertPositionTo("absolute");            if (!this.options.axis || this.options.axis != "y") {                this.helper[0].style.left = this.position.left + "px"            }            if (!this.options.axis || this.options.axis != "x") {                this.helper[0].style.top = this.position.top + "px"            }            for (d = this.items.length - 1; d >= 0; d--) {                j = this.items[d];                var i = j.item[0],                    h = this._intersectsWithPointer(j);                if (h) {                    if (i != this.currentItem[0] && this.placeholder[h == 1 ? "next" : "prev"]()[0] != i && !a.ui.contains(this.placeholder[0], i) && (this.options.type == "semi-dynamic" ? !a.ui.contains(this.element[0], i) : true)) {                        this.direction = h == 1 ? "down" : "up";                        if (this.options.tolerance == "pointer" || this._intersectsWithSides(j)) {                            this._rearrange(g, j)                        } else {                            break                        }                        this._trigger("change", g, this._uiHash());                        break                    }                }            }            this._contactContainers(g);            a.ui.ddmanager && a.ui.ddmanager.drag(this, g);            this._trigger("sort", g, this._uiHash());            this.lastPositionAbs = this.positionAbs;            return false        },        _mouseStop: function (e, d) {            if (e) {                a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, e);                if (this.options.revert) {                    var f = this;                    d = f.placeholder.offset();                    f.reverting = true;                    a(this.helper).animate({                        left: d.left - this.offset.parent.left - f.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),                        top: d.top - this.offset.parent.top - f.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)                    }, parseInt(this.options.revert, 10) || 500, function () {                        f._clear(e)                    })                } else {                    this._clear(e, d)                }                return false            }        },        cancel: function () {            var d = this;            if (this.dragging) {                this._mouseUp({                    target: null                });                this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();                for (var c = this.containers.length - 1; c >= 0; c--) {                    this.containers[c]._trigger("deactivate", null, d._uiHash(this));                    if (this.containers[c].containerCache.over) {                        this.containers[c]._trigger("out", null, d._uiHash(this));                        this.containers[c].containerCache.over = 0                    }                }            }            if (this.placeholder) {                this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]);                this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove();                a.extend(this, {                    helper: null,                    dragging: false,                    reverting: false,                    _noFinalSort: null                });                this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem)            }            return this        },        serialize: function (e) {            var d = this._getItemsAsjQuery(e && e.connected),                f = [];            e = e || {};            a(d).each(function () {                var b = (a(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[-=_](.+)/);                if (b) {                    f.push((e.key || b[1] + "[]") + "=" + (e.key && e.expression ? b[1] : b[2]))                }            });            !f.length && e.key && f.push(e.key + "=");            return f.join("&")        },        toArray: function (e) {            var d = this._getItemsAsjQuery(e && e.connected),                f = [];            e = e || {};            d.each(function () {                f.push(a(e.item || this).attr(e.attribute || "id") || "")            });            return f        },        _intersectsWith: function (x) {            var w = this.positionAbs.left,                v = w + this.helperProportions.width,                u = this.positionAbs.top,                s = u + this.helperProportions.height,                r = x.left,                q = r + x.width,                p = x.top,                n = p + x.height,                o = this.offset.click.top,                d = this.offset.click.left;            o = u + o > p && u + o < n && w + d > r && w + d < q;            return this.options.tolerance == "pointer" || this.options.forcePointerForContainers || this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > x[this.floating ? "width" : "height"] ? o : r < w + this.helperProportions.width / 2 && v - this.helperProportions.width / 2 < q && p < u + this.helperProportions.height / 2 && s - this.helperProportions.height / 2 < n        },        _intersectsWithPointer: function (e) {            var d = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, e.top, e.height);            e = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, e.left, e.width);            d = d && e;            e = this._getDragVerticalDirection();            var f = this._getDragHorizontalDirection();            if (!d) {                return false            }            return this.floating ? f && f == "right" || e == "down" ? 2 : 1 : e && (e == "down" ? 2 : 1)        },        _intersectsWithSides: function (f) {            var d = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, f.top + f.height / 2, f.height);            f = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, f.left + f.width / 2, f.width);            var h = this._getDragVerticalDirection(),                g = this._getDragHorizontalDirection();            return this.floating && g ? g == "right" && f || g == "left" && !f : h && (h == "down" && d || h == "up" && !d)        },        _getDragVerticalDirection: function () {            var b = this.positionAbs.top - this.lastPositionAbs.top;            return b != 0 && (b > 0 ? "down" : "up")        },        _getDragHorizontalDirection: function () {            var b = this.positionAbs.left - this.lastPositionAbs.left;            return b != 0 && (b > 0 ? "right" : "left")        },        refresh: function (b) {            this._refreshItems(b);            this.refreshPositions();            return this        },        _connectWith: function () {            var b = this.options;            return b.connectWith.constructor == String ? [b.connectWith] : b.connectWith        },        _getItemsAsjQuery: function (i) {            var d = [],                o = [],                n = this._connectWith();            if (n && i) {                for (i = n.length - 1; i >= 0; i--) {                    for (var l = a(n[i]), k = l.length - 1; k >= 0; k--) {                        var j = a.data(l[k], "sortable");                        if (j && j != this && !j.options.disabled) {                            o.push([a.isFunction(j.options.items) ? j.options.items.call(j.element) : a(j.options.items, j.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), j])                        }                    }                }            }            o.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, {                options: this.options,                item: this.currentItem            }) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);            for (i = o.length - 1; i >= 0; i--) {                o[i][0].each(function () {                    d.push(this)                })            }            return a(d)        },        _removeCurrentsFromItems: function () {            for (var e = this.currentItem.find(":data(sortable-item)"), d = 0; d < this.items.length; d++) {                for (var f = 0; f < e.length; f++) {                    e[f] == this.items[d].item[0] && this.items.splice(d, 1)                }            }        },        _refreshItems: function (j) {            this.items = [];            this.containers = [this];            var d = this.items,                q = [                    [a.isFunction(this.options.items) ? this.options.items.call(this.element[0], j, {                        item: this.currentItem                    }) : a(this.options.items, this.element), this]                ],                p = this._connectWith();            if (p) {                for (var o = p.length - 1; o >= 0; o--) {                    for (var n = a(p[o]), l = n.length - 1; l >= 0; l--) {                        var k = a.data(n[l], "sortable");                        if (k && k != this && !k.options.disabled) {                            q.push([a.isFunction(k.options.items) ? k.options.items.call(k.element[0], j, {                                item: this.currentItem                            }) : a(k.options.items, k.element), k]);                            this.containers.push(k)                        }                    }                }            }            for (o = q.length - 1; o >= 0; o--) {                j = q[o][1];                p = q[o][0];                l = 0;                for (n = p.length; l < n; l++) {                    k = a(p[l]);                    k.data("sortable-item", j);                    d.push({                        item: k,                        instance: j,                        width: 0,                        height: 0,                        left: 0,                        top: 0                    })                }            }        },        refreshPositions: function (f) {            if (this.offsetParent && this.helper) {                this.offset.parent = this._getParentOffset()            }            for (var d = this.items.length - 1; d >= 0; d--) {                var h = this.items[d];                if (!(h.instance != this.currentContainer && this.currentContainer && h.item[0] != this.currentItem[0])) {                    var g = this.options.toleranceElement ? a(this.options.toleranceElement, h.item) : h.item;                    if (!f) {                        h.width = g.outerWidth();                        h.height = g.outerHeight()                    }                    g = g.offset();                    h.left = g.left;                    h.top = g.top                }            }            if (this.options.custom && this.options.custom.refreshContainers) {                this.options.custom.refreshContainers.call(this)            } else {                for (d = this.containers.length - 1; d >= 0; d--) {                    g = this.containers[d].element.offset();                    this.containers[d].containerCache.left = g.left;                    this.containers[d].containerCache.top = g.top;                    this.containers[d].containerCache.width = this.containers[d].element.outerWidth();                    this.containers[d].containerCache.height = this.containers[d].element.outerHeight()                }            }            return this        },        _createPlaceholder: function (f) {            var d = f || this,                h = d.options;            if (!h.placeholder || h.placeholder.constructor == String) {                var g = h.placeholder;                h.placeholder = {                    element: function () {                        var b = a(document.createElement(d.currentItem[0].nodeName)).addClass(g || d.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];                        if (!g) {                            b.style.visibility = "hidden"                        }                        return b                    },                    update: function (c, b) {                        if (!(g && !h.forcePlaceholderSize)) {                            b.height() || b.height(d.currentItem.innerHeight() - parseInt(d.currentItem.css("paddingTop") || 0, 10) - parseInt(d.currentItem.css("paddingBottom") || 0, 10));                            b.width() || b.width(d.currentItem.innerWidth() - parseInt(d.currentItem.css("paddingLeft") || 0, 10) - parseInt(d.currentItem.css("paddingRight") || 0, 10))                        }                    }                }            }            d.placeholder = a(h.placeholder.element.call(d.element, d.currentItem));            d.currentItem.after(d.placeholder);            h.placeholder.update(d, d.placeholder)        },        _contactContainers: function (i) {            for (var d = null, o = null, n = this.containers.length - 1; n >= 0; n--) {                if (!a.ui.contains(this.currentItem[0], this.containers[n].element[0])) {                    if (this._intersectsWith(this.containers[n].containerCache)) {                        if (!(d && a.ui.contains(this.containers[n].element[0], d.element[0]))) {                            d = this.containers[n];                            o = n                        }                    } else {                        if (this.containers[n].containerCache.over) {                            this.containers[n]._trigger("out", i, this._uiHash(this));                            this.containers[n].containerCache.over = 0                        }                    }                }            }            if (d) {                if (this.containers.length === 1) {                    this.containers[o]._trigger("over", i, this._uiHash(this));                    this.containers[o].containerCache.over = 1                } else {                    if (this.currentContainer != this.containers[o]) {                        d = 10000;                        n = null;                        for (var l = this.positionAbs[this.containers[o].floating ? "left" : "top"], k = this.items.length - 1; k >= 0; k--) {                            if (a.ui.contains(this.containers[o].element[0], this.items[k].item[0])) {                                var j = this.items[k][this.containers[o].floating ? "left" : "top"];                                if (Math.abs(j - l) < d) {                                    d = Math.abs(j - l);                                    n = this.items[k]                                }                            }                        }                        if (n || this.options.dropOnEmpty) {                            this.currentContainer = this.containers[o];                            n ? this._rearrange(i, n, null, true) : this._rearrange(i, null, this.containers[o].element, true);                            this._trigger("change", i, this._uiHash());                            this.containers[o]._trigger("change", i, this._uiHash(this));                            this.options.placeholder.update(this.currentContainer, this.placeholder);                            this.containers[o]._trigger("over", i, this._uiHash(this));                            this.containers[o].containerCache.over = 1                        }                    }                }            }        },        _createHelper: function (d) {            var c = this.options;            d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [d, this.currentItem])) : c.helper == "clone" ? this.currentItem.clone() : this.currentItem;            d.parents("body").length || a(c.appendTo != "parent" ? c.appendTo : this.currentItem[0].parentNode)[0].appendChild(d[0]);            if (d[0] == this.currentItem[0]) {                this._storedCSS = {                    width: this.currentItem[0].style.width,                    height: this.currentItem[0].style.height,                    position: this.currentItem.css("position"),                    top: this.currentItem.css("top"),                    left: this.currentItem.css("left")                }            }            if (d[0].style.width == "" || c.forceHelperSize) {                d.width(this.currentItem.width())            }            if (d[0].style.height == "" || c.forceHelperSize) {                d.height(this.currentItem.height())            }            return d        },        _adjustOffsetFromHelper: function (b) {            if (typeof b == "string") {                b = b.split(" ")            }            if (a.isArray(b)) {                b = {                    left: +b[0],                    top: +b[1] || 0                }            }            if ("left" in b) {                this.offset.click.left = b.left + this.margins.left            }            if ("right" in b) {                this.offset.click.left = this.helperProportions.width - b.right + this.margins.left            }            if ("top" in b) {                this.offset.click.top = b.top + this.margins.top            }            if ("bottom" in b) {                this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top            }        },        _getParentOffset: function () {            this.offsetParent = this.helper.offsetParent();            var b = this.offsetParent.offset();            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) {                b.left += this.scrollParent.scrollLeft();                b.top += this.scrollParent.scrollTop()            }            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) {                b = {                    top: 0,                    left: 0                }            }            return {                top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),                left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)            }        },        _getRelativeOffset: function () {            if (this.cssPosition == "relative") {                var b = this.currentItem.position();                return {                    top: b.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),                    left: b.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()                }            } else {                return {                    top: 0,                    left: 0                }            }        },        _cacheMargins: function () {            this.margins = {                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,                top: parseInt(this.currentItem.css("marginTop"), 10) || 0            }        },        _cacheHelperProportions: function () {            this.helperProportions = {                width: this.helper.outerWidth(),                height: this.helper.outerHeight()            }        },        _setContainment: function () {            var e = this.options;            if (e.containment == "parent") {                e.containment = this.helper[0].parentNode            }            if (e.containment == "document" || e.containment == "window") {                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(e.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(e.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]            }            if (!/^(document|window|parent)$/.test(e.containment)) {                var d = a(e.containment)[0];                e = a(e.containment).offset();                var f = a(d).css("overflow") != "hidden";                this.containment = [e.left + (parseInt(a(d).css("borderLeftWidth"), 10) || 0) + (parseInt(a(d).css("paddingLeft"), 10) || 0) - this.margins.left, e.top + (parseInt(a(d).css("borderTopWidth"), 10) || 0) + (parseInt(a(d).css("paddingTop"), 10) || 0) - this.margins.top, e.left + (f ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(a(d).css("borderLeftWidth"), 10) || 0) - (parseInt(a(d).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e.top + (f ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(a(d).css("borderTopWidth"), 10) || 0) - (parseInt(a(d).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]            }        },        _convertPositionTo: function (f, d) {            if (!d) {                d = this.position            }            f = f == "absolute" ? 1 : -1;            var h = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,                g = /(html|body)/i.test(h[0].tagName);            return {                top: d.top + this.offset.relative.top * f + this.offset.parent.top * f - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : h.scrollTop()) * f),                left: d.left + this.offset.relative.left * f + this.offset.parent.left * f - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : h.scrollLeft()) * f)            }        },        _generatePosition: function (h) {            var d = this.options,                l = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,                k = /(html|body)/i.test(l[0].tagName);            if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) {                this.offset.relative = this._getRelativeOffset()            }            var j = h.pageX,                i = h.pageY;            if (this.originalPosition) {                if (this.containment) {                    if (h.pageX - this.offset.click.left < this.containment[0]) {                        j = this.containment[0] + this.offset.click.left                    }                    if (h.pageY - this.offset.click.top < this.containment[1]) {                        i = this.containment[1] + this.offset.click.top                    }                    if (h.pageX - this.offset.click.left > this.containment[2]) {                        j = this.containment[2] + this.offset.click.left                    }                    if (h.pageY - this.offset.click.top > this.containment[3]) {                        i = this.containment[3] + this.offset.click.top                    }                }                if (d.grid) {                    i = this.originalPageY + Math.round((i - this.originalPageY) / d.grid[1]) * d.grid[1];                    i = this.containment ? !(i - this.offset.click.top < this.containment[1] || i - this.offset.click.top > this.containment[3]) ? i : !(i - this.offset.click.top < this.containment[1]) ? i - d.grid[1] : i + d.grid[1] : i;                    j = this.originalPageX + Math.round((j - this.originalPageX) / d.grid[0]) * d.grid[0];                    j = this.containment ? !(j - this.offset.click.left < this.containment[0] || j - this.offset.click.left > this.containment[2]) ? j : !(j - this.offset.click.left < this.containment[0]) ? j - d.grid[0] : j + d.grid[0] : j                }            }            return {                top: i - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : k ? 0 : l.scrollTop()),                left: j - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : k ? 0 : l.scrollLeft())            }        },        _rearrange: function (h, d, l, k) {            l ? l[0].appendChild(this.placeholder[0]) : d.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? d.item[0] : d.item[0].nextSibling);            this.counter = this.counter ? ++this.counter : 1;            var j = this,                i = this.counter;            window.setTimeout(function () {                i == j.counter && j.refreshPositions(!k)            }, 0)        },        _clear: function (f, d) {            this.reverting = false;            var h = [];            !this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem);            this._noFinalSort = null;            if (this.helper[0] == this.currentItem[0]) {                for (var g in this._storedCSS) {                    if (this._storedCSS[g] == "auto" || this._storedCSS[g] == "static") {                        this._storedCSS[g] = ""                    }                }                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")            } else {                this.currentItem.show()            }            this.fromOutside && !d && h.push(function (b) {                this._trigger("receive", b, this._uiHash(this.fromOutside))            });            if ((this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !d) {                h.push(function (b) {                    this._trigger("update", b, this._uiHash())                })            }            if (!a.ui.contains(this.element[0], this.currentItem[0])) {                d || h.push(function (b) {                    this._trigger("remove", b, this._uiHash())                });                for (g = this.containers.length - 1; g >= 0; g--) {                    if (a.ui.contains(this.containers[g].element[0], this.currentItem[0]) && !d) {                        h.push(function (b) {                            return function (c) {                                b._trigger("receive", c, this._uiHash(this))                            }                        }.call(this, this.containers[g]));                        h.push(function (b) {                            return function (c) {                                b._trigger("update", c, this._uiHash(this))                            }                        }.call(this, this.containers[g]))                    }                }            }            for (g = this.containers.length - 1; g >= 0; g--) {                d || h.push(function (b) {                    return function (c) {                        b._trigger("deactivate", c, this._uiHash(this))                    }                }.call(this, this.containers[g]));                if (this.containers[g].containerCache.over) {                    h.push(function (b) {                        return function (c) {                            b._trigger("out", c, this._uiHash(this))                        }                    }.call(this, this.containers[g]));                    this.containers[g].containerCache.over = 0                }            }            this._storedCursor && a("body").css("cursor", this._storedCursor);            this._storedOpacity && this.helper.css("opacity", this._storedOpacity);            if (this._storedZIndex) {                this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex)            }            this.dragging = false;            if (this.cancelHelperRemoval) {                if (!d) {                    this._trigger("beforeStop", f, this._uiHash());                    for (g = 0; g < h.length; g++) {                        h[g].call(this, f)                    }                    this._trigger("stop", f, this._uiHash())                }                return false            }            d || this._trigger("beforeStop", f, this._uiHash());            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);            this.helper[0] != this.currentItem[0] && this.helper.remove();            this.helper = null;            if (!d) {                for (g = 0; g < h.length; g++) {                    h[g].call(this, f)                }                this._trigger("stop", f, this._uiHash())            }            this.fromOutside = false;            return true        },        _trigger: function () {            a.Widget.prototype._trigger.apply(this, arguments) === false && this.cancel()        },        _uiHash: function (d) {            var c = d || this;            return {                helper: c.helper,                placeholder: c.placeholder || a([]),                position: c.position,                originalPosition: c.originalPosition,                offset: c.positionAbs,                item: c.currentItem,                sender: d ? d.element : null            }        }    });    a.extend(a.ui.sortable, {        version: "1.8.16"    })})(jQuery);(function (a) {    a.widget("ui.accordion", {        options: {            active: 0,            animated: "slide",            autoHeight: true,            clearStyle: false,            collapsible: false,            event: "click",            fillSpace: false,            header: "> li > :first-child,> :not(li):even",            icons: {                header: "ui-icon-triangle-1-e",                headerSelected: "ui-icon-triangle-1-s"            },            navigation: false,            navigationFilter: function () {                return this.href.toLowerCase() === location.href.toLowerCase()            }        },        _create: function () {            var e = this,                c = e.options;            e.running = 0;            e.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix");            e.headers = e.element.find(c.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion", function () {                c.disabled || a(this).addClass("ui-state-hover")            }).bind("mouseleave.accordion", function () {                c.disabled || a(this).removeClass("ui-state-hover")            }).bind("focus.accordion", function () {                c.disabled || a(this).addClass("ui-state-focus")            }).bind("blur.accordion", function () {                c.disabled || a(this).removeClass("ui-state-focus")            });            e.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");            if (c.navigation) {                var g = e.element.find("a").filter(c.navigationFilter).eq(0);                if (g.length) {                    var f = g.closest(".ui-accordion-header");                    e.active = f.length ? f : g.closest(".ui-accordion-content").prev()                }            }            e.active = e._findActive(e.active || c.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top");            e.active.next().addClass("ui-accordion-content-active");            e._createIcons();            e.resize();            e.element.attr("role", "tablist");            e.headers.attr("role", "tab").bind("keydown.accordion", function (b) {                return e._keydown(b)            }).next().attr("role", "tabpanel");            e.headers.not(e.active || "").attr({                "aria-expanded": "false",                "aria-selected": "false",                tabIndex: -1            }).next().hide();            e.active.length ? e.active.attr({                "aria-expanded": "true",                "aria-selected": "true",                tabIndex: 0            }) : e.headers.eq(0).attr("tabIndex", 0);            a.browser.safari || e.headers.find("a").attr("tabIndex", -1);            c.event && e.headers.bind(c.event.split(" ").join(".accordion ") + ".accordion", function (b) {                e._clickHandler.call(e, b, this);                b.preventDefault()            })        },        _createIcons: function () {            var b = this.options;            if (b.icons) {                a("<span></span>").addClass("ui-icon " + b.icons.header).prependTo(this.headers);                this.active.children(".ui-icon").toggleClass(b.icons.header).toggleClass(b.icons.headerSelected);                this.element.addClass("ui-accordion-icons")            }        },        _destroyIcons: function () {            this.headers.children(".ui-icon").remove();            this.element.removeClass("ui-accordion-icons")        },        destroy: function () {            var d = this.options;            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");            this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex");            this.headers.find("a").removeAttr("tabIndex");            this._destroyIcons();            var c = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled");            if (d.autoHeight || d.fillHeight) {                c.css("height", "")            }            return a.Widget.prototype.destroy.call(this)        },        _setOption: function (d, c) {            a.Widget.prototype._setOption.apply(this, arguments);            d == "active" && this.activate(c);            if (d == "icons") {                this._destroyIcons();                c && this._createIcons()            }            if (d == "disabled") {                this.headers.add(this.headers.next())[c ? "addClass" : "removeClass"]("ui-accordion-disabled ui-state-disabled")            }        },        _keydown: function (e) {            if (!(this.options.disabled || e.altKey || e.ctrlKey)) {                var c = a.ui.keyCode,                    j = this.headers.length,                    g = this.headers.index(e.target),                    i = false;                switch (e.keyCode) {                case c.RIGHT:                case c.DOWN:                    i = this.headers[(g + 1) % j];                    break;                case c.LEFT:                case c.UP:                    i = this.headers[(g - 1 + j) % j];                    break;                case c.SPACE:                case c.ENTER:                    this._clickHandler({                        target: e.target                    }, e.target);                    e.preventDefault()                }                if (i) {                    a(e.target).attr("tabIndex", -1);                    a(i).attr("tabIndex", 0);                    i.focus();                    return false                }                return true            }        },        resize: function () {            var e = this.options,                c;            if (e.fillSpace) {                if (a.browser.msie) {                    var f = this.element.parent().css("overflow");                    this.element.parent().css("overflow", "hidden")                }                c = this.element.parent().height();                a.browser.msie && this.element.parent().css("overflow", f);                this.headers.each(function () {                    c -= a(this).outerHeight(true)                });                this.headers.next().each(function () {                    a(this).height(Math.max(0, c - a(this).innerHeight() + a(this).height()))                }).css("overflow", "auto")            } else {                if (e.autoHeight) {                    c = 0;                    this.headers.next().each(function () {                        c = Math.max(c, a(this).height("").height())                    }).height(c)                }            }            return this        },        activate: function (b) {            this.options.active = b;            b = this._findActive(b)[0];            this._clickHandler({                target: b            }, b);            return this        },        _findActive: function (b) {            return b ? typeof b === "number" ? this.headers.filter(":eq(" + b + ")") : this.headers.not(this.headers.not(b)) : b === false ? a([]) : this.headers.filter(":eq(0)")        },        _clickHandler: function (i, c) {            var q = this.options;            if (!q.disabled) {                if (i.target) {                    i = a(i.currentTarget || c);                    c = i[0] === this.active[0];                    q.active = q.collapsible && c ? false : this.headers.index(i);                    if (!(this.running || !q.collapsible && c)) {                        var l = this.active;                        k = i.next();                        n = this.active.next();                        p = {                            options: q,                            newHeader: c && q.collapsible ? a([]) : i,                            oldHeader: this.active,                            newContent: c && q.collapsible ? a([]) : k,                            oldContent: n                        };                        var o = this.headers.index(this.active[0]) > this.headers.index(i[0]);                        this.active = c ? a([]) : i;                        this._toggle(k, n, p, c, o);                        l.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(q.icons.headerSelected).addClass(q.icons.header);                        if (!c) {                            i.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(q.icons.header).addClass(q.icons.headerSelected);                            i.next().addClass("ui-accordion-content-active")                        }                    }                } else {                    if (q.collapsible) {                        this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(q.icons.headerSelected).addClass(q.icons.header);                        this.active.next().addClass("ui-accordion-content-active");                        var n = this.active.next(),                            p = {                                options: q,                                newHeader: a([]),                                oldHeader: q.active,                                newContent: a([]),                                oldContent: n                            }, k = this.active = a([]);                        this._toggle(k, n, p)                    }                }            }        },        _toggle: function (v, u, s, o, q) {            var p = this,                r = p.options;            p.toShow = v;            p.toHide = u;            p.data = s;            var l = function () {                if (p) {                    return p._completed.apply(p, arguments)                }            };            p._trigger("changestart", null, p.data);            p.running = u.size() === 0 ? v.size() : u.size();            if (r.animated) {                s = {};                s = r.collapsible && o ? {                    toShow: a([]),                    toHide: u,                    complete: l,                    down: q,                    autoHeight: r.autoHeight || r.fillSpace                } : {                    toShow: v,                    toHide: u,                    complete: l,                    down: q,                    autoHeight: r.autoHeight || r.fillSpace                };                if (!r.proxied) {                    r.proxied = r.animated                }                if (!r.proxiedDuration) {                    r.proxiedDuration = r.duration                }                r.animated = a.isFunction(r.proxied) ? r.proxied(s) : r.proxied;                r.duration = a.isFunction(r.proxiedDuration) ? r.proxiedDuration(s) : r.proxiedDuration;                o = a.ui.accordion.animations;                var n = r.duration,                    c = r.animated;                if (c && !o[c] && !a.easing[c]) {                    c = "slide"                }                o[c] || (o[c] = function (b) {                    this.slide(b, {                        easing: c,                        duration: n || 700                    })                });                o[c](s)            } else {                if (r.collapsible && o) {                    v.toggle()                } else {                    u.hide();                    v.show()                }                l(true)            }            u.prev().attr({                "aria-expanded": "false",                "aria-selected": "false",                tabIndex: -1            }).blur();            v.prev().attr({                "aria-expanded": "true",                "aria-selected": "true",                tabIndex: 0            }).focus()        },        _completed: function (b) {            this.running = b ? 0 : --this.running;            if (!this.running) {                this.options.clearStyle && this.toShow.add(this.toHide).css({                    height: "",                    overflow: ""                });                this.toHide.removeClass("ui-accordion-content-active");                if (this.toHide.length) {                    this.toHide.parent()[0].className = this.toHide.parent()[0].className                }                this._trigger("change", null, this.data)            }        }    });    a.extend(a.ui.accordion, {        version: "1.8.16",        animations: {            slide: function (i, c) {                i = a.extend({                    easing: "swing",                    duration: 300                }, i, c);                if (i.toHide.size()) {                    if (i.toShow.size()) {                        var o = i.toShow.css("overflow"),                            j = 0,                            l = {}, k = {}, n;                        c = i.toShow;                        n = c[0].style.width;                        c.width(parseInt(c.parent().width(), 10) - parseInt(c.css("paddingLeft"), 10) - parseInt(c.css("paddingRight"), 10) - (parseInt(c.css("borderLeftWidth"), 10) || 0) - (parseInt(c.css("borderRightWidth"), 10) || 0));                        a.each(["height", "paddingTop", "paddingBottom"], function (b, d) {                            k[d] = "hide";                            b = ("" + a.css(i.toShow[0], d)).match(/^([\d+-.]+)(.*)$/);                            l[d] = {                                value: b[1],                                unit: b[2] || "px"                            }                        });                        i.toShow.css({                            height: 0,                            overflow: "hidden"                        }).show();                        i.toHide.filter(":hidden").each(i.complete).end().filter(":visible").animate(k, {                            step: function (b, d) {                                if (d.prop == "height") {                                    j = d.end - d.start === 0 ? 0 : (d.now - d.start) / (d.end - d.start)                                }                                i.toShow[0].style[d.prop] = j * l[d.prop].value + l[d.prop].unit                            },                            duration: i.duration,                            easing: i.easing,                            complete: function () {                                i.autoHeight || i.toShow.css("height", "");                                i.toShow.css({                                    width: n,                                    overflow: o                                });                                i.complete()                            }                        })                    } else {                        i.toHide.animate({                            height: "hide",                            paddingTop: "hide",                            paddingBottom: "hide"                        }, i)                    }                } else {                    i.toShow.animate({                        height: "show",                        paddingTop: "show",                        paddingBottom: "show"                    }, i)                }            },            bounceslide: function (b) {                this.slide(b, {                    easing: b.down ? "easeOutBounce" : "swing",                    duration: b.down ? 1000 : 200                })            }        }    })})(jQuery);(function (b) {    var a = 0;    b.widget("ui.autocomplete", {        options: {            appendTo: "body",            autoFocus: false,            delay: 300,            minLength: 1,            position: {                my: "left top",                at: "left bottom",                collision: "none"            },            source: null        },        pending: 0,        _create: function () {            var d = this,                c = this.element[0].ownerDocument,                e;            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off").attr({                role: "textbox",                "aria-autocomplete": "list",                "aria-haspopup": "true"            }).bind("keydown.autocomplete", function (h) {                if (!(d.options.disabled || d.element.propAttr("readOnly"))) {                    e = false;                    var g = b.ui.keyCode;                    switch (h.keyCode) {                    case g.PAGE_UP:                        d._move("previousPage", h);                        break;                    case g.PAGE_DOWN:                        d._move("nextPage", h);                        break;                    case g.UP:                        d._move("previous", h);                        h.preventDefault();                        break;                    case g.DOWN:                        d._move("next", h);                        h.preventDefault();                        break;                    case g.ENTER:                    case g.NUMPAD_ENTER:                        if (d.menu.active) {                            e = true;                            h.preventDefault()                        }                    case g.TAB:                        if (!d.menu.active) {                            return                        }                        d.menu.select(h);                        break;                    case g.ESCAPE:                        d.element.val(d.term);                        d.close(h);                        break;                    default:                        clearTimeout(d.searching);                        d.searching = setTimeout(function () {                            if (d.term != d.element.val()) {                                d.selectedItem = null;                                d.search(null, h)                            }                        }, d.options.delay);                        break                    }                }            }).bind("keypress.autocomplete", function (f) {                if (e) {                    e = false;                    f.preventDefault()                }            }).bind("focus.autocomplete", function () {                if (!d.options.disabled) {                    d.selectedItem = null;                    d.previous = d.element.val()                }            }).bind("blur.autocomplete", function (f) {                if (!d.options.disabled) {                    clearTimeout(d.searching);                    d.closing = setTimeout(function () {                        d.close(f);                        d._change(f)                    }, 150)                }            });            this._initSource();            this.response = function () {                return d._response.apply(d, arguments)            };            this.menu = b("<ul></ul>").addClass("ui-autocomplete").appendTo(b(this.options.appendTo || "body", c)[0]).mousedown(function (h) {                var g = d.menu.element[0];                b(h.target).closest(".ui-menu-item").length || setTimeout(function () {                    b(document).one("mousedown", function (f) {                        f.target !== d.element[0] && f.target !== g && !b.ui.contains(g, f.target) && d.close()                    })                }, 1);                setTimeout(function () {                    clearTimeout(d.closing)                }, 13)            }).menu({                focus: function (h, g) {                    g = g.item.data("item.autocomplete");                    false !== d._trigger("focus", h, {                        item: g                    }) && /^key/.test(h.originalEvent.type) && d.element.val(g.value)                },                selected: function (l, k) {                    var j = k.item.data("item.autocomplete"),                        g = d.previous;                    if (d.element[0] !== c.activeElement) {                        d.element.focus();                        d.previous = g;                        setTimeout(function () {                            d.previous = g;                            d.selectedItem = j                        }, 1)                    }                    false !== d._trigger("select", l, {                        item: j                    }) && d.element.val(j.value);                    d.term = d.element.val();                    d.close(l);                    d.selectedItem = j                },                blur: function () {                    d.menu.element.is(":visible") && d.element.val() !== d.term && d.element.val(d.term)                }            }).zIndex(this.element.zIndex() + 1).css({                top: 0,                left: 0            }).hide().data("menu");            b.fn.bgiframe && this.menu.element.bgiframe()        },        destroy: function () {            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");            this.menu.element.remove();            b.Widget.prototype.destroy.call(this)        },        _setOption: function (d, c) {            b.Widget.prototype._setOption.apply(this, arguments);            d === "source" && this._initSource();            if (d === "appendTo") {                this.menu.element.appendTo(b(c || "body", this.element[0].ownerDocument)[0])            }            d === "disabled" && c && this.xhr && this.xhr.abort()        },        _initSource: function () {            var d = this,                c, e;            if (b.isArray(this.options.source)) {                c = this.options.source;                this.source = function (h, g) {                    g(b.ui.autocomplete.filter(c, h.term))                }            } else {                if (typeof this.options.source === "string") {                    e = this.options.source;                    this.source = function (h, g) {                        d.xhr && d.xhr.abort();                        d.xhr = b.ajax({                            url: e,                            data: h,                            dataType: "json",                            autocompleteRequest: ++a,                            success: function (f) {                                this.autocompleteRequest === a && g(f)                            },                            error: function () {                                this.autocompleteRequest === a && g([])                            }                        })                    }                } else {                    this.source = this.options.source                }            }        },        search: function (d, c) {            d = d != null ? d : this.element.val();            this.term = this.element.val();            if (d.length < this.options.minLength) {                return this.close(c)            }            clearTimeout(this.closing);            if (this._trigger("search", c) !== false) {                return this._search(d)            }        },        _search: function (c) {            this.pending++;            this.element.addClass("ui-autocomplete-loading");            this.source({                term: c            }, this.response)        },        _response: function (c) {            if (!this.options.disabled && c && c.length) {                c = this._normalize(c);                this._suggest(c);                this._trigger("open")            } else {                this.close()            }            this.pending--;            this.pending || this.element.removeClass("ui-autocomplete-loading")        },        close: function (c) {            clearTimeout(this.closing);            if (this.menu.element.is(":visible")) {                this.menu.element.hide();                this.menu.deactivate();                this._trigger("close", c)            }        },        _change: function (c) {            this.previous !== this.element.val() && this._trigger("change", c, {                item: this.selectedItem            })        },        _normalize: function (c) {            if (c.length && c[0].label && c[0].value) {                return c            }            return b.map(c, function (d) {                if (typeof d === "string") {                    return {                        label: d,                        value: d                    }                }                return b.extend({                    label: d.label || d.value,                    value: d.value || d.label                }, d)            })        },        _suggest: function (d) {            var c = this.menu.element.empty().zIndex(this.element.zIndex() + 1);            this._renderMenu(c, d);            this.menu.deactivate();            this.menu.refresh();            c.show();            this._resizeMenu();            c.position(b.extend({                of: this.element            }, this.options.position));            this.options.autoFocus && this.menu.next(new b.Event("mouseover"))        },        _resizeMenu: function () {            var c = this.menu.element;            c.outerWidth(Math.max(c.width("").outerWidth(), this.element.outerWidth()))        },        _renderMenu: function (d, c) {            var e = this;            b.each(c, function (h, g) {                e._renderItem(d, g)            })        },        _renderItem: function (d, c) {            return b("<li></li>").data("item.autocomplete", c).append(b("<a></a>").text(c.label)).appendTo(d)        },        _move: function (d, c) {            if (this.menu.element.is(":visible")) {                if (this.menu.first() && /^previous/.test(d) || this.menu.last() && /^next/.test(d)) {                    this.element.val(this.term);                    this.menu.deactivate()                } else {                    this.menu[d](c)                }            } else {                this.search(null, c)            }        },        widget: function () {            return this.menu.element        }    });    b.extend(b.ui.autocomplete, {        escapeRegex: function (c) {            return c.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")        },        filter: function (d, c) {            var e = new RegExp(b.ui.autocomplete.escapeRegex(c), "i");            return b.grep(d, function (f) {                return e.test(f.label || f.value || f)            })        }    })})(jQuery);(function (a) {    a.widget("ui.menu", {        _create: function () {            var b = this;            this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({                role: "listbox",                "aria-activedescendant": "ui-active-menuitem"            }).click(function (c) {                if (a(c.target).closest(".ui-menu-item a").length) {                    c.preventDefault();                    b.select(c)                }            });            this.refresh()        },        refresh: function () {            var b = this;            this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "menuitem").children("a").addClass("ui-corner-all").attr("tabindex", -1).mouseenter(function (c) {                b.activate(c, a(this).parent())            }).mouseleave(function () {                b.deactivate()            })        },        activate: function (i, f) {            this.deactivate();            if (this.hasScroll()) {                var d = f.offset().top - this.element.offset().top,                    h = this.element.scrollTop(),                    j = this.element.height();                if (d < 0) {                    this.element.scrollTop(h + d)                } else {                    d >= j && this.element.scrollTop(h + d - j + f.height())                }            }            this.active = f.eq(0).children("a").addClass("ui-state-hover").attr("id", "ui-active-menuitem").end();            this._trigger("focus", i, {                item: f            })        },        deactivate: function () {            if (this.active) {                this.active.children("a").removeClass("ui-state-hover").removeAttr("id");                this._trigger("blur");                this.active = null            }        },        next: function (b) {            this.move("next", ".ui-menu-item:first", b)        },        previous: function (b) {            this.move("prev", ".ui-menu-item:last", b)        },        first: function () {            return this.active && !this.active.prevAll(".ui-menu-item").length        },        last: function () {            return this.active && !this.active.nextAll(".ui-menu-item").length        },        move: function (f, d, c) {            if (this.active) {                f = this.active[f + "All"](".ui-menu-item").eq(0);                f.length ? this.activate(c, f) : this.activate(c, this.element.children(d))            } else {                this.activate(c, this.element.children(d))            }        },        nextPage: function (h) {            if (this.hasScroll()) {                if (!this.active || this.last()) {                    this.activate(h, this.element.children(".ui-menu-item:first"))                } else {                    var d = this.active.offset().top,                        c = this.element.height(),                        f = this.element.children(".ui-menu-item").filter(function () {                            var b = a(this).offset().top - d - c + a(this).height();                            return b < 10 && b > -10                        });                    f.length || (f = this.element.children(".ui-menu-item:last"));                    this.activate(h, f)                }            } else {                this.activate(h, this.element.children(".ui-menu-item").filter(!this.active || this.last() ? ":first" : ":last"))            }        },        previousPage: function (f) {            if (this.hasScroll()) {                if (!this.active || this.first()) {                    this.activate(f, this.element.children(".ui-menu-item:last"))                } else {                    var d = this.active.offset().top,                        c = this.element.height();                    result = this.element.children(".ui-menu-item").filter(function () {                        var b = a(this).offset().top - d + c - a(this).height();                        return b < 10 && b > -10                    });                    result.length || (result = this.element.children(".ui-menu-item:first"));                    this.activate(f, result)                }            } else {                this.activate(f, this.element.children(".ui-menu-item").filter(!this.active || this.first() ? ":last" : ":first"))            }        },        hasScroll: function () {            return this.element.height() < this.element[a.fn.prop ? "prop" : "attr"]("scrollHeight")        },        select: function (b) {            this._trigger("selected", b, {                item: this.active            })        }    })})(jQuery);(function (a) {    var n, f, e, o, c = function () {            var b = a(this).find(":ui-button");            setTimeout(function () {                b.button("refresh")            }, 1)        }, d = function (b) {            var i = b.name,                h = b.form,                g = a([]);            if (i) {                g = h ? a(h).find("[name='" + i + "']") : a("[name='" + i + "']", b.ownerDocument).filter(function () {                    return !this.form                })            }            return g        };    a.widget("ui.button", {        options: {            disabled: null,            text: true,            label: null,            icons: {                primary: null,                secondary: null            }        },        _create: function () {            this.element.closest("form").unbind("reset.button").bind("reset.button", c);            if (typeof this.options.disabled !== "boolean") {                this.options.disabled = this.element.propAttr("disabled")            }            this._determineButtonType();            this.hasTitle = !! this.buttonElement.attr("title");            var b = this,                i = this.options,                h = this.type === "checkbox" || this.type === "radio",                g = "ui-state-hover" + (!h ? " ui-state-active" : "");            if (i.label === null) {                i.label = this.buttonElement.html()            }            if (this.element.is(":disabled")) {                i.disabled = true            }            this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role", "button").bind("mouseenter.button", function () {                if (!i.disabled) {                    a(this).addClass("ui-state-hover");                    this === n && a(this).addClass("ui-state-active")                }            }).bind("mouseleave.button", function () {                i.disabled || a(this).removeClass(g)            }).bind("click.button", function (j) {                if (i.disabled) {                    j.preventDefault();                    j.stopImmediatePropagation()                }            });            this.element.bind("focus.button", function () {                b.buttonElement.addClass("ui-state-focus")            }).bind("blur.button", function () {                b.buttonElement.removeClass("ui-state-focus")            });            if (h) {                this.element.bind("change.button", function () {                    o || b.refresh()                });                this.buttonElement.bind("mousedown.button", function (j) {                    if (!i.disabled) {                        o = false;                        f = j.pageX;                        e = j.pageY                    }                }).bind("mouseup.button", function (j) {                    if (!i.disabled) {                        if (f !== j.pageX || e !== j.pageY) {                            o = true                        }                    }                })            }            if (this.type === "checkbox") {                this.buttonElement.bind("click.button", function () {                    if (i.disabled || o) {                        return false                    }                    a(this).toggleClass("ui-state-active");                    b.buttonElement.attr("aria-pressed", b.element[0].checked)                })            } else {                if (this.type === "radio") {                    this.buttonElement.bind("click.button", function () {                        if (i.disabled || o) {                            return false                        }                        a(this).addClass("ui-state-active");                        b.buttonElement.attr("aria-pressed", "true");                        var j = b.element[0];                        d(j).not(j).map(function () {                            return a(this).button("widget")[0]                        }).removeClass("ui-state-active").attr("aria-pressed", "false")                    })                } else {                    this.buttonElement.bind("mousedown.button", function () {                        if (i.disabled) {                            return false                        }                        a(this).addClass("ui-state-active");                        n = this;                        a(document).one("mouseup", function () {                            n = null                        })                    }).bind("mouseup.button", function () {                        if (i.disabled) {                            return false                        }                        a(this).removeClass("ui-state-active")                    }).bind("keydown.button", function (j) {                        if (i.disabled) {                            return false                        }                        if (j.keyCode == a.ui.keyCode.SPACE || j.keyCode == a.ui.keyCode.ENTER) {                            a(this).addClass("ui-state-active")                        }                    }).bind("keyup.button", function () {                        a(this).removeClass("ui-state-active")                    });                    this.buttonElement.is("a") && this.buttonElement.keyup(function (j) {                        j.keyCode === a.ui.keyCode.SPACE && a(this).click()                    })                }            }            this._setOption("disabled", i.disabled);            this._resetButton()        },        _determineButtonType: function () {            this.type = this.element.is(":checkbox") ? "checkbox" : this.element.is(":radio") ? "radio" : this.element.is("input") ? "input" : "button";            if (this.type === "checkbox" || this.type === "radio") {                var b = this.element.parents().filter(":last"),                    g = "label[for='" + this.element.attr("id") + "']";                this.buttonElement = b.find(g);                if (!this.buttonElement.length) {                    b = b.length ? b.siblings() : this.element.siblings();                    this.buttonElement = b.filter(g);                    if (!this.buttonElement.length) {                        this.buttonElement = b.find(g)                    }                }                this.element.addClass("ui-helper-hidden-accessible");                (b = this.element.is(":checked")) && this.buttonElement.addClass("ui-state-active");                this.buttonElement.attr("aria-pressed", b)            } else {                this.buttonElement = this.element            }        },        widget: function () {            return this.buttonElement        },        destroy: function () {            this.element.removeClass("ui-helper-hidden-accessible");            this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-hover ui-state-active  ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());            this.hasTitle || this.buttonElement.removeAttr("title");            a.Widget.prototype.destroy.call(this)        },        _setOption: function (b, g) {            a.Widget.prototype._setOption.apply(this, arguments);            if (b === "disabled") {                g ? this.element.propAttr("disabled", true) : this.element.propAttr("disabled", false)            } else {                this._resetButton()            }        },        refresh: function () {            var b = this.element.is(":disabled");            b !== this.options.disabled && this._setOption("disabled", b);            if (this.type === "radio") {                d(this.element[0]).each(function () {                    a(this).is(":checked") ? a(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")                })            } else {                if (this.type === "checkbox") {                    this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false")                }            }        },        _resetButton: function () {            if (this.type === "input") {                this.options.label && this.element.val(this.options.label)            } else {                var b = this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"),                    j = a("<span></span>").addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(),                    h = this.options.icons,                    g = h.primary && h.secondary,                    i = [];                if (h.primary || h.secondary) {                    if (this.options.text) {                        i.push("ui-button-text-icon" + (g ? "s" : h.primary ? "-primary" : "-secondary"))                    }                    h.primary && b.prepend("<span class='ui-button-icon-primary ui-icon " + h.primary + "'></span>");                    h.secondary && b.append("<span class='ui-button-icon-secondary ui-icon " + h.secondary + "'></span>");                    if (!this.options.text) {                        i.push(g ? "ui-button-icons-only" : "ui-button-icon-only");                        this.hasTitle || b.attr("title", j)                    }                } else {                    i.push("ui-button-text-only")                }                b.addClass(i.join(" "))            }        }    });    a.widget("ui.buttonset", {        options: {            items: ":button, :submit, :reset, :checkbox, :radio, a, :data(button)"        },        _create: function () {            this.element.addClass("ui-buttonset")        },        _init: function () {            this.refresh()        },        _setOption: function (b, g) {            b === "disabled" && this.buttons.button("option", b, g);            a.Widget.prototype._setOption.apply(this, arguments)        },        refresh: function () {            var b = this.element.css("direction") === "ltr";            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function () {                return a(this).button("widget")[0]            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b ? "ui-corner-left" : "ui-corner-right").end().filter(":last").addClass(b ? "ui-corner-right" : "ui-corner-left").end().end()        },        destroy: function () {            this.element.removeClass("ui-buttonset");            this.buttons.map(function () {                return a(this).button("widget")[0]            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy");            a.Widget.prototype.destroy.call(this)        }    })})(jQuery);(function (f, b) {    var a = {        buttons: true,        height: true,        maxHeight: true,        maxWidth: true,        minHeight: true,        minWidth: true,        width: true    }, e = {            maxHeight: true,            maxWidth: true,            minHeight: true,            minWidth: true        }, d = f.attrFn || {            val: true,            css: true,            html: true,            text: true,            data: true,            width: true,            height: true,            offset: true,            click: true        };    f.widget("ui.dialog", {        options: {            autoOpen: true,            buttons: {},            closeOnEscape: true,            closeText: "close",            dialogClass: "",            draggable: true,            hide: null,            height: "auto",            maxHeight: false,            maxWidth: false,            minHeight: 150,            minWidth: 150,            modal: false,            position: {                my: "center",                at: "center",                collision: "fit",                using: function (g) {                    var c = f(this).css(g).offset().top;                    c < 0 && f(this).css("top", g.top - c)                }            },            resizable: true,            show: null,            stack: true,            title: "",            width: 300,            zIndex: 1000        },        _create: function () {            this.originalTitle = this.element.attr("title");            if (typeof this.originalTitle !== "string") {                this.originalTitle = ""            }            this.options.title = this.options.title || this.originalTitle;            var i = this,                c = i.options,                o = c.title || "&#160;",                n = f.ui.dialog.getTitleId(i.element),                k = (i.uiDialog = f("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + c.dialogClass).css({                    zIndex: c.zIndex                }).attr("tabIndex", -1).css("outline", 0).keydown(function (g) {                    if (c.closeOnEscape && !g.isDefaultPrevented() && g.keyCode && g.keyCode === f.ui.keyCode.ESCAPE) {                        i.close(g);                        g.preventDefault()                    }                }).attr({                    role: "dialog",                    "aria-labelledby": n                }).mousedown(function (g) {                    i.moveToTop(false, g)                });            i.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(k);            var l = (i.uiDialogTitlebar = f("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(k),                j = f('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role", "button").hover(function () {                    j.addClass("ui-state-hover")                }, function () {                    j.removeClass("ui-state-hover")                }).focus(function () {                    j.addClass("ui-state-focus")                }).blur(function () {                    j.removeClass("ui-state-focus")                }).click(function (g) {                    i.close(g);                    return false                }).appendTo(l);            (i.uiDialogTitlebarCloseText = f("<span></span>")).addClass("ui-icon ui-icon-closethick").text(c.closeText).appendTo(j);            f("<span></span>").addClass("ui-dialog-title").attr("id", n).html(o).prependTo(l);            if (f.isFunction(c.beforeclose) && !f.isFunction(c.beforeClose)) {                c.beforeClose = c.beforeclose            }            l.find("*").add(l).disableSelection();            c.draggable && f.fn.draggable && i._makeDraggable();            c.resizable && f.fn.resizable && i._makeResizable();            i._createButtons(c.buttons);            i._isOpen = false;            f.fn.bgiframe && k.bgiframe()        },        _init: function () {            this.options.autoOpen && this.open()        },        destroy: function () {            var c = this;            c.overlay && c.overlay.destroy();            c.uiDialog.hide();            c.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");            c.uiDialog.remove();            c.originalTitle && c.element.attr("title", c.originalTitle);            return c        },        widget: function () {            return this.uiDialog        },        close: function (g) {            var c = this,                i, h;            if (false !== c._trigger("beforeClose", g)) {                c.overlay && c.overlay.destroy();                c.uiDialog.unbind("keypress.ui-dialog");                c._isOpen = false;                if (c.options.hide) {                    c.uiDialog.hide(c.options.hide, function () {                        c._trigger("close", g)                    })                } else {                    c.uiDialog.hide();                    c._trigger("close", g)                }                f.ui.dialog.overlay.resize();                if (c.options.modal) {                    i = 0;                    f(".ui-dialog").each(function () {                        if (this !== c.uiDialog[0]) {                            h = f(this).css("z-index");                            isNaN(h) || (i = Math.max(i, h))                        }                    });                    f.ui.dialog.maxZ = i                }                return c            }        },        isOpen: function () {            return this._isOpen        },        moveToTop: function (g, c) {            var i = this,                h = i.options;            if (h.modal && !g || !h.stack && !h.modal) {                return i._trigger("focus", c)            }            if (h.zIndex > f.ui.dialog.maxZ) {                f.ui.dialog.maxZ = h.zIndex            }            if (i.overlay) {                f.ui.dialog.maxZ += 1;                i.overlay.$el.css("z-index", f.ui.dialog.overlay.maxZ = f.ui.dialog.maxZ)            }            g = {                scrollTop: i.element.scrollTop(),                scrollLeft: i.element.scrollLeft()            };            f.ui.dialog.maxZ += 1;            i.uiDialog.css("z-index", f.ui.dialog.maxZ);            i.element.attr(g);            i._trigger("focus", c);            return i        },        open: function () {            if (!this._isOpen) {                var g = this,                    c = g.options,                    h = g.uiDialog;                g.overlay = c.modal ? new f.ui.dialog.overlay(g) : null;                g._size();                g._position(c.position);                h.show(c.show);                g.moveToTop(true);                c.modal && h.bind("keypress.ui-dialog", function (k) {                    if (k.keyCode === f.ui.keyCode.TAB) {                        var i = f(":tabbable", this),                            j = i.filter(":first");                        i = i.filter(":last");                        if (k.target === i[0] && !k.shiftKey) {                            j.focus(1);                            return false                        } else {                            if (k.target === j[0] && k.shiftKey) {                                i.focus(1);                                return false                            }                        }                    }                });                f(g.element.find(":tabbable").get().concat(h.find(".ui-dialog-buttonpane :tabbable").get().concat(h.get()))).eq(0).focus();                g._isOpen = true;                g._trigger("open");                return g            }        },        _createButtons: function (h) {            var c = this,                k = false,                j = f("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),                i = f("<div></div>").addClass("ui-dialog-buttonset").appendTo(j);            c.uiDialog.find(".ui-dialog-buttonpane").remove();            typeof h === "object" && h !== null && f.each(h, function () {                return !(k = true)            });            if (k) {                f.each(h, function (n, l) {                    l = f.isFunction(l) ? {                        click: l,                        text: n                    } : l;                    var g = f('<button type="button"></button>').click(function () {                        l.click.apply(c.element[0], arguments)                    }).appendTo(i);                    f.each(l, function (p, o) {                        if (p !== "click") {                            p in d ? g[p](o) : g.attr(p, o)                        }                    });                    f.fn.button && g.button()                });                j.appendTo(c.uiDialog)            }        },        _makeDraggable: function () {            function h(g) {                return {                    position: g.position,                    offset: g.offset                }            }            var c = this,                k = c.options,                j = f(document),                i;            c.uiDialog.draggable({                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",                handle: ".ui-dialog-titlebar",                containment: "document",                start: function (l, g) {                    i = k.height === "auto" ? "auto" : f(this).height();                    f(this).height(f(this).height()).addClass("ui-dialog-dragging");                    c._trigger("dragStart", l, h(g))                },                drag: function (l, g) {                    c._trigger("drag", l, h(g))                },                stop: function (l, g) {                    k.position = [g.position.left - j.scrollLeft(), g.position.top - j.scrollTop()];                    f(this).removeClass("ui-dialog-dragging").height(i);                    c._trigger("dragStop", l, h(g));                    f.ui.dialog.overlay.resize()                }            })        },        _makeResizable: function (h) {            function c(g) {                return {                    originalPosition: g.originalPosition,                    originalSize: g.originalSize,                    position: g.position,                    size: g.size                }            }            h = h === b ? this.options.resizable : h;            var k = this,                j = k.options,                i = k.uiDialog.css("position");            h = typeof h === "string" ? h : "n,e,s,w,se,sw,ne,nw";            k.uiDialog.resizable({                cancel: ".ui-dialog-content",                containment: "document",                alsoResize: k.element,                maxWidth: j.maxWidth,                maxHeight: j.maxHeight,                minWidth: j.minWidth,                minHeight: k._minHeight(),                handles: h,                start: function (l, g) {                    f(this).addClass("ui-dialog-resizing");                    k._trigger("resizeStart", l, c(g))                },                resize: function (l, g) {                    k._trigger("resize", l, c(g))                },                stop: function (l, g) {                    f(this).removeClass("ui-dialog-resizing");                    j.height = f(this).height();                    j.width = f(this).width();                    k._trigger("resizeStop", l, c(g));                    f.ui.dialog.overlay.resize()                }            }).css("position", i).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")        },        _minHeight: function () {            var c = this.options;            return c.height === "auto" ? c.minHeight : Math.min(c.minHeight, c.height)        },        _position: function (g) {            var c = [],                i = [0, 0],                h;            if (g) {                if (typeof g === "string" || typeof g === "object" && "0" in g) {                    c = g.split ? g.split(" ") : [g[0], g[1]];                    if (c.length === 1) {                        c[1] = c[0]                    }                    f.each(["left", "top"], function (j, k) {                        if (+c[j] === c[j]) {                            i[j] = c[j];                            c[j] = k                        }                    });                    g = {                        my: c.join(" "),                        at: c.join(" "),                        offset: i.join(" ")                    }                }                g = f.extend({}, f.ui.dialog.prototype.options.position, g)            } else {                g = f.ui.dialog.prototype.options.position            }(h = this.uiDialog.is(":visible")) || this.uiDialog.show();            this.uiDialog.css({                top: 0,                left: 0            }).position(f.extend({                of: window            }, g));            h || this.uiDialog.hide()        },        _setOptions: function (g) {            var c = this,                i = {}, h = false;            f.each(g, function (j, k) {                c._setOption(j, k);                if (j in a) {                    h = true                }                if (j in e) {                    i[j] = k                }            });            h && this._size();            this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", i)        },        _setOption: function (h, c) {            var k = this,                j = k.uiDialog;            switch (h) {            case "beforeclose":                h = "beforeClose";                break;            case "buttons":                k._createButtons(c);                break;            case "closeText":                k.uiDialogTitlebarCloseText.text("" + c);                break;            case "dialogClass":                j.removeClass(k.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + c);                break;            case "disabled":                c ? j.addClass("ui-dialog-disabled") : j.removeClass("ui-dialog-disabled");                break;            case "draggable":                var i = j.is(":data(draggable)");                i && !c && j.draggable("destroy");                !i && c && k._makeDraggable();                break;            case "position":                k._position(c);                break;            case "resizable":                (i = j.is(":data(resizable)")) && !c && j.resizable("destroy");                i && typeof c === "string" && j.resizable("option", "handles", c);                !i && c !== false && k._makeResizable(c);                break;            case "title":                f(".ui-dialog-title", k.uiDialogTitlebar).html("" + (c || "&#160;"));                break            }            f.Widget.prototype._setOption.apply(k, arguments)        },        _size: function () {            var g = this.options,                c, i, h = this.uiDialog.is(":visible");            this.element.show().css({                width: "auto",                minHeight: 0,                height: 0            });            if (g.minWidth > g.width) {                g.width = g.minWidth            }            c = this.uiDialog.css({                height: "auto",                width: g.width            }).height();            i = Math.max(0, g.minHeight - c);            if (g.height === "auto") {                if (f.support.minHeight) {                    this.element.css({                        minHeight: i,                        height: "auto"                    })                } else {                    this.uiDialog.show();                    g = this.element.css("height", "auto").height();                    h || this.uiDialog.hide();                    this.element.height(Math.max(g, i))                }            } else {                this.element.height(Math.max(g.height - c, 0))            }            this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())        }    });    f.extend(f.ui.dialog, {        version: "1.8.16",        uuid: 0,        maxZ: 0,        getTitleId: function (c) {            c = c.attr("id");            if (!c) {                this.uuid += 1;                c = this.uuid            }            return "ui-dialog-title-" + c        },        overlay: function (c) {            this.$el = f.ui.dialog.overlay.create(c)        }    });    f.extend(f.ui.dialog.overlay, {        instances: [],        oldInstances: [],        maxZ: 0,        events: f.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function (c) {            return c + ".dialog-overlay"        }).join(" "),        create: function (g) {            if (this.instances.length === 0) {                setTimeout(function () {                    f.ui.dialog.overlay.instances.length && f(document).bind(f.ui.dialog.overlay.events, function (h) {                        if (f(h.target).zIndex() < f.ui.dialog.overlay.maxZ) {                            return false                        }                    })                }, 1);                f(document).bind("keydown.dialog-overlay", function (h) {                    if (g.options.closeOnEscape && !h.isDefaultPrevented() && h.keyCode && h.keyCode === f.ui.keyCode.ESCAPE) {                        g.close(h);                        h.preventDefault()                    }                });                f(window).bind("resize.dialog-overlay", f.ui.dialog.overlay.resize)            }            var c = (this.oldInstances.pop() || f("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({                width: this.width(),                height: this.height()            });            f.fn.bgiframe && c.bgiframe();            this.instances.push(c);            return c        },        destroy: function (g) {            var c = f.inArray(g, this.instances);            c != -1 && this.oldInstances.push(this.instances.splice(c, 1)[0]);            this.instances.length === 0 && f([document, window]).unbind(".dialog-overlay");            g.remove();            var h = 0;            f.each(this.instances, function () {                h = Math.max(h, this.css("z-index"))            });            this.maxZ = h        },        height: function () {            var g, c;            if (f.browser.msie && f.browser.version < 7) {                g = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);                c = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);                return g < c ? f(window).height() + "px" : g + "px"            } else {                return f(document).height() + "px"            }        },        width: function () {            var g, c;            if (f.browser.msie) {                g = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);                c = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);                return g < c ? f(window).width() + "px" : g + "px"            } else {                return f(document).width() + "px"            }        },        resize: function () {            var c = f([]);            f.each(f.ui.dialog.overlay.instances, function () {                c = c.add(this)            });            c.css({                width: 0,                height: 0            }).css({                width: f.ui.dialog.overlay.width(),                height: f.ui.dialog.overlay.height()            })        }    });    f.extend(f.ui.dialog.overlay.prototype, {        destroy: function () {            f.ui.dialog.overlay.destroy(this.$el)        }    })})(jQuery);(function (a) {    a.widget("ui.slider", a.ui.mouse, {        widgetEventPrefix: "slide",        options: {            animate: false,            distance: 0,            max: 100,            min: 0,            orientation: "horizontal",            range: false,            step: 1,            value: 0,            values: null        },        _create: function () {            var g = this,                d = this.options,                l = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),                i = d.values && d.values.length || 1,                k = [];            this._mouseSliding = this._keySliding = false;            this._animateOff = true;            this._handleIndex = null;            this._detectOrientation();            this._mouseInit();            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all" + (d.disabled ? " ui-slider-disabled ui-disabled" : ""));            this.range = a([]);            if (d.range) {                if (d.range === true) {                    if (!d.values) {                        d.values = [this._valueMin(), this._valueMin()]                    }                    if (d.values.length && d.values.length !== 2) {                        d.values = [d.values[0], d.values[0]]                    }                }                this.range = a("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + (d.range === "min" || d.range === "max" ? " ui-slider-range-" + d.range : ""))            }            for (var h = l.length; h < i; h += 1) {                k.push("<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>")            }            this.handles = l.add(a(k.join("")).appendTo(g.element));            this.handle = this.handles.eq(0);            this.handles.add(this.range).filter("a").click(function (b) {                b.preventDefault()            }).hover(function () {                d.disabled || a(this).addClass("ui-state-hover")            }, function () {                a(this).removeClass("ui-state-hover")            }).focus(function () {                if (d.disabled) {                    a(this).blur()                } else {                    a(".ui-slider .ui-state-focus").removeClass("ui-state-focus");                    a(this).addClass("ui-state-focus")                }            }).blur(function () {                a(this).removeClass("ui-state-focus")            });            this.handles.each(function (b) {                a(this).data("index.ui-slider-handle", b)            });            this.handles.keydown(function (n) {                var e = true,                    c = a(this).data("index.ui-slider-handle"),                    f, j, b;                if (!g.options.disabled) {                    switch (n.keyCode) {                    case a.ui.keyCode.HOME:                    case a.ui.keyCode.END:                    case a.ui.keyCode.PAGE_UP:                    case a.ui.keyCode.PAGE_DOWN:                    case a.ui.keyCode.UP:                    case a.ui.keyCode.RIGHT:                    case a.ui.keyCode.DOWN:                    case a.ui.keyCode.LEFT:                        e = false;                        if (!g._keySliding) {                            g._keySliding = true;                            a(this).addClass("ui-state-active");                            f = g._start(n, c);                            if (f === false) {                                return                            }                        }                        break                    }                    b = g.options.step;                    f = g.options.values && g.options.values.length ? (j = g.values(c)) : (j = g.value());                    switch (n.keyCode) {                    case a.ui.keyCode.HOME:                        j = g._valueMin();                        break;                    case a.ui.keyCode.END:                        j = g._valueMax();                        break;                    case a.ui.keyCode.PAGE_UP:                        j = g._trimAlignValue(f + (g._valueMax() - g._valueMin()) / 5);                        break;                    case a.ui.keyCode.PAGE_DOWN:                        j = g._trimAlignValue(f - (g._valueMax() - g._valueMin()) / 5);                        break;                    case a.ui.keyCode.UP:                    case a.ui.keyCode.RIGHT:                        if (f === g._valueMax()) {                            return                        }                        j = g._trimAlignValue(f + b);                        break;                    case a.ui.keyCode.DOWN:                    case a.ui.keyCode.LEFT:                        if (f === g._valueMin()) {                            return                        }                        j = g._trimAlignValue(f - b);                        break                    }                    g._slide(n, c, j);                    return e                }            }).keyup(function (c) {                var b = a(this).data("index.ui-slider-handle");                if (g._keySliding) {                    g._keySliding = false;                    g._stop(c, b);                    g._change(c, b);                    a(this).removeClass("ui-state-active")                }            });            this._refreshValue();            this._animateOff = false        },        destroy: function () {            this.handles.remove();            this.range.remove();            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");            this._mouseDestroy();            return this        },        _mouseCapture: function (h) {            var d = this.options,                o, l, n, i, k;            if (d.disabled) {                return false            }            this.elementSize = {                width: this.element.outerWidth(),                height: this.element.outerHeight()            };            this.elementOffset = this.element.offset();            o = this._normValueFromMouse({                x: h.pageX,                y: h.pageY            });            l = this._valueMax() - this._valueMin() + 1;            i = this;            this.handles.each(function (c) {                var b = Math.abs(o - i.values(c));                if (l > b) {                    l = b;                    n = a(this);                    k = c                }            });            if (d.range === true && this.values(1) === d.min) {                k += 1;                n = a(this.handles[k])            }            if (this._start(h, k) === false) {                return false            }            this._mouseSliding = true;            i._handleIndex = k;            n.addClass("ui-state-active").focus();            d = n.offset();            this._clickOffset = !a(h.target).parents().andSelf().is(".ui-slider-handle") ? {                left: 0,                top: 0            } : {                left: h.pageX - d.left - n.width() / 2,                top: h.pageY - d.top - n.height() / 2 - (parseInt(n.css("borderTopWidth"), 10) || 0) - (parseInt(n.css("borderBottomWidth"), 10) || 0) + (parseInt(n.css("marginTop"), 10) || 0)            };            this.handles.hasClass("ui-state-hover") || this._slide(h, k, o);            return this._animateOff = true        },        _mouseStart: function () {            return true        },        _mouseDrag: function (d) {            var c = this._normValueFromMouse({                x: d.pageX,                y: d.pageY            });            this._slide(d, this._handleIndex, c);            return false        },        _mouseStop: function (b) {            this.handles.removeClass("ui-state-active");            this._mouseSliding = false;            this._stop(b, this._handleIndex);            this._change(b, this._handleIndex);            this._clickOffset = this._handleIndex = null;            return this._animateOff = false        },        _detectOrientation: function () {            this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal"        },        _normValueFromMouse: function (d) {            var c;            if (this.orientation === "horizontal") {                c = this.elementSize.width;                d = d.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)            } else {                c = this.elementSize.height;                d = d.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)            }            c = d / c;            if (c > 1) {                c = 1            }            if (c < 0) {                c = 0            }            if (this.orientation === "vertical") {                c = 1 - c            }            d = this._valueMax() - this._valueMin();            return this._trimAlignValue(this._valueMin() + c * d)        },        _start: function (e, d) {            var f = {                handle: this.handles[d],                value: this.value()            };            if (this.options.values && this.options.values.length) {                f.value = this.values(d);                f.values = this.values()            }            return this._trigger("start", e, f)        },        _slide: function (e, d, h) {            var g;            if (this.options.values && this.options.values.length) {                g = this.values(d ? 0 : 1);                if (this.options.values.length === 2 && this.options.range === true && (d === 0 && h > g || d === 1 && h < g)) {                    h = g                }                if (h !== this.values(d)) {                    g = this.values();                    g[d] = h;                    e = this._trigger("slide", e, {                        handle: this.handles[d],                        value: h,                        values: g                    });                    this.values(d ? 0 : 1);                    e !== false && this.values(d, h, true)                }            } else {                if (h !== this.value()) {                    e = this._trigger("slide", e, {                        handle: this.handles[d],                        value: h                    });                    e !== false && this.value(h)                }            }        },        _stop: function (e, d) {            var f = {                handle: this.handles[d],                value: this.value()            };            if (this.options.values && this.options.values.length) {                f.value = this.values(d);                f.values = this.values()            }            this._trigger("stop", e, f)        },        _change: function (e, d) {            if (!this._keySliding && !this._mouseSliding) {                var f = {                    handle: this.handles[d],                    value: this.value()                };                if (this.options.values && this.options.values.length) {                    f.value = this.values(d);                    f.values = this.values()                }                this._trigger("change", e, f)            }        },        value: function (b) {            if (arguments.length) {                this.options.value = this._trimAlignValue(b);                this._refreshValue();                this._change(null, 0)            } else {                return this._value()            }        },        values: function (g, d) {            var j, h, i;            if (arguments.length > 1) {                this.options.values[g] = this._trimAlignValue(d);                this._refreshValue();                this._change(null, g)            } else {                if (arguments.length) {                    if (a.isArray(arguments[0])) {                        j = this.options.values;                        h = arguments[0];                        for (i = 0; i < j.length; i += 1) {                            j[i] = this._trimAlignValue(h[i]);                            this._change(null, i)                        }                        this._refreshValue()                    } else {                        return this.options.values && this.options.values.length ? this._values(g) : this.value()                    }                } else {                    return this._values()                }            }        },        _setOption: function (e, d) {            var h, g = 0;            if (a.isArray(this.options.values)) {                g = this.options.values.length            }            a.Widget.prototype._setOption.apply(this, arguments);            switch (e) {            case "disabled":                if (d) {                    this.handles.filter(".ui-state-focus").blur();                    this.handles.removeClass("ui-state-hover");                    this.handles.propAttr("disabled", true);                    this.element.addClass("ui-disabled")                } else {                    this.handles.propAttr("disabled", false);                    this.element.removeClass("ui-disabled")                }                break;            case "orientation":                this._detectOrientation();                this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);                this._refreshValue();                break;            case "value":                this._animateOff = true;                this._refreshValue();                this._change(null, 0);                this._animateOff = false;                break;            case "values":                this._animateOff = true;                this._refreshValue();                for (h = 0; h < g; h += 1) {                    this._change(null, h)                }                this._animateOff = false;                break            }        },        _value: function () {            var b = this.options.value;            return b = this._trimAlignValue(b)        },        _values: function (e) {            var d, f;            if (arguments.length) {                d = this.options.values[e];                return d = this._trimAlignValue(d)            } else {                d = this.options.values.slice();                for (f = 0; f < d.length; f += 1) {                    d[f] = this._trimAlignValue(d[f])                }                return d            }        },        _trimAlignValue: function (e) {            if (e <= this._valueMin()) {                return this._valueMin()            }            if (e >= this._valueMax()) {                return this._valueMax()            }            var d = this.options.step > 0 ? this.options.step : 1,                f = (e - this._valueMin()) % d;            e = e - f;            if (Math.abs(f) * 2 >= d) {                e += f > 0 ? d : -d            }            return parseFloat(e.toFixed(5))        },        _valueMin: function () {            return this.options.min        },        _valueMax: function () {            return this.options.max        },        _refreshValue: function () {            var v = this.options.range,                u = this.options,                s = this,                q = !this._animateOff ? u.animate : false,                r, n = {}, p, h, d, o;            if (this.options.values && this.options.values.length) {                this.handles.each(function (b) {                    r = (s.values(b) - s._valueMin()) / (s._valueMax() - s._valueMin()) * 100;                    n[s.orientation === "horizontal" ? "left" : "bottom"] = r + "%";                    a(this).stop(1, 1)[q ? "animate" : "css"](n, u.animate);                    if (s.options.range === true) {                        if (s.orientation === "horizontal") {                            if (b === 0) {                                s.range.stop(1, 1)[q ? "animate" : "css"]({                                    left: r + "%"                                }, u.animate)                            }                            if (b === 1) {                                s.range[q ? "animate" : "css"]({                                    width: r - p + "%"                                }, {                                    queue: false,                                    duration: u.animate                                })                            }                        } else {                            if (b === 0) {                                s.range.stop(1, 1)[q ? "animate" : "css"]({                                    bottom: r + "%"                                }, u.animate)                            }                            if (b === 1) {                                s.range[q ? "animate" : "css"]({                                    height: r - p + "%"                                }, {                                    queue: false,                                    duration: u.animate                                })                            }                        }                    }                    p = r                })            } else {                h = this.value();                d = this._valueMin();                o = this._valueMax();                r = o !== d ? (h - d) / (o - d) * 100 : 0;                n[s.orientation === "horizontal" ? "left" : "bottom"] = r + "%";                this.handle.stop(1, 1)[q ? "animate" : "css"](n, u.animate);                if (v === "min" && this.orientation === "horizontal") {                    this.range.stop(1, 1)[q ? "animate" : "css"]({                        width: r + "%"                    }, u.animate)                }                if (v === "max" && this.orientation === "horizontal") {                    this.range[q ? "animate" : "css"]({                        width: 100 - r + "%"                    }, {                        queue: false,                        duration: u.animate                    })                }                if (v === "min" && this.orientation === "vertical") {                    this.range.stop(1, 1)[q ? "animate" : "css"]({                        height: r + "%"                    }, u.animate)                }                if (v === "max" && this.orientation === "vertical") {                    this.range[q ? "animate" : "css"]({                        height: 100 - r + "%"                    }, {                        queue: false,                        duration: u.animate                    })                }            }        }    });    a.extend(a.ui.slider, {        version: "1.8.16"    })})(jQuery);(function (g, f) {    function e() {        return ++c    }    function b() {        return ++a    }    var c = 0,        a = 0;    g.widget("ui.tabs", {        options: {            add: null,            ajaxOptions: null,            cache: false,            cookie: null,            collapsible: false,            disable: null,            disabled: [],            enable: null,            event: "click",            fx: null,            idPrefix: "ui-tabs-",            load: null,            panelTemplate: "<div></div>",            remove: null,            select: null,            show: null,            spinner: "<em>Loading&#8230;</em>",            tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"        },        _create: function () {            this._tabify(true)        },        _setOption: function (d, h) {            if (d == "selected") {                this.options.collapsible && h == this.options.selected || this.select(h)            } else {                this.options[d] = h;                this._tabify()            }        },        _tabId: function (d) {            return d.title && d.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF-]/g, "") || this.options.idPrefix + e()        },        _sanitizeSelector: function (d) {            return d.replace(/:/g, "\\:")        },        _cookie: function () {            var d = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + b());            return g.cookie.apply(null, [d].concat(g.makeArray(arguments)))        },        _ui: function (d, h) {            return {                tab: d,                panel: h,                index: this.anchors.index(d)            }        },        _cleanup: function () {            this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function () {                var d = g(this);                d.html(d.data("label.tabs")).removeData("label.tabs")            })        },        _tabify: function (y) {            function w(h, j) {                h.css("display", "");                !g.support.opacity && j.opacity && h[0].style.removeAttribute("filter")            }            var z = this,                x = this.options,                v = /^#.+/;            this.list = this.element.find("ol,ul").eq(0);            this.lis = g(" > li:has(a[href])", this.list);            this.anchors = this.lis.map(function () {                return g("a", this)[0]            });            this.panels = g([]);            this.anchors.each(function (k, o) {                var j = g(o).attr("href"),                    h = j.split("#")[0],                    n;                if (h && (h === location.toString().split("#")[0] || (n = g("base")[0]) && h === n.href)) {                    j = o.hash;                    o.href = j                }                if (v.test(j)) {                    z.panels = z.panels.add(z.element.find(z._sanitizeSelector(j)))                } else {                    if (j && j !== "#") {                        g.data(o, "href.tabs", j);                        g.data(o, "load.tabs", j.replace(/#.*$/, ""));                        j = z._tabId(o);                        o.href = "#" + j;                        o = z.element.find("#" + j);                        if (!o.length) {                            o = g(x.panelTemplate).attr("id", j).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(z.panels[k - 1] || z.list);                            o.data("destroy.tabs", true)                        }                        z.panels = z.panels.add(o)                    } else {                        x.disabled.push(k)                    }                }            });            if (y) {                this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");                this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");                this.lis.addClass("ui-state-default ui-corner-top");                this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");                if (x.selected === f) {                    location.hash && this.anchors.each(function (h, j) {                        if (j.hash == location.hash) {                            x.selected = h;                            return false                        }                    });                    if (typeof x.selected !== "number" && x.cookie) {                        x.selected = parseInt(z._cookie(), 10)                    }                    if (typeof x.selected !== "number" && this.lis.filter(".ui-tabs-selected").length) {                        x.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"))                    }                    x.selected = x.selected || (this.lis.length ? 0 : -1)                } else {                    if (x.selected === null) {                        x.selected = -1                    }                }                x.selected = x.selected >= 0 && this.anchors[x.selected] || x.selected < 0 ? x.selected : 0;                x.disabled = g.unique(x.disabled.concat(g.map(this.lis.filter(".ui-state-disabled"), function (h) {                    return z.lis.index(h)                }))).sort();                g.inArray(x.selected, x.disabled) != -1 && x.disabled.splice(g.inArray(x.selected, x.disabled), 1);                this.panels.addClass("ui-tabs-hide");                this.lis.removeClass("ui-tabs-selected ui-state-active");                if (x.selected >= 0 && this.anchors.length) {                    z.element.find(z._sanitizeSelector(z.anchors[x.selected].hash)).removeClass("ui-tabs-hide");                    this.lis.eq(x.selected).addClass("ui-tabs-selected ui-state-active");                    z.element.queue("tabs", function () {                        z._trigger("show", null, z._ui(z.anchors[x.selected], z.element.find(z._sanitizeSelector(z.anchors[x.selected].hash))[0]))                    });                    this.load(x.selected)                }                g(window).bind("unload", function () {                    z.lis.add(z.anchors).unbind(".tabs");                    z.lis = z.anchors = z.panels = null                })            } else {                x.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"))            }            this.element[x.collapsible ? "addClass" : "removeClass"]("ui-tabs-collapsible");            x.cookie && this._cookie(x.selected, x.cookie);            y = 0;            for (var u; u = this.lis[y]; y++) {                g(u)[g.inArray(y, x.disabled) != -1 && !g(u).hasClass("ui-tabs-selected") ? "addClass" : "removeClass"]("ui-state-disabled")            }            x.cache === false && this.anchors.removeData("cache.tabs");            this.lis.add(this.anchors).unbind(".tabs");            if (x.event !== "mouseover") {                var q = function (h, j) {                    j.is(":not(.ui-state-disabled)") && j.addClass("ui-state-" + h)                }, l = function (h, j) {                        j.removeClass("ui-state-" + h)                    };                this.lis.bind("mouseover.tabs", function () {                    q("hover", g(this))                });                this.lis.bind("mouseout.tabs", function () {                    l("hover", g(this))                });                this.anchors.bind("focus.tabs", function () {                    q("focus", g(this).closest("li"))                });                this.anchors.bind("blur.tabs", function () {                    l("focus", g(this).closest("li"))                })            }            var p, i;            if (x.fx) {                if (g.isArray(x.fx)) {                    p = x.fx[0];                    i = x.fx[1]                } else {                    p = i = x.fx                }            }            var d = i ? function (h, j) {                    g(h).closest("li").addClass("ui-tabs-selected ui-state-active");                    j.hide().removeClass("ui-tabs-hide").animate(i, i.duration || "normal", function () {                        w(j, i);                        z._trigger("show", null, z._ui(h, j[0]))                    })                } : function (h, j) {                    g(h).closest("li").addClass("ui-tabs-selected ui-state-active");                    j.removeClass("ui-tabs-hide");                    z._trigger("show", null, z._ui(h, j[0]))                }, A = p ? function (h, j) {                    j.animate(p, p.duration || "normal", function () {                        z.lis.removeClass("ui-tabs-selected ui-state-active");                        j.addClass("ui-tabs-hide");                        w(j, p);                        z.element.dequeue("tabs")                    })                } : function (h, j) {                    z.lis.removeClass("ui-tabs-selected ui-state-active");                    j.addClass("ui-tabs-hide");                    z.element.dequeue("tabs")                };            this.anchors.bind(x.event + ".tabs", function () {                var k = this,                    n = g(k).closest("li"),                    j = z.panels.filter(":not(.ui-tabs-hide)"),                    h = z.element.find(z._sanitizeSelector(k.hash));                if (n.hasClass("ui-tabs-selected") && !x.collapsible || n.hasClass("ui-state-disabled") || n.hasClass("ui-state-processing") || z.panels.filter(":animated").length || z._trigger("select", null, z._ui(this, h[0])) === false) {                    this.blur();                    return false                }                x.selected = z.anchors.index(this);                z.abort();                if (x.collapsible) {                    if (n.hasClass("ui-tabs-selected")) {                        x.selected = -1;                        x.cookie && z._cookie(x.selected, x.cookie);                        z.element.queue("tabs", function () {                            A(k, j)                        }).dequeue("tabs");                        this.blur();                        return false                    } else {                        if (!j.length) {                            x.cookie && z._cookie(x.selected, x.cookie);                            z.element.queue("tabs", function () {                                d(k, h)                            });                            z.load(z.anchors.index(this));                            this.blur();                            return false                        }                    }                }                x.cookie && z._cookie(x.selected, x.cookie);                if (h.length) {                    j.length && z.element.queue("tabs", function () {                        A(k, j)                    });                    z.element.queue("tabs", function () {                        d(k, h)                    });                    z.load(z.anchors.index(this))                } else {                    throw "jQuery UI Tabs: Mismatching fragment identifier."                }                g.browser.msie && this.blur()            });            this.anchors.bind("click.tabs", function () {                return false            })        },        _getIndex: function (d) {            if (typeof d == "string") {                d = this.anchors.index(this.anchors.filter("[href$=" + d + "]"))            }            return d        },        destroy: function () {            var d = this.options;            this.abort();            this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");            this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");            this.anchors.each(function () {                var i = g.data(this, "href.tabs");                if (i) {                    this.href = i                }                var h = g(this).unbind(".tabs");                g.each(["href", "load", "cache"], function (k, j) {                    h.removeData(j + ".tabs")                })            });            this.lis.unbind(".tabs").add(this.panels).each(function () {                g.data(this, "destroy.tabs") ? g(this).remove() : g(this).removeClass("ui-state-default ui-corner-top ui-tabs-selected ui-state-active ui-state-hover ui-state-focus ui-state-disabled ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide")            });            d.cookie && this._cookie(null, d.cookie);            return this        },        add: function (d, n, i) {            if (i === f) {                i = this.anchors.length            }            var o = this,                l = this.options;            n = g(l.tabTemplate.replace(/#\{href\}/g, d).replace(/#\{label\}/g, n));            d = !d.indexOf("#") ? d.replace("#", "") : this._tabId(g("a", n)[0]);            n.addClass("ui-state-default ui-corner-top").data("destroy.tabs", true);            var k = o.element.find("#" + d);            k.length || (k = g(l.panelTemplate).attr("id", d).data("destroy.tabs", true));            k.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");            if (i >= this.lis.length) {                n.appendTo(this.list);                k.appendTo(this.list[0].parentNode)            } else {                n.insertBefore(this.lis[i]);                k.insertBefore(this.panels[i])            }            l.disabled = g.map(l.disabled, function (h) {                return h >= i ? ++h : h            });            this._tabify();            if (this.anchors.length == 1) {                l.selected = 0;                n.addClass("ui-tabs-selected ui-state-active");                k.removeClass("ui-tabs-hide");                this.element.queue("tabs", function () {                    o._trigger("show", null, o._ui(o.anchors[0], o.panels[0]))                });                this.load(0)            }            this._trigger("add", null, this._ui(this.anchors[i], this.panels[i]));            return this        },        remove: function (d) {            d = this._getIndex(d);            var i = this.options,                h = this.lis.eq(d).remove(),                j = this.panels.eq(d).remove();            if (h.hasClass("ui-tabs-selected") && this.anchors.length > 1) {                this.select(d + (d + 1 < this.anchors.length ? 1 : -1))            }            i.disabled = g.map(g.grep(i.disabled, function (k) {                return k != d            }), function (k) {                return k >= d ? --k : k            });            this._tabify();            this._trigger("remove", null, this._ui(h.find("a")[0], j[0]));            return this        },        enable: function (d) {            d = this._getIndex(d);            var h = this.options;            if (g.inArray(d, h.disabled) != -1) {                this.lis.eq(d).removeClass("ui-state-disabled");                h.disabled = g.grep(h.disabled, function (i) {                    return i != d                });                this._trigger("enable", null, this._ui(this.anchors[d], this.panels[d]));                return this            }        },        disable: function (d) {            d = this._getIndex(d);            var h = this.options;            if (d != h.selected) {                this.lis.eq(d).addClass("ui-state-disabled");                h.disabled.push(d);                h.disabled.sort();                this._trigger("disable", null, this._ui(this.anchors[d], this.panels[d]))            }            return this        },        select: function (d) {            d = this._getIndex(d);            if (d == -1) {                if (this.options.collapsible && this.options.selected != -1) {                    d = this.options.selected                } else {                    return this                }            }            this.anchors.eq(d).trigger(this.options.event + ".tabs");            return this        },        load: function (d) {            d = this._getIndex(d);            var n = this,                i = this.options,                o = this.anchors.eq(d)[0],                l = g.data(o, "load.tabs");            this.abort();            if (!l || this.element.queue("tabs").length !== 0 && g.data(o, "cache.tabs")) {                this.element.dequeue("tabs")            } else {                this.lis.eq(d).addClass("ui-state-processing");                if (i.spinner) {                    var k = g("span", o);                    k.data("label.tabs", k.html()).html(i.spinner)                }                this.xhr = g.ajax(g.extend({}, i.ajaxOptions, {                    url: l,                    success: function (j, p) {                        n.element.find(n._sanitizeSelector(o.hash)).html(j);                        n._cleanup();                        i.cache && g.data(o, "cache.tabs", true);                        n._trigger("load", null, n._ui(n.anchors[d], n.panels[d]));                        try {                            i.ajaxOptions.success(j, p)                        } catch (h) {}                    },                    error: function (j, p) {                        n._cleanup();                        n._trigger("load", null, n._ui(n.anchors[d], n.panels[d]));                        try {                            i.ajaxOptions.error(j, p, d, o)                        } catch (h) {}                    }                }));                n.element.dequeue("tabs");                return this            }        },        abort: function () {            this.element.queue([]);            this.panels.stop(false, true);            this.element.queue("tabs", this.element.queue("tabs").splice(-2, 2));            if (this.xhr) {                this.xhr.abort();                delete this.xhr            }            this._cleanup();            return this        },        url: function (d, h) {            this.anchors.eq(d).removeData("cache.tabs").data("load.tabs", h);            return this        },        length: function () {            return this.anchors.length        }    });    g.extend(g.ui.tabs, {        version: "1.8.16"    });    g.extend(g.ui.tabs.prototype, {        rotation: null,        rotate: function (d, k) {            var i = this,                l = this.options,                j = i._rotate || (i._rotate = function (h) {                    clearTimeout(i.rotation);                    i.rotation = setTimeout(function () {                        var n = l.selected;                        i.select(++n < i.anchors.length ? n : 0)                    }, d);                    h && h.stopPropagation()                });            k = i._unrotate || (i._unrotate = !k ? function (h) {                h.clientX && i.rotate(null)            } : function () {                t = l.selected;                j()            });            if (d) {                this.element.bind("tabsshow", j);                this.anchors.bind(l.event + ".tabs", k);                j()            } else {                clearTimeout(i.rotation);                this.element.unbind("tabsshow", j);                this.anchors.unbind(l.event + ".tabs", k);                delete this._rotate;                delete this._unrotate            }            return this        }    })})(jQuery);(function (d, C) {    function M() {        this.debug = false;        this._curInst = null;        this._keyEvent = false;        this._disabledInputs = [];        this._inDialog = this._datepickerShowing = false;        this._mainDivId = "ui-datepicker-div";        this._inlineClass = "ui-datepicker-inline";        this._appendClass = "ui-datepicker-append";        this._triggerClass = "ui-datepicker-trigger";        this._dialogClass = "ui-datepicker-dialog";        this._disableClass = "ui-datepicker-disabled";        this._unselectableClass = "ui-datepicker-unselectable";        this._currentClass = "ui-datepicker-current-day";        this._dayOverClass = "ui-datepicker-days-cell-over";        this.regional = [];        this.regional[""] = {            closeText: "Done",            prevText: "Prev",            nextText: "Next",            currentText: "Today",            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],            weekHeader: "Wk",            dateFormat: "mm/dd/yy",            firstDay: 0,            isRTL: false,            showMonthAfterYear: false,            yearSuffix: ""        };        this._defaults = {            showOn: "focus",            showAnim: "fadeIn",            showOptions: {},            defaultDate: null,            appendText: "",            buttonText: "...",            buttonImage: "",            buttonImageOnly: false,            hideIfNoPrevNext: false,            navigationAsDateFormat: false,            gotoCurrent: false,            changeMonth: false,            changeYear: false,            yearRange: "c-10:c+10",            showOtherMonths: false,            selectOtherMonths: false,            showWeek: false,            calculateWeek: this.iso8601Week,            shortYearCutoff: "+10",            minDate: null,            maxDate: null,            duration: "fast",            beforeShowDay: null,            beforeShow: null,            onSelect: null,            onChangeMonthYear: null,            onClose: null,            numberOfMonths: 1,            showCurrentAtPos: 0,            stepMonths: 1,            stepBigMonths: 12,            altField: "",            altFormat: "",            constrainInput: true,            showButtonPanel: false,            autoSize: false,            disabled: false        };        d.extend(this._defaults, this.regional[""]);        this.dpDiv = N(d('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))    }    function N(a) {        return a.bind("mouseout", function (b) {            b = d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");            b.length && b.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")        }).bind("mouseover", function (b) {            b = d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");            if (!(d.datepicker._isDisabledDatepicker(J.inline ? a.parent()[0] : J.input[0]) || !b.length)) {                b.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");                b.addClass("ui-state-hover");                b.hasClass("ui-datepicker-prev") && b.addClass("ui-datepicker-prev-hover");                b.hasClass("ui-datepicker-next") && b.addClass("ui-datepicker-next-hover")            }        })    }    function H(a, b) {        d.extend(a, b);        for (var c in b) {            if (b[c] == null || b[c] == C) {                a[c] = b[c]            }        }        return a    }    d.extend(d.ui, {        datepicker: {            version: "1.8.16"        }    });    var B = (new Date).getTime(),        J;    d.extend(M.prototype, {        markerClassName: "hasDatepicker",        maxRows: 4,        log: function () {            this.debug && console.log.apply("", arguments)        },        _widgetDatepicker: function () {            return this.dpDiv        },        setDefaults: function (a) {            H(this._defaults, a || {});            return this        },        _attachDatepicker: function (a, b) {            var c = null;            for (var e in this._defaults) {                var f = a.getAttribute("date:" + e);                if (f) {                    c = c || {};                    try {                        c[e] = eval(f)                    } catch (h) {                        c[e] = f                    }                }            }            e = a.nodeName.toLowerCase();            f = e == "div" || e == "span";            if (!a.id) {                this.uuid += 1;                a.id = "dp" + this.uuid            }            var i = this._newInst(d(a), f);            i.settings = d.extend({}, b || {}, c || {});            if (e == "input") {                this._connectDatepicker(a, i)            } else {                f && this._inlineDatepicker(a, i)            }        },        _newInst: function (a, b) {            return {                id: a[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1"),                input: a,                selectedDay: 0,                selectedMonth: 0,                selectedYear: 0,                drawMonth: 0,                drawYear: 0,                inline: b,                dpDiv: !b ? this.dpDiv : N(d('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))            }        },        _connectDatepicker: function (a, b) {            var c = d(a);            b.append = d([]);            b.trigger = d([]);            if (!c.hasClass(this.markerClassName)) {                this._attachments(c, b);                c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function (e, f, h) {                    b.settings[f] = h                }).bind("getData.datepicker", function (e, f) {                    return this._get(b, f)                });                this._autoSize(b);                d.data(a, "datepicker", b);                b.settings.disabled && this._disableDatepicker(a)            }        },        _attachments: function (a, b) {            var c = this._get(b, "appendText"),                e = this._get(b, "isRTL");            b.append && b.append.remove();            if (c) {                b.append = d('<span class="' + this._appendClass + '">' + c + "</span>");                a[e ? "before" : "after"](b.append)            }            a.unbind("focus", this._showDatepicker);            b.trigger && b.trigger.remove();            c = this._get(b, "showOn");            if (c == "focus" || c == "both") {                a.focus(this._showDatepicker)            }            if (c == "button" || c == "both") {                c = this._get(b, "buttonText");                var f = this._get(b, "buttonImage");                b.trigger = d(this._get(b, "buttonImageOnly") ? d("<img/>").addClass(this._triggerClass).attr({                    src: f,                    alt: c,                    title: c                }) : d('<button type="button"></button>').addClass(this._triggerClass).html(f == "" ? c : d("<img/>").attr({                    src: f,                    alt: c,                    title: c                })));                a[e ? "before" : "after"](b.trigger);                b.trigger.click(function () {                    d.datepicker._datepickerShowing && d.datepicker._lastInput == a[0] ? d.datepicker._hideDatepicker() : d.datepicker._showDatepicker(a[0]);                    return false                })            }        },        _autoSize: function (a) {            if (this._get(a, "autoSize") && !a.inline) {                var b = new Date(2009, 11, 20),                    c = this._get(a, "dateFormat");                if (c.match(/[DM]/)) {                    var e = function (f) {                        for (var h = 0, i = 0, g = 0; g < f.length; g++) {                            if (f[g].length > h) {                                h = f[g].length;                                i = g                            }                        }                        return i                    };                    b.setMonth(e(this._get(a, c.match(/MM/) ? "monthNames" : "monthNamesShort")));                    b.setDate(e(this._get(a, c.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - b.getDay())                }                a.input.attr("size", this._formatDate(a, b).length)            }        },        _inlineDatepicker: function (a, b) {            var c = d(a);            if (!c.hasClass(this.markerClassName)) {                c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker", function (e, f, h) {                    b.settings[f] = h                }).bind("getData.datepicker", function (e, f) {                    return this._get(b, f)                });                d.data(a, "datepicker", b);                this._setDate(b, this._getDefaultDate(b), true);                this._updateDatepicker(b);                this._updateAlternate(b);                b.settings.disabled && this._disableDatepicker(a);                b.dpDiv.css("display", "block")            }        },        _dialogDatepicker: function (a, b, c, e, f) {            a = this._dialogInst;            if (!a) {                this.uuid += 1;                this._dialogInput = d('<input type="text" id="' + ("dp" + this.uuid) + '" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>');                this._dialogInput.keydown(this._doKeyDown);                d("body").append(this._dialogInput);                a = this._dialogInst = this._newInst(this._dialogInput, false);                a.settings = {};                d.data(this._dialogInput[0], "datepicker", a)            }            H(a.settings, e || {});            b = b && b.constructor == Date ? this._formatDate(a, b) : b;            this._dialogInput.val(b);            this._pos = f ? f.length ? f : [f.pageX, f.pageY] : null;            if (!this._pos) {                this._pos = [document.documentElement.clientWidth / 2 - 100 + (document.documentElement.scrollLeft || document.body.scrollLeft), document.documentElement.clientHeight / 2 - 150 + (document.documentElement.scrollTop || document.body.scrollTop)]            }            this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px");            a.settings.onSelect = c;            this._inDialog = true;            this.dpDiv.addClass(this._dialogClass);            this._showDatepicker(this._dialogInput[0]);            d.blockUI && d.blockUI(this.dpDiv);            d.data(this._dialogInput[0], "datepicker", a);            return this        },        _destroyDatepicker: function (a) {            var b = d(a),                c = d.data(a, "datepicker");            if (b.hasClass(this.markerClassName)) {                var e = a.nodeName.toLowerCase();                d.removeData(a, "datepicker");                if (e == "input") {                    c.append.remove();                    c.trigger.remove();                    b.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)                } else {                    if (e == "div" || e == "span") {                        b.removeClass(this.markerClassName).empty()                    }                }            }        },        _enableDatepicker: function (a) {            var b = d(a),                c = d.data(a, "datepicker");            if (b.hasClass(this.markerClassName)) {                var e = a.nodeName.toLowerCase();                if (e == "input") {                    a.disabled = false;                    c.trigger.filter("button").each(function () {                        this.disabled = false                    }).end().filter("img").css({                        opacity: "1.0",                        cursor: ""                    })                } else {                    if (e == "div" || e == "span") {                        b = b.children("." + this._inlineClass);                        b.children().removeClass("ui-state-disabled");                        b.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")                    }                }                this._disabledInputs = d.map(this._disabledInputs, function (f) {                    return f == a ? null : f                })            }        },        _disableDatepicker: function (a) {            var b = d(a),                c = d.data(a, "datepicker");            if (b.hasClass(this.markerClassName)) {                var e = a.nodeName.toLowerCase();                if (e == "input") {                    a.disabled = true;                    c.trigger.filter("button").each(function () {                        this.disabled = true                    }).end().filter("img").css({                        opacity: "0.5",                        cursor: "default"                    })                } else {                    if (e == "div" || e == "span") {                        b = b.children("." + this._inlineClass);                        b.children().addClass("ui-state-disabled");                        b.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled", "disabled")                    }                }                this._disabledInputs = d.map(this._disabledInputs, function (f) {                    return f == a ? null : f                });                this._disabledInputs[this._disabledInputs.length] = a            }        },        _isDisabledDatepicker: function (a) {            if (!a) {                return false            }            for (var b = 0; b < this._disabledInputs.length; b++) {                if (this._disabledInputs[b] == a) {                    return true                }            }            return false        },        _getInst: function (a) {            try {                return d.data(a, "datepicker")            } catch (b) {                throw "Missing instance data for this datepicker"            }        },        _optionDatepicker: function (a, b, c) {            var e = this._getInst(a);            if (arguments.length == 2 && typeof b == "string") {                return b == "defaults" ? d.extend({}, d.datepicker._defaults) : e ? b == "all" ? d.extend({}, e.settings) : this._get(e, b) : null            }            var f = b || {};            if (typeof b == "string") {                f = {};                f[b] = c            }            if (e) {                this._curInst == e && this._hideDatepicker();                var h = this._getDateDatepicker(a, true),                    i = this._getMinMaxDate(e, "min"),                    g = this._getMinMaxDate(e, "max");                H(e.settings, f);                if (i !== null && f.dateFormat !== C && f.minDate === C) {                    e.settings.minDate = this._formatDate(e, i)                }                if (g !== null && f.dateFormat !== C && f.maxDate === C) {                    e.settings.maxDate = this._formatDate(e, g)                }                this._attachments(d(a), e);                this._autoSize(e);                this._setDate(e, h);                this._updateAlternate(e);                this._updateDatepicker(e)            }        },        _changeDatepicker: function (a, b, c) {            this._optionDatepicker(a, b, c)        },        _refreshDatepicker: function (a) {            (a = this._getInst(a)) && this._updateDatepicker(a)        },        _setDateDatepicker: function (a, b) {            if (a = this._getInst(a)) {                this._setDate(a, b);                this._updateDatepicker(a);                this._updateAlternate(a)            }        },        _getDateDatepicker: function (a, b) {            (a = this._getInst(a)) && !a.inline && this._setDateFromField(a, b);            return a ? this._getDate(a) : null        },        _doKeyDown: function (a) {            var b = d.datepicker._getInst(a.target),                c = true,                e = b.dpDiv.is(".ui-datepicker-rtl");            b._keyEvent = true;            if (d.datepicker._datepickerShowing) {                switch (a.keyCode) {                case 9:                    d.datepicker._hideDatepicker();                    c = false;                    break;                case 13:                    c = d("td." + d.datepicker._dayOverClass + ":not(." + d.datepicker._currentClass + ")", b.dpDiv);                    c[0] && d.datepicker._selectDay(a.target, b.selectedMonth, b.selectedYear, c[0]);                    if (a = d.datepicker._get(b, "onSelect")) {                        c = d.datepicker._formatDate(b);                        a.apply(b.input ? b.input[0] : null, [c, b])                    } else {                        d.datepicker._hideDatepicker()                    }                    return false;                case 27:                    d.datepicker._hideDatepicker();                    break;                case 33:                    d.datepicker._adjustDate(a.target, a.ctrlKey ? -d.datepicker._get(b, "stepBigMonths") : -d.datepicker._get(b, "stepMonths"), "M");                    break;                case 34:                    d.datepicker._adjustDate(a.target, a.ctrlKey ? +d.datepicker._get(b, "stepBigMonths") : +d.datepicker._get(b, "stepMonths"), "M");                    break;                case 35:                    if (a.ctrlKey || a.metaKey) {                        d.datepicker._clearDate(a.target)                    }                    c = a.ctrlKey || a.metaKey;                    break;                case 36:                    if (a.ctrlKey || a.metaKey) {                        d.datepicker._gotoToday(a.target)                    }                    c = a.ctrlKey || a.metaKey;                    break;                case 37:                    if (a.ctrlKey || a.metaKey) {                        d.datepicker._adjustDate(a.target, e ? +1 : -1, "D")                    }                    c = a.ctrlKey || a.metaKey;                    if (a.originalEvent.altKey) {                        d.datepicker._adjustDate(a.target, a.ctrlKey ? -d.datepicker._get(b, "stepBigMonths") : -d.datepicker._get(b, "stepMonths"), "M")                    }                    break;                case 38:                    if (a.ctrlKey || a.metaKey) {                        d.datepicker._adjustDate(a.target, -7, "D")                    }                    c = a.ctrlKey || a.metaKey;                    break;                case 39:                    if (a.ctrlKey || a.metaKey) {                        d.datepicker._adjustDate(a.target, e ? -1 : +1, "D")                    }                    c = a.ctrlKey || a.metaKey;                    if (a.originalEvent.altKey) {                        d.datepicker._adjustDate(a.target, a.ctrlKey ? +d.datepicker._get(b, "stepBigMonths") : +d.datepicker._get(b, "stepMonths"), "M")                    }                    break;                case 40:                    if (a.ctrlKey || a.metaKey) {                        d.datepicker._adjustDate(a.target, +7, "D")                    }                    c = a.ctrlKey || a.metaKey;                    break;                default:                    c = false                }            } else {                if (a.keyCode == 36 && a.ctrlKey) {                    d.datepicker._showDatepicker(this)                } else {                    c = false                }            } if (c) {                a.preventDefault();                a.stopPropagation()            }        },        _doKeyPress: function (a) {            var b = d.datepicker._getInst(a.target);            if (d.datepicker._get(b, "constrainInput")) {                b = d.datepicker._possibleChars(d.datepicker._get(b, "dateFormat"));                var c = String.fromCharCode(a.charCode == C ? a.keyCode : a.charCode);                return a.ctrlKey || a.metaKey || c < " " || !b || b.indexOf(c) > -1            }        },        _doKeyUp: function (a) {            a = d.datepicker._getInst(a.target);            if (a.input.val() != a.lastVal) {                try {                    if (d.datepicker.parseDate(d.datepicker._get(a, "dateFormat"), a.input ? a.input.val() : null, d.datepicker._getFormatConfig(a))) {                        d.datepicker._setDateFromField(a);                        d.datepicker._updateAlternate(a);                        d.datepicker._updateDatepicker(a)                    }                } catch (b) {                    d.datepicker.log(b)                }            }            return true        },        _showDatepicker: function (a) {            a = a.target || a;            if (a.nodeName.toLowerCase() != "input") {                a = d("input", a.parentNode)[0]            }            if (!(d.datepicker._isDisabledDatepicker(a) || d.datepicker._lastInput == a)) {                var b = d.datepicker._getInst(a);                if (d.datepicker._curInst && d.datepicker._curInst != b) {                    d.datepicker._datepickerShowing && d.datepicker._triggerOnClose(d.datepicker._curInst);                    d.datepicker._curInst.dpDiv.stop(true, true)                }                var c = d.datepicker._get(b, "beforeShow");                c = c ? c.apply(a, [a, b]) : {};                if (c !== false) {                    H(b.settings, c);                    b.lastVal = null;                    d.datepicker._lastInput = a;                    d.datepicker._setDateFromField(b);                    if (d.datepicker._inDialog) {                        a.value = ""                    }                    if (!d.datepicker._pos) {                        d.datepicker._pos = d.datepicker._findPos(a);                        d.datepicker._pos[1] += a.offsetHeight                    }                    var e = false;                    d(a).parents().each(function () {                        e |= d(this).css("position") == "fixed";                        return !e                    });                    if (e && d.browser.opera) {                        d.datepicker._pos[0] -= document.documentElement.scrollLeft;                        d.datepicker._pos[1] -= document.documentElement.scrollTop                    }                    c = {                        left: d.datepicker._pos[0],                        top: d.datepicker._pos[1]                    };                    d.datepicker._pos = null;                    b.dpDiv.empty();                    b.dpDiv.css({                        position: "absolute",                        display: "block",                        top: "-1000px"                    });                    d.datepicker._updateDatepicker(b);                    c = d.datepicker._checkOffset(b, c, e);                    b.dpDiv.css({                        position: d.datepicker._inDialog && d.blockUI ? "static" : e ? "fixed" : "absolute",                        display: "none",                        left: c.left + "px",                        top: c.top + "px"                    });                    if (!b.inline) {                        c = d.datepicker._get(b, "showAnim");                        var f = d.datepicker._get(b, "duration"),                            h = function () {                                var i = b.dpDiv.find("iframe.ui-datepicker-cover");                                if (i.length) {                                    var g = d.datepicker._getBorders(b.dpDiv);                                    i.css({                                        left: -g[0],                                        top: -g[1],                                        width: b.dpDiv.outerWidth(),                                        height: b.dpDiv.outerHeight()                                    })                                }                            };                        b.dpDiv.zIndex(d(a).zIndex() + 1);                        d.datepicker._datepickerShowing = true;                        d.effects && d.effects[c] ? b.dpDiv.show(c, d.datepicker._get(b, "showOptions"), f, h) : b.dpDiv[c || "show"](c ? f : null, h);                        if (!c || !f) {                            h()                        }                        b.input.is(":visible") && !b.input.is(":disabled") && b.input.focus();                        d.datepicker._curInst = b                    }                }            }        },        _updateDatepicker: function (a) {            this.maxRows = 4;            var b = d.datepicker._getBorders(a.dpDiv);            J = a;            a.dpDiv.empty().append(this._generateHTML(a));            var c = a.dpDiv.find("iframe.ui-datepicker-cover");            c.length && c.css({                left: -b[0],                top: -b[1],                width: a.dpDiv.outerWidth(),                height: a.dpDiv.outerHeight()            });            a.dpDiv.find("." + this._dayOverClass + " a").mouseover();            b = this._getNumberOfMonths(a);            c = b[1];            a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");            c > 1 && a.dpDiv.addClass("ui-datepicker-multi-" + c).css("width", 17 * c + "em");            a.dpDiv[(b[0] != 1 || b[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");            a.dpDiv[(this._get(a, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");            a == d.datepicker._curInst && d.datepicker._datepickerShowing && a.input && a.input.is(":visible") && !a.input.is(":disabled") && a.input[0] != document.activeElement && a.input.focus();            if (a.yearshtml) {                var e = a.yearshtml;                setTimeout(function () {                    e === a.yearshtml && a.yearshtml && a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml);                    e = a.yearshtml = null                }, 0)            }        },        _getBorders: function (a) {            var b = function (c) {                return {                    thin: 1,                    medium: 2,                    thick: 3                }[c] || c            };            return [parseFloat(b(a.css("border-left-width"))), parseFloat(b(a.css("border-top-width")))]        },        _checkOffset: function (a, b, c) {            var e = a.dpDiv.outerWidth(),                f = a.dpDiv.outerHeight(),                h = a.input ? a.input.outerWidth() : 0,                i = a.input ? a.input.outerHeight() : 0,                g = document.documentElement.clientWidth + d(document).scrollLeft(),                j = document.documentElement.clientHeight + d(document).scrollTop();            b.left -= this._get(a, "isRTL") ? e - h : 0;            b.left -= c && b.left == a.input.offset().left ? d(document).scrollLeft() : 0;            b.top -= c && b.top == a.input.offset().top + i ? d(document).scrollTop() : 0;            b.left -= Math.min(b.left, b.left + e > g && g > e ? Math.abs(b.left + e - g) : 0);            b.top -= Math.min(b.top, b.top + f > j && j > f ? Math.abs(f + i) : 0);            return b        },        _findPos: function (a) {            for (var b = this._get(this._getInst(a), "isRTL"); a && (a.type == "hidden" || a.nodeType != 1 || d.expr.filters.hidden(a));) {                a = a[b ? "previousSibling" : "nextSibling"]            }            a = d(a).offset();            return [a.left, a.top]        },        _triggerOnClose: function (a) {            var b = this._get(a, "onClose");            if (b) {                b.apply(a.input ? a.input[0] : null, [a.input ? a.input.val() : "", a])            }        },        _hideDatepicker: function (a) {            var b = this._curInst;            if (!(!b || a && b != d.data(a, "datepicker"))) {                if (this._datepickerShowing) {                    a = this._get(b, "showAnim");                    var c = this._get(b, "duration"),                        e = function () {                            d.datepicker._tidyDialog(b);                            this._curInst = null                        };                    d.effects && d.effects[a] ? b.dpDiv.hide(a, d.datepicker._get(b, "showOptions"), c, e) : b.dpDiv[a == "slideDown" ? "slideUp" : a == "fadeIn" ? "fadeOut" : "hide"](a ? c : null, e);                    a || e();                    d.datepicker._triggerOnClose(b);                    this._datepickerShowing = false;                    this._lastInput = null;                    if (this._inDialog) {                        this._dialogInput.css({                            position: "absolute",                            left: "0",                            top: "-100px"                        });                        if (d.blockUI) {                            d.unblockUI();                            d("body").append(this.dpDiv)                        }                    }                    this._inDialog = false                }            }        },        _tidyDialog: function (a) {            a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")        },        _checkExternalClick: function (a) {            if (d.datepicker._curInst) {                a = d(a.target);                a[0].id != d.datepicker._mainDivId && a.parents("#" + d.datepicker._mainDivId).length == 0 && !a.hasClass(d.datepicker.markerClassName) && !a.hasClass(d.datepicker._triggerClass) && d.datepicker._datepickerShowing && !(d.datepicker._inDialog && d.blockUI) && d.datepicker._hideDatepicker()            }        },        _adjustDate: function (a, b, c) {            a = d(a);            var e = this._getInst(a[0]);            if (!this._isDisabledDatepicker(a[0])) {                this._adjustInstDate(e, b + (c == "M" ? this._get(e, "showCurrentAtPos") : 0), c);                this._updateDatepicker(e)            }        },        _gotoToday: function (a) {            a = d(a);            var b = this._getInst(a[0]);            if (this._get(b, "gotoCurrent") && b.currentDay) {                b.selectedDay = b.currentDay;                b.drawMonth = b.selectedMonth = b.currentMonth;                b.drawYear = b.selectedYear = b.currentYear            } else {                var c = new Date;                b.selectedDay = c.getDate();                b.drawMonth = b.selectedMonth = c.getMonth();                b.drawYear = b.selectedYear = c.getFullYear()            }            this._notifyChange(b);            this._adjustDate(a)        },        _selectMonthYear: function (a, b, c) {            a = d(a);            var e = this._getInst(a[0]);            e["selected" + (c == "M" ? "Month" : "Year")] = e["draw" + (c == "M" ? "Month" : "Year")] = parseInt(b.options[b.selectedIndex].value, 10);            this._notifyChange(e);            this._adjustDate(a)        },        _selectDay: function (a, b, c, e) {            var f = d(a);            if (!(d(e).hasClass(this._unselectableClass) || this._isDisabledDatepicker(f[0]))) {                f = this._getInst(f[0]);                f.selectedDay = f.currentDay = d("a", e).html();                f.selectedMonth = f.currentMonth = b;                f.selectedYear = f.currentYear = c;                this._selectDate(a, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear))            }        },        _clearDate: function (a) {            a = d(a);            this._getInst(a[0]);            this._selectDate(a, "")        },        _selectDate: function (a, b) {            a = this._getInst(d(a)[0]);            b = b != null ? b : this._formatDate(a);            a.input && a.input.val(b);            this._updateAlternate(a);            var c = this._get(a, "onSelect");            if (c) {                c.apply(a.input ? a.input[0] : null, [b, a])            } else {                a.input && a.input.trigger("change")            } if (a.inline) {                this._updateDatepicker(a)            } else {                this._hideDatepicker();                this._lastInput = a.input[0];                typeof a.input[0] != "object" && a.input.focus();                this._lastInput = null            }        },        _updateAlternate: function (a) {            var b = this._get(a, "altField");            if (b) {                var c = this._get(a, "altFormat") || this._get(a, "dateFormat"),                    e = this._getDate(a),                    f = this.formatDate(c, e, this._getFormatConfig(a));                d(b).each(function () {                    d(this).val(f)                })            }        },        noWeekends: function (a) {            a = a.getDay();            return [a > 0 && a < 6, ""]        },        iso8601Week: function (a) {            a = new Date(a.getTime());            a.setDate(a.getDate() + 4 - (a.getDay() || 7));            var b = a.getTime();            a.setMonth(0);            a.setDate(1);            return Math.floor(Math.round((b - a) / 86400000) / 7) + 1        },        parseDate: function (a, b, c) {            if (a == null || b == null) {                throw "Invalid arguments"            }            b = typeof b == "object" ? b.toString() : b + "";            if (b == "") {                return null            }            var e = (c ? c.shortYearCutoff : null) || this._defaults.shortYearCutoff;            e = typeof e != "string" ? e : (new Date).getFullYear() % 100 + parseInt(e, 10);            for (var f = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort, h = (c ? c.dayNames : null) || this._defaults.dayNames, i = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort, g = (c ? c.monthNames : null) || this._defaults.monthNames, j = c = -1, l = -1, u = -1, k = false, o = function (p) {                    (p = A + 1 < a.length && a.charAt(A + 1) == p) && A++;                    return p                }, m = function (p) {                    var D = o(p);                    p = new RegExp("^\\d{1," + (p == "@" ? 14 : p == "!" ? 20 : p == "y" && D ? 4 : p == "o" ? 3 : 2) + "}");                    p = b.substring(q).match(p);                    if (!p) {                        throw "Missing number at position " + q                    }                    q += p[0].length;                    return parseInt(p[0], 10)                }, n = function (p, D, K) {                    p = d.map(o(p) ? K : D, function (w, x) {                        return [[x, w]]                    }).sort(function (w, x) {                        return -(w[1].length - x[1].length)                    });                    var E = -1;                    d.each(p, function (w, x) {                        w = x[1];                        if (b.substr(q, w.length).toLowerCase() == w.toLowerCase()) {                            E = x[0];                            q += w.length;                            return false                        }                    });                    if (E != -1) {                        return E + 1                    } else {                        throw "Unknown name at position " + q                    }                }, s = function () {                    if (b.charAt(q) != a.charAt(A)) {                        throw "Unexpected literal at position " + q                    }                    q++                }, q = 0, A = 0; A < a.length; A++) {                if (k) {                    if (a.charAt(A) == "'" && !o("'")) {                        k = false                    } else {                        s()                    }                } else {                    switch (a.charAt(A)) {                    case "d":                        l = m("d");                        break;                    case "D":                        n("D", f, h);                        break;                    case "o":                        u = m("o");                        break;                    case "m":                        j = m("m");                        break;                    case "M":                        j = n("M", i, g);                        break;                    case "y":                        c = m("y");                        break;                    case "@":                        var v = new Date(m("@"));                        c = v.getFullYear();                        j = v.getMonth() + 1;                        l = v.getDate();                        break;                    case "!":                        v = new Date((m("!") - this._ticksTo1970) / 10000);                        c = v.getFullYear();                        j = v.getMonth() + 1;                        l = v.getDate();                        break;                    case "'":                        if (o("'")) {                            s()                        } else {                            k = true                        }                        break;                    default:                        s()                    }                }            }            if (q < b.length) {                throw "Extra/unparsed characters found in date: " + b.substring(q)            }            if (c == -1) {                c = (new Date).getFullYear()            } else {                if (c < 100) {                    c += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (c <= e ? 0 : -100)                }            } if (u > -1) {                j = 1;                l = u;                do {                    e = this._getDaysInMonth(c, j - 1);                    if (l <= e) {                        break                    }                    j++;                    l -= e                } while (1)            }            v = this._daylightSavingAdjust(new Date(c, j - 1, l));            if (v.getFullYear() != c || v.getMonth() + 1 != j || v.getDate() != l) {                throw "Invalid date"            }            return v        },        ATOM: "yy-mm-dd",        COOKIE: "D, dd M yy",        ISO_8601: "yy-mm-dd",        RFC_822: "D, d M y",        RFC_850: "DD, dd-M-y",        RFC_1036: "D, d M y",        RFC_1123: "D, d M yy",        RFC_2822: "D, d M yy",        RSS: "D, d M y",        TICKS: "!",        TIMESTAMP: "@",        W3C: "yy-mm-dd",        _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 10000000,        formatDate: function (a, b, c) {            if (!b) {                return ""            }            var e = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort,                f = (c ? c.dayNames : null) || this._defaults.dayNames,                h = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort;            c = (c ? c.monthNames : null) || this._defaults.monthNames;            var i = function (o) {                (o = k + 1 < a.length && a.charAt(k + 1) == o) && k++;                return o            }, g = function (o, m, n) {                    m = "" + m;                    if (i(o)) {                        for (; m.length < n;) {                            m = "0" + m                        }                    }                    return m                }, j = function (o, m, n, s) {                    return i(o) ? s[m] : n[m]                }, l = "",                u = false;            if (b) {                for (var k = 0; k < a.length; k++) {                    if (u) {                        if (a.charAt(k) == "'" && !i("'")) {                            u = false                        } else {                            l += a.charAt(k)                        }                    } else {                        switch (a.charAt(k)) {                        case "d":                            l += g("d", b.getDate(), 2);                            break;                        case "D":                            l += j("D", b.getDay(), e, f);                            break;                        case "o":                            l += g("o", Math.round(((new Date(b.getFullYear(), b.getMonth(), b.getDate())).getTime() - (new Date(b.getFullYear(), 0, 0)).getTime()) / 86400000), 3);                            break;                        case "m":                            l += g("m", b.getMonth() + 1, 2);                            break;                        case "M":                            l += j("M", b.getMonth(), h, c);                            break;                        case "y":                            l += i("y") ? b.getFullYear() : (b.getYear() % 100 < 10 ? "0" : "") + b.getYear() % 100;                            break;                        case "@":                            l += b.getTime();                            break;                        case "!":                            l += b.getTime() * 10000 + this._ticksTo1970;                            break;                        case "'":                            if (i("'")) {                                l += "'"                            } else {                                u = true                            }                            break;                        default:                            l += a.charAt(k)                        }                    }                }            }            return l        },        _possibleChars: function (a) {            for (var b = "", c = false, e = function (h) {                    (h = f + 1 < a.length && a.charAt(f + 1) == h) && f++;                    return h                }, f = 0; f < a.length; f++) {                if (c) {                    if (a.charAt(f) == "'" && !e("'")) {                        c = false                    } else {                        b += a.charAt(f)                    }                } else {                    switch (a.charAt(f)) {                    case "d":                    case "m":                    case "y":                    case "@":                        b += "0123456789";                        break;                    case "D":                    case "M":                        return null;                    case "'":                        if (e("'")) {                            b += "'"                        } else {                            c = true                        }                        break;                    default:                        b += a.charAt(f)                    }                }            }            return b        },        _get: function (a, b) {            return a.settings[b] !== C ? a.settings[b] : this._defaults[b]        },        _setDateFromField: function (a, b) {            if (a.input.val() != a.lastVal) {                var c = this._get(a, "dateFormat"),                    e = a.lastVal = a.input ? a.input.val() : null,                    f, h;                f = h = this._getDefaultDate(a);                var i = this._getFormatConfig(a);                try {                    f = this.parseDate(c, e, i) || h                } catch (g) {                    this.log(g);                    e = b ? "" : e                }                a.selectedDay = f.getDate();                a.drawMonth = a.selectedMonth = f.getMonth();                a.drawYear = a.selectedYear = f.getFullYear();                a.currentDay = e ? f.getDate() : 0;                a.currentMonth = e ? f.getMonth() : 0;                a.currentYear = e ? f.getFullYear() : 0;                this._adjustInstDate(a)            }        },        _getDefaultDate: function (a) {            return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date))        },        _determineDate: function (a, b, c) {            var e = function (h) {                var i = new Date;                i.setDate(i.getDate() + h);                return i            }, f = function (h) {                    try {                        return d.datepicker.parseDate(d.datepicker._get(a, "dateFormat"), h, d.datepicker._getFormatConfig(a))                    } catch (i) {}                    var g = (h.toLowerCase().match(/^c/) ? d.datepicker._getDate(a) : null) || new Date,                        j = g.getFullYear(),                        l = g.getMonth();                    g = g.getDate();                    for (var u = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, k = u.exec(h); k;) {                        switch (k[2] || "d") {                        case "d":                        case "D":                            g += parseInt(k[1], 10);                            break;                        case "w":                        case "W":                            g += parseInt(k[1], 10) * 7;                            break;                        case "m":                        case "M":                            l += parseInt(k[1], 10);                            g = Math.min(g, d.datepicker._getDaysInMonth(j, l));                            break;                        case "y":                        case "Y":                            j += parseInt(k[1], 10);                            g = Math.min(g, d.datepicker._getDaysInMonth(j, l));                            break                        }                        k = u.exec(h)                    }                    return new Date(j, l, g)                };            if (b = (b = b == null || b === "" ? c : typeof b == "string" ? f(b) : typeof b == "number" ? isNaN(b) ? c : e(b) : new Date(b.getTime())) && b.toString() == "Invalid Date" ? c : b) {                b.setHours(0);                b.setMinutes(0);                b.setSeconds(0);                b.setMilliseconds(0)            }            return this._daylightSavingAdjust(b)        },        _daylightSavingAdjust: function (a) {            if (!a) {                return null            }            a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0);            return a        },        _setDate: function (a, b, c) {            var e = !b,                f = a.selectedMonth,                h = a.selectedYear;            b = this._restrictMinMax(a, this._determineDate(a, b, new Date));            a.selectedDay = a.currentDay = b.getDate();            a.drawMonth = a.selectedMonth = a.currentMonth = b.getMonth();            a.drawYear = a.selectedYear = a.currentYear = b.getFullYear();            if ((f != a.selectedMonth || h != a.selectedYear) && !c) {                this._notifyChange(a)            }            this._adjustInstDate(a);            if (a.input) {                a.input.val(e ? "" : this._formatDate(a))            }        },        _getDate: function (a) {            return !a.currentYear || a.input && a.input.val() == "" ? null : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay))        },        _generateHTML: function (a) {            var b = new Date;            b = this._daylightSavingAdjust(new Date(b.getFullYear(), b.getMonth(), b.getDate()));            var c = this._get(a, "isRTL"),                e = this._get(a, "showButtonPanel"),                f = this._get(a, "hideIfNoPrevNext"),                h = this._get(a, "navigationAsDateFormat"),                i = this._getNumberOfMonths(a),                g = this._get(a, "showCurrentAtPos"),                j = this._get(a, "stepMonths"),                l = i[0] != 1 || i[1] != 1,                u = this._daylightSavingAdjust(!a.currentDay ? new Date(9999, 9, 9) : new Date(a.currentYear, a.currentMonth, a.currentDay)),                k = this._getMinMaxDate(a, "min"),                o = this._getMinMaxDate(a, "max");            g = a.drawMonth - g;            var m = a.drawYear;            if (g < 0) {                g += 12;                m--            }            if (o) {                var n = this._daylightSavingAdjust(new Date(o.getFullYear(), o.getMonth() - i[0] * i[1] + 1, o.getDate()));                for (n = k && n < k ? k : n; this._daylightSavingAdjust(new Date(m, g, 1)) > n;) {                    g--;                    if (g < 0) {                        g = 11;                        m--                    }                }            }            a.drawMonth = g;            a.drawYear = m;            n = this._get(a, "prevText");            n = !h ? n : this.formatDate(n, this._daylightSavingAdjust(new Date(m, g - j, 1)), this._getFormatConfig(a));            n = this._canAdjustMonth(a, -1, m, g) ? '<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_' + B + ".datepicker._adjustDate('#" + a.id + "', -" + j + ", 'M');\" title=\"" + n + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e" : "w") + '">' + n + "</span></a>" : f ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + n + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e" : "w") + '">' + n + "</span></a>";            var s = this._get(a, "nextText");            s = !h ? s : this.formatDate(s, this._daylightSavingAdjust(new Date(m, g + j, 1)), this._getFormatConfig(a));            f = this._canAdjustMonth(a, +1, m, g) ? '<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_' + B + ".datepicker._adjustDate('#" + a.id + "', +" + j + ", 'M');\" title=\"" + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w" : "e") + '">' + s + "</span></a>" : f ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w" : "e") + '">' + s + "</span></a>";            j = this._get(a, "currentText");            s = this._get(a, "gotoCurrent") && a.currentDay ? u : b;            j = !h ? j : this.formatDate(j, s, this._getFormatConfig(a));            h = !a.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_' + B + '.datepicker._hideDatepicker();">' + this._get(a, "closeText") + "</button>" : "";            e = e ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (c ? h : "") + (this._isInRange(a, s) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_' + B + ".datepicker._gotoToday('#" + a.id + "');\">" + j + "</button>" : "") + (c ? "" : h) + "</div>" : "";            h = parseInt(this._get(a, "firstDay"), 10);            h = isNaN(h) ? 0 : h;            j = this._get(a, "showWeek");            s = this._get(a, "dayNames");            this._get(a, "dayNamesShort");            var q = this._get(a, "dayNamesMin"),                A = this._get(a, "monthNames"),                v = this._get(a, "monthNamesShort"),                p = this._get(a, "beforeShowDay"),                D = this._get(a, "showOtherMonths"),                K = this._get(a, "selectOtherMonths");            this._get(a, "calculateWeek");            for (var E = this._getDefaultDate(a), w = "", x = 0; x < i[0]; x++) {                var O = "";                this.maxRows = 4;                for (var G = 0; G < i[1]; G++) {                    var P = this._daylightSavingAdjust(new Date(m, g, a.selectedDay)),                        t = " ui-corner-all",                        y = "";                    if (l) {                        y += '<div class="ui-datepicker-group';                        if (i[1] > 1) {                            switch (G) {                            case 0:                                y += " ui-datepicker-group-first";                                t = " ui-corner-" + (c ? "right" : "left");                                break;                            case i[1] - 1:                                y += " ui-datepicker-group-last";                                t = " ui-corner-" + (c ? "left" : "right");                                break;                            default:                                y += " ui-datepicker-group-middle";                                t = "";                                break                            }                        }                        y += '">'                    }                    y += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + t + '">' + (/all|left/.test(t) && x == 0 ? c ? f : n : "") + (/all|right/.test(t) && x == 0 ? c ? n : f : "") + this._generateMonthYearHeader(a, g, m, k, o, x > 0 || G > 0, A, v) + '</div><table class="ui-datepicker-calendar"><thead><tr>';                    var z = j ? '<th class="ui-datepicker-week-col">' + this._get(a, "weekHeader") + "</th>" : "";                    for (t = 0; t < 7; t++) {                        var r = (t + h) % 7;                        z += "<th" + ((t + h + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + '><span title="' + s[r] + '">' + q[r] + "</span></th>"                    }                    y += z + "</tr></thead><tbody>";                    z = this._getDaysInMonth(m, g);                    if (m == a.selectedYear && g == a.selectedMonth) {                        a.selectedDay = Math.min(a.selectedDay, z)                    }                    t = (this._getFirstDayOfMonth(m, g) - h + 7) % 7;                    z = Math.ceil((t + z) / 7);                    this.maxRows = z = l ? this.maxRows > z ? this.maxRows : z : z;                    r = this._daylightSavingAdjust(new Date(m, g, 1 - t));                    for (var Q = 0; Q < z; Q++) {                        y += "<tr>";                        var R = !j ? "" : '<td class="ui-datepicker-week-col">' + this._get(a, "calculateWeek")(r) + "</td>";                        for (t = 0; t < 7; t++) {                            var I = p ? p.apply(a.input ? a.input[0] : null, [r]) : [true, ""],                                F = r.getMonth() != g,                                L = F && !K || !I[0] || k && r < k || o && r > o;                            R += '<td class="' + ((t + h + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (F ? " ui-datepicker-other-month" : "") + (r.getTime() == P.getTime() && g == a.selectedMonth && a._keyEvent || E.getTime() == r.getTime() && E.getTime() == P.getTime() ? " " + this._dayOverClass : "") + (L ? " " + this._unselectableClass + " ui-state-disabled" : "") + (F && !D ? "" : " " + I[1] + (r.getTime() == u.getTime() ? " " + this._currentClass : "") + (r.getTime() == b.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!F || D) && I[2] ? ' title="' + I[2] + '"' : "") + (L ? "" : ' onclick="DP_jQuery_' + B + ".datepicker._selectDay('#" + a.id + "'," + r.getMonth() + "," + r.getFullYear() + ', this);return false;"') + ">" + (F && !D ? "&#xa0;" : L ? '<span class="ui-state-default">' + r.getDate() + "</span>" : '<a class="ui-state-default' + (r.getTime() == b.getTime() ? " ui-state-highlight" : "") + (r.getTime() == u.getTime() ? " ui-state-active" : "") + (F ? " ui-priority-secondary" : "") + '" href="#">' + r.getDate() + "</a>") + "</td>";                            r.setDate(r.getDate() + 1);                            r = this._daylightSavingAdjust(r)                        }                        y += R + "</tr>"                    }                    g++;                    if (g > 11) {                        g = 0;                        m++                    }                    y += "</tbody></table>" + (l ? "</div>" + (i[0] > 0 && G == i[1] - 1 ? '<div class="ui-datepicker-row-break"></div>' : "") : "");                    O += y                }                w += O            }            w += e + (d.browser.msie && parseInt(d.browser.version, 10) < 7 && !a.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : "");            a._keyEvent = false;            return w        },        _generateMonthYearHeader: function (a, b, c, e, f, h, i, g) {            var j = this._get(a, "changeMonth"),                l = this._get(a, "changeYear"),                u = this._get(a, "showMonthAfterYear"),                k = '<div class="ui-datepicker-title">',                o = "";            if (h || !j) {                o += '<span class="ui-datepicker-month">' + i[b] + "</span>"            } else {                i = e && e.getFullYear() == c;                var m = f && f.getFullYear() == c;                o += '<select class="ui-datepicker-month" onchange="DP_jQuery_' + B + ".datepicker._selectMonthYear('#" + a.id + "', this, 'M');\" >";                for (var n = 0; n < 12; n++) {                    if ((!i || n >= e.getMonth()) && (!m || n <= f.getMonth())) {                        o += '<option value="' + n + '"' + (n == b ? ' selected="selected"' : "") + ">" + g[n] + "</option>"                    }                }                o += "</select>"            }            u || (k += o + (h || !(j && l) ? "&#xa0;" : ""));            if (!a.yearshtml) {                a.yearshtml = "";                if (h || !l) {                    k += '<span class="ui-datepicker-year">' + c + "</span>"                } else {                    g = this._get(a, "yearRange").split(":");                    var s = (new Date).getFullYear();                    i = function (q) {                        q = q.match(/c[+-].*/) ? c + parseInt(q.substring(1), 10) : q.match(/[+-].*/) ? s + parseInt(q, 10) : parseInt(q, 10);                        return isNaN(q) ? s : q                    };                    b = i(g[0]);                    g = Math.max(b, i(g[1] || ""));                    b = e ? Math.max(b, e.getFullYear()) : b;                    g = f ? Math.min(g, f.getFullYear()) : g;                    for (a.yearshtml += '<select class="ui-datepicker-year" onchange="DP_jQuery_' + B + ".datepicker._selectMonthYear('#" + a.id + "', this, 'Y');\" >"; b <= g; b++) {                        a.yearshtml += '<option value="' + b + '"' + (b == c ? ' selected="selected"' : "") + ">" + b + "</option>"                    }                    a.yearshtml += "</select>";                    k += a.yearshtml;                    a.yearshtml = null                }            }            k += this._get(a, "yearSuffix");            if (u) {                k += (h || !(j && l) ? "&#xa0;" : "") + o            }            k += "</div>";            return k        },        _adjustInstDate: function (a, b, c) {            var e = a.drawYear + (c == "Y" ? b : 0),                f = a.drawMonth + (c == "M" ? b : 0);            b = Math.min(a.selectedDay, this._getDaysInMonth(e, f)) + (c == "D" ? b : 0);            e = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(e, f, b)));            a.selectedDay = e.getDate();            a.drawMonth = a.selectedMonth = e.getMonth();            a.drawYear = a.selectedYear = e.getFullYear();            if (c == "M" || c == "Y") {                this._notifyChange(a)            }        },        _restrictMinMax: function (a, b) {            var c = this._getMinMaxDate(a, "min");            a = this._getMinMaxDate(a, "max");            b = c && b < c ? c : b;            return b = a && b > a ? a : b        },        _notifyChange: function (a) {            var b = this._get(a, "onChangeMonthYear");            if (b) {                b.apply(a.input ? a.input[0] : null, [a.selectedYear, a.selectedMonth + 1, a])            }        },        _getNumberOfMonths: function (a) {            a = this._get(a, "numberOfMonths");            return a == null ? [1, 1] : typeof a == "number" ? [1, a] : a        },        _getMinMaxDate: function (a, b) {            return this._determineDate(a, this._get(a, b + "Date"), null)        },        _getDaysInMonth: function (a, b) {            return 32 - this._daylightSavingAdjust(new Date(a, b, 32)).getDate()        },        _getFirstDayOfMonth: function (a, b) {            return (new Date(a, b, 1)).getDay()        },        _canAdjustMonth: function (a, b, c, e) {            var f = this._getNumberOfMonths(a);            c = this._daylightSavingAdjust(new Date(c, e + (b < 0 ? b : f[0] * f[1]), 1));            b < 0 && c.setDate(this._getDaysInMonth(c.getFullYear(), c.getMonth()));            return this._isInRange(a, c)        },        _isInRange: function (a, b) {            var c = this._getMinMaxDate(a, "min");            a = this._getMinMaxDate(a, "max");            return (!c || b.getTime() >= c.getTime()) && (!a || b.getTime() <= a.getTime())        },        _getFormatConfig: function (a) {            var b = this._get(a, "shortYearCutoff");            b = typeof b != "string" ? b : (new Date).getFullYear() % 100 + parseInt(b, 10);            return {                shortYearCutoff: b,                dayNamesShort: this._get(a, "dayNamesShort"),                dayNames: this._get(a, "dayNames"),                monthNamesShort: this._get(a, "monthNamesShort"),                monthNames: this._get(a, "monthNames")            }        },        _formatDate: function (a, b, c, e) {            if (!b) {                a.currentDay = a.selectedDay;                a.currentMonth = a.selectedMonth;                a.currentYear = a.selectedYear            }            b = b ? typeof b == "object" ? b : this._daylightSavingAdjust(new Date(e, c, b)) : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));            return this.formatDate(this._get(a, "dateFormat"), b, this._getFormatConfig(a))        }    });    d.fn.datepicker = function (a) {        if (!this.length) {            return this        }        if (!d.datepicker.initialized) {            d(document).mousedown(d.datepicker._checkExternalClick).find("body").append(d.datepicker.dpDiv);            d.datepicker.initialized = true        }        var b = Array.prototype.slice.call(arguments, 1);        if (typeof a == "string" && (a == "isDisabled" || a == "getDate" || a == "widget")) {            return d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this[0]].concat(b))        }        if (a == "option" && arguments.length == 2 && typeof arguments[1] == "string") {            return d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this[0]].concat(b))        }        return this.each(function () {            typeof a == "string" ? d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this].concat(b)) : d.datepicker._attachDatepicker(this, a)        })    };    d.datepicker = new M;    d.datepicker.initialized = false;    d.datepicker.uuid = (new Date).getTime();    d.datepicker.version = "1.8.16";    window["DP_jQuery_" + B] = d})(jQuery);(function (a, c) {    a.widget("ui.progressbar", {        options: {            value: 0,            max: 100        },        min: 0,        _create: function () {            this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({                role: "progressbar",                "aria-valuemin": this.min,                "aria-valuemax": this.options.max,                "aria-valuenow": this._value()            });            this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);            this.oldValue = this._value();            this._refreshValue()        },        destroy: function () {            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");            this.valueDiv.remove();            a.Widget.prototype.destroy.apply(this, arguments)        },        value: function (b) {            if (b === c) {                return this._value()            }            this._setOption("value", b);            return this        },        _setOption: function (b, d) {            if (b === "value") {                this.options.value = d;                this._refreshValue();                this._value() === this.options.max && this._trigger("complete")            }            a.Widget.prototype._setOption.apply(this, arguments)        },        _value: function () {            var b = this.options.value;            if (typeof b !== "number") {                b = 0            }            return Math.min(this.options.max, Math.max(this.min, b))        },        _percentage: function () {            return 100 * this._value() / this.options.max        },        _refreshValue: function () {            var b = this.value(),                d = this._percentage();            if (this.oldValue !== b) {                this.oldValue = b;                this._trigger("change")            }            this.valueDiv.toggle(b > this.min).toggleClass("ui-corner-right", b === this.options.max).width(d.toFixed(0) + "%");            this.element.attr("aria-valuenow", b)        }    });    a.extend(a.ui.progressbar, {        version: "1.8.16"    })})(jQuery);jQuery.effects || function (r, i) {    function e(j) {        var f;        if (j && j.constructor == Array && j.length == 3) {            return j        }        if (f = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(j)) {            return [parseInt(f[1], 10), parseInt(f[2], 10), parseInt(f[3], 10)]        }        if (f = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(j)) {            return [parseFloat(f[1]) * 2.55, parseFloat(f[2]) * 2.55, parseFloat(f[3]) * 2.55]        }        if (f = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(j)) {            return [parseInt(f[1], 16), parseInt(f[2], 16), parseInt(f[3], 16)]        }        if (f = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(j)) {            return [parseInt(f[1] + f[1], 16), parseInt(f[2] + f[2], 16), parseInt(f[3] + f[3], 16)]        }        if (/rgba\(0, 0, 0, 0\)/.exec(j)) {            return d.transparent        }        return d[r.trim(j).toLowerCase()]    }    function x(k, j) {        var f;        do {            f = r.curCSS(k, j);            if (f != "" && f != "transparent" || r.nodeName(k, "body")) {                break            }            j = "backgroundColor"        } while (k = k.parentNode);        return e(f)    }    function c() {        var n = document.defaultView ? document.defaultView.getComputedStyle(this, null) : this.currentStyle,            j = {}, f, l;        if (n && n.length && n[0] && n[n[0]]) {            for (var k = n.length; k--;) {                f = n[k];                if (typeof n[f] == "string") {                    l = f.replace(/\-(\w)/g, function (p, o) {                        return o.toUpperCase()                    });                    j[l] = n[f]                }            }        } else {            for (f in n) {                if (typeof n[f] === "string") {                    j[f] = n[f]                }            }        }        return j    }    function b(k) {        var j, f;        for (j in k) {            f = k[j];            if (f == null || r.isFunction(f) || j in w || /scrollbar/.test(j) || !/color/i.test(j) && isNaN(parseFloat(f))) {                delete k[j]            }        }        return k    }    function v(l, j) {        var f = {            _: 0        }, k;        for (k in j) {            if (l[k] != j[k]) {                f[k] = j[k]            }        }        return f    }    function h(l, j, f, k) {        if (typeof l == "object") {            k = j;            f = null;            j = l;            l = j.effect        }        if (r.isFunction(j)) {            k = j;            f = null;            j = {}        }        if (typeof j == "number" || r.fx.speeds[j]) {            k = f;            f = j;            j = {}        }        if (r.isFunction(f)) {            k = f;            f = null        }        j = j || {};        f = f || j.duration;        f = r.fx.off ? 0 : typeof f == "number" ? f : f in r.fx.speeds ? r.fx.speeds[f] : r.fx.speeds._default;        k = k || j.complete;        return [l, j, f, k]    }    function g(f) {        if (!f || typeof f === "number" || r.fx.speeds[f]) {            return true        }        if (typeof f === "string" && !r.effects[f]) {            return true        }        return false    }    r.effects = {};    r.each(["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"], function (j, f) {        r.fx.step[f] = function (k) {            if (!k.colorInit) {                k.start = x(k.elem, f);                k.end = e(k.end);                k.colorInit = true            }            k.elem.style[f] = "rgb(" + Math.max(Math.min(parseInt(k.pos * (k.end[0] - k.start[0]) + k.start[0], 10), 255), 0) + "," + Math.max(Math.min(parseInt(k.pos * (k.end[1] - k.start[1]) + k.start[1], 10), 255), 0) + "," + Math.max(Math.min(parseInt(k.pos * (k.end[2] - k.start[2]) + k.start[2], 10), 255), 0) + ")"        }    });    var d = {        aqua: [0, 255, 255],        azure: [240, 255, 255],        beige: [245, 245, 220],        black: [0, 0, 0],        blue: [0, 0, 255],        brown: [165, 42, 42],        cyan: [0, 255, 255],        darkblue: [0, 0, 139],        darkcyan: [0, 139, 139],        darkgrey: [169, 169, 169],        darkgreen: [0, 100, 0],        darkkhaki: [189, 183, 107],        darkmagenta: [139, 0, 139],        darkolivegreen: [85, 107, 47],        darkorange: [255, 140, 0],        darkorchid: [153, 50, 204],        darkred: [139, 0, 0],        darksalmon: [233, 150, 122],        darkviolet: [148, 0, 211],        fuchsia: [255, 0, 255],        gold: [255, 215, 0],        green: [0, 128, 0],        indigo: [75, 0, 130],        khaki: [240, 230, 140],        lightblue: [173, 216, 230],        lightcyan: [224, 255, 255],        lightgreen: [144, 238, 144],        lightgrey: [211, 211, 211],        lightpink: [255, 182, 193],        lightyellow: [255, 255, 224],        lime: [0, 255, 0],        magenta: [255, 0, 255],        maroon: [128, 0, 0],        navy: [0, 0, 128],        olive: [128, 128, 0],        orange: [255, 165, 0],        pink: [255, 192, 203],        purple: [128, 0, 128],        violet: [128, 0, 128],        red: [255, 0, 0],        silver: [192, 192, 192],        white: [255, 255, 255],        yellow: [255, 255, 0],        transparent: [255, 255, 255]    }, a = ["add", "remove", "toggle"],        w = {            border: 1,            borderBottom: 1,            borderColor: 1,            borderLeft: 1,            borderRight: 1,            borderTop: 1,            borderWidth: 1,            margin: 1,            padding: 1        };    r.effects.animateClass = function (l, j, f, k) {        if (r.isFunction(f)) {            k = f;            f = null        }        return this.queue(function () {            var s = r(this),                q = s.attr("style") || " ",                o = b(c.call(this)),                p, n = s.attr("class");            r.each(a, function (u, y) {                l[y] && s[y + "Class"](l[y])            });            p = b(c.call(this));            s.attr("class", n);            s.animate(v(o, p), {                queue: false,                duration: j,                easing: f,                complete: function () {                    r.each(a, function (u, y) {                        l[y] && s[y + "Class"](l[y])                    });                    if (typeof s.attr("style") == "object") {                        s.attr("style").cssText = "";                        s.attr("style").cssText = q                    } else {                        s.attr("style", q)                    }                    k && k.apply(this, arguments);                    r.dequeue(this)                }            })        })    };    r.fn.extend({        _addClass: r.fn.addClass,        addClass: function (l, j, f, k) {            return j ? r.effects.animateClass.apply(this, [{                    add: l                },                j, f, k            ]) : this._addClass(l)        },        _removeClass: r.fn.removeClass,        removeClass: function (l, j, f, k) {            return j ? r.effects.animateClass.apply(this, [{                    remove: l                },                j, f, k            ]) : this._removeClass(l)        },        _toggleClass: r.fn.toggleClass,        toggleClass: function (n, j, f, l, k) {            return typeof j == "boolean" || j === i ? f ? r.effects.animateClass.apply(this, [j ? {                    add: n                } : {                    remove: n                },                f, l, k            ]) : this._toggleClass(n, j) : r.effects.animateClass.apply(this, [{                    toggle: n                },                j, f, l            ])        },        switchClass: function (n, j, f, l, k) {            return r.effects.animateClass.apply(this, [{                    add: j,                    remove: n                },                f, l, k            ])        }    });    r.extend(r.effects, {        version: "1.8.16",        save: function (k, j) {            for (var f = 0; f < j.length; f++) {                j[f] !== null && k.data("ec.storage." + j[f], k[0].style[j[f]])            }        },        restore: function (k, j) {            for (var f = 0; f < j.length; f++) {                j[f] !== null && k.css(j[f], k.data("ec.storage." + j[f]))            }        },        setMode: function (j, f) {            if (f == "toggle") {                f = j.is(":hidden") ? "show" : "hide"            }            return f        },        getBaseline: function (k, j) {            var f;            switch (k[0]) {            case "top":                f = 0;                break;            case "middle":                f = 0.5;                break;            case "bottom":                f = 1;                break;            default:                f = k[0] / j.height            }            switch (k[1]) {            case "left":                k = 0;                break;            case "center":                k = 0.5;                break;            case "right":                k = 1;                break;            default:                k = k[1] / j.width            }            return {                x: k,                y: f            }        },        createWrapper: function (l) {            if (l.parent().is(".ui-effects-wrapper")) {                return l.parent()            }            var j = {                width: l.outerWidth(true),                height: l.outerHeight(true),                "float": l.css("float")            }, f = r("<div></div>").addClass("ui-effects-wrapper").css({                    fontSize: "100%",                    background: "transparent",                    border: "none",                    margin: 0,                    padding: 0                }),                k = document.activeElement;            l.wrap(f);            if (l[0] === k || r.contains(l[0], k)) {                r(k).focus()            }            f = l.parent();            if (l.css("position") == "static") {                f.css({                    position: "relative"                });                l.css({                    position: "relative"                })            } else {                r.extend(j, {                    position: l.css("position"),                    zIndex: l.css("z-index")                });                r.each(["top", "left", "bottom", "right"], function (o, n) {                    j[n] = l.css(n);                    if (isNaN(parseInt(j[n], 10))) {                        j[n] = "auto"                    }                });                l.css({                    position: "relative",                    top: 0,                    left: 0,                    right: "auto",                    bottom: "auto"                })            }            return f.css(j).show()        },        removeWrapper: function (k) {            var j, f = document.activeElement;            if (k.parent().is(".ui-effects-wrapper")) {                j = k.parent().replaceWith(k);                if (k[0] === f || r.contains(k[0], f)) {                    r(f).focus()                }                return j            }            return k        },        setTransition: function (l, j, f, k) {            k = k || {};            r.each(j, function (o, n) {                unit = l.cssUnit(n);                if (unit[0] > 0) {                    k[n] = unit[0] * f + unit[1]                }            });            return k        }    });    r.fn.extend({        effect: function (l) {            var j = h.apply(this, arguments),                f = {                    options: j[1],                    duration: j[2],                    callback: j[3]                };            j = f.options.mode;            var k = r.effects[l];            if (r.fx.off || !k) {                return j ? this[j](f.duration, f.callback) : this.each(function () {                    f.callback && f.callback.call(this)                })            }            return k.call(this, f)        },        _show: r.fn.show,        show: function (j) {            if (g(j)) {                return this._show.apply(this, arguments)            } else {                var f = h.apply(this, arguments);                f[1].mode = "show";                return this.effect.apply(this, f)            }        },        _hide: r.fn.hide,        hide: function (j) {            if (g(j)) {                return this._hide.apply(this, arguments)            } else {                var f = h.apply(this, arguments);                f[1].mode = "hide";                return this.effect.apply(this, f)            }        },        __toggle: r.fn.toggle,        toggle: function (j) {            if (g(j) || typeof j === "boolean" || r.isFunction(j)) {                return this.__toggle.apply(this, arguments)            } else {                var f = h.apply(this, arguments);                f[1].mode = "toggle";                return this.effect.apply(this, f)            }        },        cssUnit: function (k) {            var j = this.css(k),                f = [];            r.each(["em", "px", "%", "pt"], function (n, l) {                if (j.indexOf(l) > 0) {                    f = [parseFloat(j), l]                }            });            return f        }    });    r.easing.jswing = r.easing.swing;    r.extend(r.easing, {        def: "easeOutQuad",        swing: function (n, j, f, l, k) {            return r.easing[r.easing.def](n, j, f, l, k)        },        easeInQuad: function (n, j, f, l, k) {            return l * (j /= k) * j + f        },        easeOutQuad: function (n, j, f, l, k) {            return -l * (j /= k) * (j - 2) + f        },        easeInOutQuad: function (n, j, f, l, k) {            if ((j /= k / 2) < 1) {                return l / 2 * j * j + f            }            return -l / 2 * (--j * (j - 2) - 1) + f        },        easeInCubic: function (n, j, f, l, k) {            return l * (j /= k) * j * j + f        },        easeOutCubic: function (n, j, f, l, k) {            return l * ((j = j / k - 1) * j * j + 1) + f        },        easeInOutCubic: function (n, j, f, l, k) {            if ((j /= k / 2) < 1) {                return l / 2 * j * j * j + f            }            return l / 2 * ((j -= 2) * j * j + 2) + f        },        easeInQuart: function (n, j, f, l, k) {            return l * (j /= k) * j * j * j + f        },        easeOutQuart: function (n, j, f, l, k) {            return -l * ((j = j / k - 1) * j * j * j - 1) + f        },        easeInOutQuart: function (n, j, f, l, k) {            if ((j /= k / 2) < 1) {                return l / 2 * j * j * j * j + f            }            return -l / 2 * ((j -= 2) * j * j * j - 2) + f        },        easeInQuint: function (n, j, f, l, k) {            return l * (j /= k) * j * j * j * j + f        },        easeOutQuint: function (n, j, f, l, k) {            return l * ((j = j / k - 1) * j * j * j * j + 1) + f        },        easeInOutQuint: function (n, j, f, l, k) {            if ((j /= k / 2) < 1) {                return l / 2 * j * j * j * j * j + f            }            return l / 2 * ((j -= 2) * j * j * j * j + 2) + f        },        easeInSine: function (n, j, f, l, k) {            return -l * Math.cos(j / k * (Math.PI / 2)) + l + f        },        easeOutSine: function (n, j, f, l, k) {            return l * Math.sin(j / k * (Math.PI / 2)) + f        },        easeInOutSine: function (n, j, f, l, k) {            return -l / 2 * (Math.cos(Math.PI * j / k) - 1) + f        },        easeInExpo: function (n, j, f, l, k) {            return j == 0 ? f : l * Math.pow(2, 10 * (j / k - 1)) + f        },        easeOutExpo: function (n, j, f, l, k) {            return j == k ? f + l : l * (-Math.pow(2, -10 * j / k) + 1) + f        },        easeInOutExpo: function (n, j, f, l, k) {            if (j == 0) {                return f            }            if (j == k) {                return f + l            }            if ((j /= k / 2) < 1) {                return l / 2 * Math.pow(2, 10 * (j - 1)) + f            }            return l / 2 * (-Math.pow(2, -10 * --j) + 2) + f        },        easeInCirc: function (n, j, f, l, k) {            return -l * (Math.sqrt(1 - (j /= k) * j) - 1) + f        },        easeOutCirc: function (n, j, f, l, k) {            return l * Math.sqrt(1 - (j = j / k - 1) * j) + f        },        easeInOutCirc: function (n, j, f, l, k) {            if ((j /= k / 2) < 1) {                return -l / 2 * (Math.sqrt(1 - j * j) - 1) + f            }            return l / 2 * (Math.sqrt(1 - (j -= 2) * j) + 1) + f        },        easeInElastic: function (p, j, f, o, n) {            p = 1.70158;            var l = 0,                k = o;            if (j == 0) {                return f            }            if ((j /= n) == 1) {                return f + o            }            l || (l = n * 0.3);            if (k < Math.abs(o)) {                k = o;                p = l / 4            } else {                p = l / (2 * Math.PI) * Math.asin(o / k)            }            return -(k * Math.pow(2, 10 * (j -= 1)) * Math.sin((j * n - p) * 2 * Math.PI / l)) + f        },        easeOutElastic: function (p, j, f, o, n) {            p = 1.70158;            var l = 0,                k = o;            if (j == 0) {                return f            }            if ((j /= n) == 1) {                return f + o            }            l || (l = n * 0.3);            if (k < Math.abs(o)) {                k = o;                p = l / 4            } else {                p = l / (2 * Math.PI) * Math.asin(o / k)            }            return k * Math.pow(2, -10 * j) * Math.sin((j * n - p) * 2 * Math.PI / l) + o + f        },        easeInOutElastic: function (p, j, f, o, n) {            p = 1.70158;            var l = 0,                k = o;            if (j == 0) {                return f            }            if ((j /= n / 2) == 2) {                return f + o            }            l || (l = n * 0.3 * 1.5);            if (k < Math.abs(o)) {                k = o;                p = l / 4            } else {                p = l / (2 * Math.PI) * Math.asin(o / k)            } if (j < 1) {                return -0.5 * k * Math.pow(2, 10 * (j -= 1)) * Math.sin((j * n - p) * 2 * Math.PI / l) + f            }            return k * Math.pow(2, -10 * (j -= 1)) * Math.sin((j * n - p) * 2 * Math.PI / l) * 0.5 + o + f        },        easeInBack: function (o, j, f, n, l, k) {            if (k == i) {                k = 1.70158            }            return n * (j /= l) * j * ((k + 1) * j - k) + f        },        easeOutBack: function (o, j, f, n, l, k) {            if (k == i) {                k = 1.70158            }            return n * ((j = j / l - 1) * j * ((k + 1) * j + k) + 1) + f        },        easeInOutBack: function (o, j, f, n, l, k) {            if (k == i) {                k = 1.70158            }            if ((j /= l / 2) < 1) {                return n / 2 * j * j * (((k *= 1.525) + 1) * j - k) + f            }            return n / 2 * ((j -= 2) * j * (((k *= 1.525) + 1) * j + k) + 2) + f        },        easeInBounce: function (n, j, f, l, k) {            return l - r.easing.easeOutBounce(n, k - j, 0, l, k) + f        },        easeOutBounce: function (n, j, f, l, k) {            return (j /= k) < 1 / 2.75 ? l * 7.5625 * j * j + f : j < 2 / 2.75 ? l * (7.5625 * (j -= 1.5 / 2.75) * j + 0.75) + f : j < 2.5 / 2.75 ? l * (7.5625 * (j -= 2.25 / 2.75) * j + 0.9375) + f : l * (7.5625 * (j -= 2.625 / 2.75) * j + 0.984375) + f        },        easeInOutBounce: function (n, j, f, l, k) {            if (j < k / 2) {                return r.easing.easeInBounce(n, j * 2, 0, l, k) * 0.5 + f            }            return r.easing.easeOutBounce(n, j * 2 - k, 0, l, k) * 0.5 + l * 0.5 + f        }    })}(jQuery);(function (a) {    a.effects.blind = function (b) {        return this.queue(function () {            var c = a(this),                l = ["position", "top", "bottom", "left", "right"],                n = a.effects.setMode(c, b.options.mode || "hide"),                p = b.options.direction || "vertical";            a.effects.save(c, l);            c.show();            var o = a.effects.createWrapper(c).css({                overflow: "hidden"            }),                k = p == "vertical" ? "height" : "width";            p = p == "vertical" ? o.height() : o.width();            n == "show" && o.css(k, 0);            var j = {};            j[k] = n == "show" ? p : 0;            o.animate(j, b.duration, b.options.easing, function () {                n == "hide" && c.hide();                a.effects.restore(c, l);                a.effects.removeWrapper(c);                b.callback && b.callback.apply(c[0], arguments);                c.dequeue()            })        })    }})(jQuery);(function (a) {    a.effects.bounce = function (c) {        return this.queue(function () {            var w = a(this),                e = ["position", "top", "bottom", "left", "right"],                q = a.effects.setMode(w, c.options.mode || "effect"),                u = c.options.direction || "up",                v = c.options.distance || 20,                b = c.options.times || 5,                p = c.duration || 250;            /show|hide/.test(q) && e.push("opacity");            a.effects.save(w, e);            w.show();            a.effects.createWrapper(w);            var s = u == "up" || u == "down" ? "top" : "left";            u = u == "up" || u == "left" ? "pos" : "neg";            v = c.options.distance || (s == "top" ? w.outerHeight({                margin: true            }) / 3 : w.outerWidth({                margin: true            }) / 3);            if (q == "show") {                w.css("opacity", 0).css(s, u == "pos" ? -v : v)            }            if (q == "hide") {                v /= b * 2            }            q != "hide" && b--;            if (q == "show") {                var r = {                    opacity: 1                };                r[s] = (u == "pos" ? "+=" : "-=") + v;                w.animate(r, p / 2, c.options.easing);                v /= 2;                b--            }            for (r = 0; r < b; r++) {                var o = {}, n = {};                o[s] = (u == "pos" ? "-=" : "+=") + v;                n[s] = (u == "pos" ? "+=" : "-=") + v;                w.animate(o, p / 2, c.options.easing).animate(n, p / 2, c.options.easing);                v = q == "hide" ? v * 2 : v / 2            }            if (q == "hide") {                r = {                    opacity: 0                };                r[s] = (u == "pos" ? "-=" : "+=") + v;                w.animate(r, p / 2, c.options.easing, function () {                    w.hide();                    a.effects.restore(w, e);                    a.effects.removeWrapper(w);                    c.callback && c.callback.apply(this, arguments)                })            } else {                o = {};                n = {};                o[s] = (u == "pos" ? "-=" : "+=") + v;                n[s] = (u == "pos" ? "+=" : "-=") + v;                w.animate(o, p / 2, c.options.easing).animate(n, p / 2, c.options.easing, function () {                    a.effects.restore(w, e);                    a.effects.removeWrapper(w);                    c.callback && c.callback.apply(this, arguments)                })            }            w.queue("fx", function () {                w.dequeue()            });            w.dequeue()        })    }})(jQuery);(function (a) {    a.effects.clip = function (b) {        return this.queue(function () {            var e = a(this),                j = ["position", "top", "bottom", "left", "right", "height", "width"],                n = a.effects.setMode(e, b.options.mode || "hide"),                p = b.options.direction || "vertical";            a.effects.save(e, j);            e.show();            var o = a.effects.createWrapper(e).css({                overflow: "hidden"            });            o = e[0].tagName == "IMG" ? o : e;            var l = {                size: p == "vertical" ? "height" : "width",                position: p == "vertical" ? "top" : "left"            };            p = p == "vertical" ? o.height() : o.width();            if (n == "show") {                o.css(l.size, 0);                o.css(l.position, p / 2)            }            var k = {};            k[l.size] = n == "show" ? p : 0;            k[l.position] = n == "show" ? 0 : p / 2;            o.animate(k, {                queue: false,                duration: b.duration,                easing: b.options.easing,                complete: function () {                    n == "hide" && e.hide();                    a.effects.restore(e, j);                    a.effects.removeWrapper(e);                    b.callback && b.callback.apply(e[0], arguments);                    e.dequeue()                }            })        })    }})(jQuery);(function (a) {    a.effects.drop = function (b) {        return this.queue(function () {            var d = a(this),                k = ["position", "top", "bottom", "left", "right", "opacity"],                o = a.effects.setMode(d, b.options.mode || "hide"),                c = b.options.direction || "left";            a.effects.save(d, k);            d.show();            a.effects.createWrapper(d);            var n = c == "up" || c == "down" ? "top" : "left";            c = c == "up" || c == "left" ? "pos" : "neg";            var l = b.options.distance || (n == "top" ? d.outerHeight({                margin: true            }) / 2 : d.outerWidth({                margin: true            }) / 2);            if (o == "show") {                d.css("opacity", 0).css(n, c == "pos" ? -l : l)            }            var j = {                opacity: o == "show" ? 1 : 0            };            j[n] = (o == "show" ? c == "pos" ? "+=" : "-=" : c == "pos" ? "-=" : "+=") + l;            d.animate(j, {                queue: false,                duration: b.duration,                easing: b.options.easing,                complete: function () {                    o == "hide" && d.hide();                    a.effects.restore(d, k);                    a.effects.removeWrapper(d);                    b.callback && b.callback.apply(this, arguments);                    d.dequeue()                }            })        })    }})(jQuery);(function (a) {    a.effects.explode = function (b) {        return this.queue(function () {            var r = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3,                q = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3;            b.options.mode = b.options.mode == "toggle" ? a(this).is(":visible") ? "hide" : "show" : b.options.mode;            var j = a(this).show().css("visibility", "hidden"),                n = j.offset();            n.top -= parseInt(j.css("marginTop"), 10) || 0;            n.left -= parseInt(j.css("marginLeft"), 10) || 0;            for (var l = j.outerWidth(true), k = j.outerHeight(true), p = 0; p < r; p++) {                for (var o = 0; o < q; o++) {                    j.clone().appendTo("body").wrap("<div></div>").css({                        position: "absolute",                        visibility: "visible",                        left: -o * (l / q),                        top: -p * (k / r)                    }).parent().addClass("ui-effects-explode").css({                        position: "absolute",                        overflow: "hidden",                        width: l / q,                        height: k / r,                        left: n.left + o * (l / q) + (b.options.mode == "show" ? (o - Math.floor(q / 2)) * (l / q) : 0),                        top: n.top + p * (k / r) + (b.options.mode == "show" ? (p - Math.floor(r / 2)) * (k / r) : 0),                        opacity: b.options.mode == "show" ? 0 : 1                    }).animate({                        left: n.left + o * (l / q) + (b.options.mode == "show" ? 0 : (o - Math.floor(q / 2)) * (l / q)),                        top: n.top + p * (k / r) + (b.options.mode == "show" ? 0 : (p - Math.floor(r / 2)) * (k / r)),                        opacity: b.options.mode == "show" ? 1 : 0                    }, b.duration || 500)                }            }            setTimeout(function () {                b.options.mode == "show" ? j.css({                    visibility: "visible"                }) : j.css({                    visibility: "visible"                }).hide();                b.callback && b.callback.apply(j[0]);                j.dequeue();                a("div.ui-effects-explode").remove()            }, b.duration || 500)        })    }})(jQuery);(function (a) {    a.effects.fade = function (b) {        return this.queue(function () {            var f = a(this),                e = a.effects.setMode(f, b.options.mode || "hide");            f.animate({                opacity: e            }, {                queue: false,                duration: b.duration,                easing: b.options.easing,                complete: function () {                    b.callback && b.callback.apply(this, arguments);                    f.dequeue()                }            })        })    }})(jQuery);(function (a) {    a.effects.fold = function (b) {        return this.queue(function () {            var w = a(this),                o = ["position", "top", "bottom", "left", "right"],                v = a.effects.setMode(w, b.options.mode || "hide"),                r = b.options.size || 15,                q = !! b.options.horizFirst,                n = b.duration ? b.duration / 2 : a.fx.speeds._default / 2;            a.effects.save(w, o);            w.show();            var u = a.effects.createWrapper(w).css({                overflow: "hidden"            }),                s = v == "show" != q,                c = s ? ["width", "height"] : ["height", "width"];            s = s ? [u.width(), u.height()] : [u.height(), u.width()];            var p = /([0-9]+)%/.exec(r);            if (p) {                r = parseInt(p[1], 10) / 100 * s[v == "hide" ? 0 : 1]            }            if (v == "show") {                u.css(q ? {                    height: 0,                    width: r                } : {                    height: r,                    width: 0                })            }            q = {};            p = {};            q[c[0]] = v == "show" ? s[0] : r;            p[c[1]] = v == "show" ? s[1] : 0;            u.animate(q, n, b.options.easing).animate(p, n, b.options.easing, function () {                v == "hide" && w.hide();                a.effects.restore(w, o);                a.effects.removeWrapper(w);                b.callback && b.callback.apply(w[0], arguments);                w.dequeue()            })        })    }})(jQuery);(function (a) {    a.effects.highlight = function (b) {        return this.queue(function () {            var c = a(this),                h = ["backgroundImage", "backgroundColor", "opacity"],                i = a.effects.setMode(c, b.options.mode || "show"),                g = {                    backgroundColor: c.css("backgroundColor")                };            if (i == "hide") {                g.opacity = 0            }            a.effects.save(c, h);            c.show().css({                backgroundImage: "none",                backgroundColor: b.options.color || "#ffff99"            }).animate(g, {                queue: false,                duration: b.duration,                easing: b.options.easing,                complete: function () {                    i == "hide" && c.hide();                    a.effects.restore(c, h);                    i == "show" && !a.support.opacity && this.style.removeAttribute("filter");                    b.callback && b.callback.apply(this, arguments);                    c.dequeue()                }            })        })    }})(jQuery);(function (a) {    a.effects.pulsate = function (b) {        return this.queue(function () {            var d = a(this),                e = a.effects.setMode(d, b.options.mode || "show");            times = (b.options.times || 5) * 2 - 1;            duration = b.duration ? b.duration / 2 : a.fx.speeds._default / 2;            isVisible = d.is(":visible");            animateTo = 0;            if (!isVisible) {                d.css("opacity", 0).show();                animateTo = 1            }            if (e == "hide" && isVisible || e == "show" && !isVisible) {                times--            }            for (e = 0; e < times; e++) {                d.animate({                    opacity: animateTo                }, duration, b.options.easing);                animateTo = (animateTo + 1) % 2            }            d.animate({                opacity: animateTo            }, duration, b.options.easing, function () {                animateTo == 0 && d.hide();                b.callback && b.callback.apply(this, arguments)            });            d.queue("fx", function () {                d.dequeue()            }).dequeue()        })    }})(jQuery);(function (a) {    a.effects.puff = function (c) {        return this.queue(function () {            var b = a(this),                k = a.effects.setMode(b, c.options.mode || "hide"),                j = parseInt(c.options.percent, 10) || 150,                f = j / 100,                d = {                    height: b.height(),                    width: b.width()                };            a.extend(c.options, {                fade: true,                mode: k,                percent: k == "hide" ? j : 100,                from: k == "hide" ? d : {                    height: d.height * f,                    width: d.width * f                }            });            b.effect("scale", c.options, c.duration, c.callback);            b.dequeue()        })    };    a.effects.scale = function (c) {        return this.queue(function () {            var b = a(this),                n = a.extend(true, {}, c.options),                k = a.effects.setMode(b, c.options.mode || "effect"),                j = parseInt(c.options.percent, 10) || (parseInt(c.options.percent, 10) == 0 ? 0 : k == "hide" ? 0 : 100),                d = c.options.direction || "both",                l = c.options.origin;            if (k != "effect") {                n.origin = l || ["middle", "center"];                n.restore = true            }            l = {                height: b.height(),                width: b.width()            };            b.from = c.options.from || (k == "show" ? {                height: 0,                width: 0            } : l);            j = {                y: d != "horizontal" ? j / 100 : 1,                x: d != "vertical" ? j / 100 : 1            };            b.to = {                height: l.height * j.y,                width: l.width * j.x            };            if (c.options.fade) {                if (k == "show") {                    b.from.opacity = 0;                    b.to.opacity = 1                }                if (k == "hide") {                    b.from.opacity = 1;                    b.to.opacity = 0                }            }            n.from = b.from;            n.to = b.to;            n.mode = k;            b.effect("size", n, c.duration, c.callback);            b.dequeue()        })    };    a.effects.size = function (c) {        return this.queue(function () {            var B = a(this),                z = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],                x = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],                w = ["width", "height", "overflow"],                v = ["fontSize"],                y = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],                s = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],                b = a.effects.setMode(B, c.options.mode || "effect"),                o = c.options.restore || false,                q = c.options.scale || "both",                r = c.options.origin,                u = {                    height: B.height(),                    width: B.width()                };            B.from = c.options.from || u;            B.to = c.options.to || u;            if (r) {                r = a.effects.getBaseline(r, u);                B.from.top = (u.height - B.from.height) * r.y;                B.from.left = (u.width - B.from.width) * r.x;                B.to.top = (u.height - B.to.height) * r.y;                B.to.left = (u.width - B.to.width) * r.x            }            var A = {                from: {                    y: B.from.height / u.height,                    x: B.from.width / u.width                },                to: {                    y: B.to.height / u.height,                    x: B.to.width / u.width                }            };            if (q == "box" || q == "both") {                if (A.from.y != A.to.y) {                    z = z.concat(y);                    B.from = a.effects.setTransition(B, y, A.from.y, B.from);                    B.to = a.effects.setTransition(B, y, A.to.y, B.to)                }                if (A.from.x != A.to.x) {                    z = z.concat(s);                    B.from = a.effects.setTransition(B, s, A.from.x, B.from);                    B.to = a.effects.setTransition(B, s, A.to.x, B.to)                }            }            if (q == "content" || q == "both") {                if (A.from.y != A.to.y) {                    z = z.concat(v);                    B.from = a.effects.setTransition(B, v, A.from.y, B.from);                    B.to = a.effects.setTransition(B, v, A.to.y, B.to)                }            }            a.effects.save(B, o ? z : x);            B.show();            a.effects.createWrapper(B);            B.css("overflow", "hidden").css(B.from);            if (q == "content" || q == "both") {                y = y.concat(["marginTop", "marginBottom"]).concat(v);                s = s.concat(["marginLeft", "marginRight"]);                w = z.concat(y).concat(s);                B.find("*[width]").each(function () {                    child = a(this);                    o && a.effects.save(child, w);                    var d = {                        height: child.height(),                        width: child.width()                    };                    child.from = {                        height: d.height * A.from.y,                        width: d.width * A.from.x                    };                    child.to = {                        height: d.height * A.to.y,                        width: d.width * A.to.x                    };                    if (A.from.y != A.to.y) {                        child.from = a.effects.setTransition(child, y, A.from.y, child.from);                        child.to = a.effects.setTransition(child, y, A.to.y, child.to)                    }                    if (A.from.x != A.to.x) {                        child.from = a.effects.setTransition(child, s, A.from.x, child.from);                        child.to = a.effects.setTransition(child, s, A.to.x, child.to)                    }                    child.css(child.from);                    child.animate(child.to, c.duration, c.options.easing, function () {                        o && a.effects.restore(child, w)                    })                })            }            B.animate(B.to, {                queue: false,                duration: c.duration,                easing: c.options.easing,                complete: function () {                    B.to.opacity === 0 && B.css("opacity", B.from.opacity);                    b == "hide" && B.hide();                    a.effects.restore(B, o ? z : x);                    a.effects.removeWrapper(B);                    c.callback && c.callback.apply(this, arguments);                    B.dequeue()                }            })        })    }})(jQuery);(function (a) {    a.effects.shake = function (b) {        return this.queue(function () {            var w = a(this),                o = ["position", "top", "bottom", "left", "right"];            a.effects.setMode(w, b.options.mode || "effect");            var v = b.options.direction || "left",                u = b.options.distance || 20,                d = b.options.times || 3,                s = b.duration || b.options.duration || 140;            a.effects.save(w, o);            w.show();            a.effects.createWrapper(w);            var r = v == "up" || v == "down" ? "top" : "left",                q = v == "up" || v == "left" ? "pos" : "neg";            v = {};            var p = {}, n = {};            v[r] = (q == "pos" ? "-=" : "+=") + u;            p[r] = (q == "pos" ? "+=" : "-=") + u * 2;            n[r] = (q == "pos" ? "-=" : "+=") + u * 2;            w.animate(v, s, b.options.easing);            for (u = 1; u < d; u++) {                w.animate(p, s, b.options.easing).animate(n, s, b.options.easing)            }            w.animate(p, s, b.options.easing).animate(v, s / 2, b.options.easing, function () {                a.effects.restore(w, o);                a.effects.removeWrapper(w);                b.callback && b.callback.apply(this, arguments)            });            w.queue("fx", function () {                w.dequeue()            });            w.dequeue()        })    }})(jQuery);(function (a) {    a.effects.slide = function (b) {        return this.queue(function () {            var d = a(this),                k = ["position", "top", "bottom", "left", "right"],                n = a.effects.setMode(d, b.options.mode || "show"),                c = b.options.direction || "left";            a.effects.save(d, k);            d.show();            a.effects.createWrapper(d).css({                overflow: "hidden"            });            var l = c == "up" || c == "down" ? "top" : "left";            c = c == "up" || c == "left" ? "pos" : "neg";            var o = b.options.distance || (l == "top" ? d.outerHeight({                margin: true            }) : d.outerWidth({                margin: true            }));            if (n == "show") {                d.css(l, c == "pos" ? isNaN(o) ? "-" + o : -o : o)            }            var j = {};            j[l] = (n == "show" ? c == "pos" ? "+=" : "-=" : c == "pos" ? "-=" : "+=") + o;            d.animate(j, {                queue: false,                duration: b.duration,                easing: b.options.easing,                complete: function () {                    n == "hide" && d.hide();                    a.effects.restore(d, k);                    a.effects.removeWrapper(d);                    b.callback && b.callback.apply(this, arguments);                    d.dequeue()                }            })        })    }})(jQuery);(function (a) {    a.effects.transfer = function (b) {        return this.queue(function () {            var e = a(this),                i = a(b.options.to),                h = i.offset();            i = {                top: h.top,                left: h.left,                height: i.innerHeight(),                width: i.innerWidth()            };            h = e.offset();            var g = a('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(b.options.className).css({                top: h.top,                left: h.left,                height: e.innerHeight(),                width: e.innerWidth(),                position: "absolute"            }).animate(i, b.duration, b.options.easing, function () {                g.remove();                b.callback && b.callback.apply(e[0], arguments);                e.dequeue()            })        })    }})(jQuery);(function (f) {    f.support.touch = "ontouchend" in document;    if (!f.support.touch) {        return    }    var j = f.ui.mouse.prototype,        h = j._mouseInit,        g;    function i(c, b) {        if (c.originalEvent.touches.length > 1) {            return        }        c.preventDefault();        var a = c.originalEvent.changedTouches[0],            d = document.createEvent("MouseEvents");        d.initMouseEvent(b, true, true, window, 1, a.screenX, a.screenY, a.clientX, a.clientY, false, false, false, false, 0, null);        c.target.dispatchEvent(d)    }    j._touchStart = function (a) {        var b = this;        if (g || !b._mouseCapture(a.originalEvent.changedTouches[0])) {            return        }        g = true;        b._touchMoved = false;        i(a, "mouseover");        i(a, "mousemove");        i(a, "mousedown")    };    j._touchMove = function (a) {        if (!g) {            return        }        this._touchMoved = true;        i(a, "mousemove")    };    j._touchEnd = function (a) {        if (!g) {            return        }        i(a, "mouseup");        i(a, "mouseout");        if (!this._touchMoved) {            i(a, "click")        }        g = false    };    j._mouseInit = function () {        var a = this;        a.element.bind("touchstart", f.proxy(a, "_touchStart")).bind("touchmove", f.proxy(a, "_touchMove")).bind("touchend", f.proxy(a, "_touchEnd"));        h.call(a)    }})(jQuery);(function (e) {    var c = false;    function g(v, y, n, i, r, x, o, q, l, u, p) {        var k;        var h;        var s;        var j;        if (jQuery(r[n.current_img_no]).attr("data-video") == "true") {            jQuery("#SM_contentHolderUnit_" + n.current_img_no, x).html(jQuery(r[n.current_img_no]).html())        }        jQuery(i[n.current_img_no]).removeClass("bottomNavButtonON_SM");        n.current_img_no = b(n.current_img_no, v, l);        if (jQuery(r[n.current_img_no]).attr("data-video") != "true") {            u.css("display", "none")        }        jQuery(i[n.current_img_no]).addClass("bottomNavButtonON_SM");        n.currentZ_index = 100;        n.currentImg = jQuery("#SM_contentHolderUnit_" + n.current_img_no, x);        k = o;        h = q;        s = parseInt((y.width - o) / 2);        j = parseInt(y.height - q) - y.verticalAdjustment;        d(n.currentImg, s, j, k, h, 1, false, v, n, y, p, r, l, u, i, x, o, q);        w = n.current_img_no;        for (m = 1; m <= Math.floor(y.numberOfVisibleItems / 2); m++) {            n.currentZ_index--;            w = b(w, -1, l);            n.currentImg = jQuery("#SM_contentHolderUnit_" + w);            n.currentImg = jQuery("#SM_contentHolderUnit_" + w, x);            n.currentImg.css("z-index", n.currentZ_index);            if (m == Math.floor(y.numberOfVisibleItems / 2)) {                if (v === 1) {                    last_aux_img_no = b(w, -1, l);                    last_currentImg = jQuery("#SM_contentHolderUnit_" + last_aux_img_no, x);                    h = q - 2 * (m + 1) * y.elementsVerticalSpacing;                    k = parseInt(h * n.aspectOrig);                    s = parseInt((y.width - o) / 2) - (m + 1) * y.elementsHorizontalSpacing;                    j = parseInt(y.height - q) - y.verticalAdjustment + (m + 1) * y.elementsVerticalSpacing;                    s = s;                    d(last_currentImg, s, j, k, h, 0, false, v, n, y, p, r, l, u, i, x, o, q)                } else {                    h = q - 2 * (m + 1) * y.elementsVerticalSpacing;                    k = parseInt(h * n.aspectOrig);                    f(n.currentImg, (m + 1), y, q, n);                    s = parseInt((y.width - o) / 2) - (m + 1) * y.elementsHorizontalSpacing;                    j = parseInt(y.height - q) - y.verticalAdjustment + (m + 1) * y.elementsVerticalSpacing;                    n.currentImg.css("left", s);                    n.currentImg.css("top", j);                    n.currentImg.css("opacity", 0)                }            }            n.currentImg.css("display", "block");            h = q - 2 * m * y.elementsVerticalSpacing;            k = parseInt(h * n.aspectOrig);            s = parseInt((y.width - o) / 2) - m * y.elementsHorizontalSpacing;            j = parseInt(y.height - q) - y.verticalAdjustment + m * y.elementsVerticalSpacing;            if (m == 2) {                s += 4            }            d(n.currentImg, s, j, k, h, 1, false, v, n, y, p, r, l, u, i, x, o, q)        }        var w = n.current_img_no;        for (m = 1; m <= Math.floor(y.numberOfVisibleItems / 2); m++) {            n.currentZ_index--;            w = b(w, 1, l);            n.currentImg = jQuery("#SM_contentHolderUnit_" + w, x);            n.currentImg.css("z-index", n.currentZ_index);            if (m == Math.floor(y.numberOfVisibleItems / 2)) {                if (v === 1) {                    f(n.currentImg, (m + 1), y, q, n);                    n.currentImg.css("left", parseInt((y.width - o) / 2) + (o + (m + 1) * y.elementsHorizontalSpacing - n.currentImg.width()) + "px");                    n.currentImg.css("top", parseInt(y.height - q) - y.verticalAdjustment + (m + 1) * y.elementsVerticalSpacing + "px");                    n.currentImg.css("opacity", 0)                } else {                    last_aux_img_no = b(w, 1, l);                    last_currentImg = jQuery("#SM_contentHolderUnit_" + last_aux_img_no, x);                    h = q - 2 * (m + 1) * y.elementsVerticalSpacing;                    k = parseInt(h * n.aspectOrig);                    s = parseInt((y.width - o) / 2) + (o + (m + 1) * y.elementsHorizontalSpacing - k);                    j = parseInt(y.height - q) - y.verticalAdjustment + (m + 1) * y.elementsVerticalSpacing;                    d(last_currentImg, s, j, k, h, 0, false, v, n, y, p, r, l, u, i, x, o, q)                }            }            n.currentImg.css("display", "block");            h = q - 2 * m * y.elementsVerticalSpacing;            k = parseInt(h * n.aspectOrig);            s = parseInt((y.width - o) / 2) + (o + m * y.elementsHorizontalSpacing - k);            j = parseInt(y.height - q) - y.verticalAdjustment + m * y.elementsVerticalSpacing;            if (m == 2) {                s -= 4            }            if (m == Math.floor(y.numberOfVisibleItems / 2)) {                d(n.currentImg, s, j, k, h, 1, true, v, n, y, p, r, l, u, i, x, o, q)            } else {                d(n.currentImg, s, j, k, h, 1, false, v, n, y, p, r, l, u, i, x, o, q)            }        }    }    function f(n, k, j, l, o) {        var i = l - 2 * k * j.elementsVerticalSpacing;        var h = parseInt(i * o.aspectOrig);        n.css("height", i + "px");        n.css("width", h + "px");        if (j.resizeImages) {            imgInside = n.find("img:first");            if (imgInside.is("img")) {                imgInside.css("height", i + "px");                imgInside.css("width", h + "px")            }        }    }    function d(l, n, w, p, z, k, h, v, x, j, u, s, r, A, i, q, o, y) {        x.slideIsRunning = true;        u.html(jQuery(s[x.current_img_no]).attr("data-title"));        if (k === 0) {            l.css("z-index", x.currentZ_index - 1)        } else {            l.css("z-index", x.currentZ_index)        }        l.css("display", "block");        l.animate({            left: n + "px",            top: w + "px",            width: p + "px",            height: z + "px",            opacity: k        }, j.animationTime * 1000, j.easing, function () {            if (h) {                x.slideIsRunning = false;                if (jQuery(s[x.current_img_no]).attr("data-video") == "true") {                    A.css("display", "block")                }                if ((j.autoPlay > 0 && r > 1 && !x.mouseOverBanner && !x.fastForwardRunning) || (x.current_img_no != x.img_no_where_to_stop && x.fastForwardRunning)) {                    clearTimeout(x.timeoutID)                }                if (x.current_img_no == x.img_no_where_to_stop && x.fastForwardRunning) {                    x.fastForwardRunning = false;                    j.animationTime = x.animationTimeOrig;                    j.autoPlay = x.autoPlayOrig;                    clearTimeout(x.timeoutID)                }            }        });        if (j.resizeImages) {            imgInside = l.find("img:first");            if (imgInside.is("img")) {                imgInside.animate({                    width: p + "px",                    height: z + "px"                }, j.animationTime * 1000, j.easing, function () {})            }        }    }    function b(i, j, h) {        if (i + j >= h) {            i = 0        } else {            if (i + j < 0) {                i = h - 1            } else {                i += j            }        }        return i    }    function a(p, u, k, h, q, s, l, o, j, r, n) {        if (k.current_img_no - p === -1) {            g(1, u, k, h, q, s, l, o, j, r, n)        } else {            if (k.current_img_no - p === 1) {                g(-1, u, k, h, q, s, l, o, j, r, n)            } else {                k.fastForwardRunning = true;                u.animationTime = 0.4;                u.autoPlay = 0.1;                k.img_no_where_to_stop = p;                if (k.current_img_no < p) {                    if (p - k.current_img_no < (j - p + k.current_img_no)) {                        g(1, u, k, h, q, s, l, o, j, r, n)                    } else {                        g(-1, u, k, h, q, s, l, o, j, r, n)                    }                } else {                    if (k.current_img_no > p) {                        if ((k.current_img_no - p) < (j - k.current_img_no + p)) {                            g(-1, u, k, h, q, s, l, o, j, r, n)                        } else {                            g(1, u, k, h, q, s, l, o, j, r, n)                        }                    }                }            }        }    }    e.fn.allinone_carousel_SMALL = function (h) {        callback_function_carousel = h.callback;        var h;        h = e.extend({}, e.fn.allinone_carousel_SMALL.defaults_SMALL, h);        return this.each(function () {            var L = jQuery(this);            var M;            var n;            M = jQuery('<div id="SM_mini_wrapper"></div>').addClass("allinone_carousel_SM").addClass(h.skin);            n = jQuery('<div class="bannerControls">   <div  id="carousel_leftNav_sm" class="leftNav"></div>   <div id="carousel_rightNav_sm" class="rightNav"></div>    </div>  <div  id= "SM_contentHolder_actualcontainer"class="SM_contentHolder"></div>   <div class="elementTitle"></div>	<div class="playOver"></div>');            L.wrap(M);            L.after(n);            document.getElementById("carousel_leftNav_sm").appendChild(_gMainApplication.arrImagesTrack.leftNav_Carousel_sm);            document.getElementById("carousel_rightNav_sm").appendChild(_gMainApplication.arrImagesTrack.rightNav_Carousel_sm);            _gMainApplication.arrImagesTrack.leftNav_Carousel_sm.className = "leftNav_img";            _gMainApplication.arrImagesTrack.rightNav_Carousel_sm.className = "rightNav_img";            var y = L.parent(".allinone_carousel_SM");            var n = jQuery(".bannerControls", y);            var C = false;            var I = 0;            var P = jQuery(".SM_contentHolder", y);            var x = jQuery('<div id="bottomNav_m1" class="bottomNavLeft"></div>');            var D = jQuery('<div id="bottomNav_m2" class="bottomNav"></div>');            var v = jQuery('<div id="bottomNav_m3" class="bottomNavRight"></div>');            L.after(x);            L.after(D);            L.after(v);            if (!h.showAllControllers) {                n.css("display", "none")            }            var J = jQuery(".leftNav", y);            var K = jQuery(".rightNav", y);            J.css("display", "none");            K.css("display", "none");            if (h.showNavArrows) {                if (h.showOnInitNavArrows) {                    J.css("display", "block");                    K.css("display", "block")                }            }            var F = jQuery(".bottomNav", y);            var o = jQuery(".bottomNavLeft", y);            var E = jQuery(".bottomNavRight", y);            var p;            F.css("display", "block");            o.css("display", "block");            E.css("display", "block");            if (!h.showBottomNav) {                F.css("display", "none");                o.css("display", "none");                E.css("display", "none")            }            if (!h.showOnInitBottomNav) {                F.css("left", "-5000px");                o.css("left", "-5000px");                E.css("left", "-5000px")            }            var H = jQuery(".elementTitle", y);            if (!h.showElementTitle) {                H.css("display", "none")            }            var Q = jQuery(".playOver", y);            var z = 0;            var N = {                current_img_no: 0,                currentImg: 0,                currentZ_index: 101,                slideIsRunning: false,                mouseOverBanner: false,                fastForwardRunning: false,                isVideoPlaying: false,                img_no_where_to_stop: 0,                aspectOrig: 0,                timeoutID: "",                animationTimeOrig: h.animationTime,                autoPlayOrig: h.autoPlay            };            var j;            var G = 0;            y.width(h.width);            y.height(h.height);            P.width(h.width);            P.height(h.height);            n.css("margin-top", parseInt((h.height - J.height())) + "px");            var w = L.find("ul:first");            var B = w.children();            if (h.numberOfVisibleItems > L.find("ul:first li").length) {                h.numberOfVisibleItems = L.find("ul:first li").length            }            if (!(h.numberOfVisibleItems % 2)) {                h.numberOfVisibleItems--            }            var r;            var u = 0;            var O = 0;            var A;            var s = 0;            var k = 0;            B.each(function () {                N.currentImg = jQuery(this);                if (!N.currentImg.is("li")) {                    N.currentImg = N.currentImg.find("li:first")                }                if (N.currentImg.is("li")) {                    z++;                    r = jQuery('<div class="SM_contentHolderUnit" rel="' + (z - 1) + '" id="SM_contentHolderUnit_' + (z - 1) + '">' + N.currentImg.html() + "</div>");                    P.append(r);                    r.css("display", "none");                    if (u === 0) {                        u = 40;                        O = 75;                        N.aspectOrig = u / O                    }                    f(r, 0, h, O, N);                    r.css("top", parseInt(h.height - r.height()) - h.verticalAdjustment + "px");                    if (z == 1) {                        r.css("top", parseInt(h.height - r.height()) - h.verticalAdjustment + "px");                        r.css("z-index", N.currentZ_index);                        r.css("display", "block");                        if (jQuery(B[N.current_img_no]).attr("data-video") == "true") {                            Q.css("display", "block")                        }                    } else {                        if (z <= Math.ceil(h.numberOfVisibleItems / 2)) {                            N.currentZ_index--;                            f(r, (z - 1), h, O, N);                            r.css("left", parseInt((h.width - u) / 2) + (u + (z - 1) * h.elementsHorizontalSpacing - r.width()) + "px");                            r.css("top", parseInt(h.height - O) - h.verticalAdjustment + (z - 1) * h.elementsVerticalSpacing + "px");                            r.css("z-index", N.currentZ_index);                            r.css("display", "block")                        }                    }                    A = jQuery('<div id="mini_bottonNav_on_off" class="bottomNavButtonOFF" rel="' + (z - 1) + '"></div>');                    F.append(A);                    s += parseInt(A.css("padding-left").substring(0, A.css("padding-left").length - 2)) + A.width();                    k = parseInt((F.height() - parseInt(A.css("height").substring(0, A.css("height").length - 2))) / 2);                    A.css("margin-top", k + "px")                }            });            Q.css("left", parseInt((h.width - Q.width()) / 2) + "px");            Q.css("top", parseInt(h.height - r.height() - h.verticalAdjustment + (jQuery("#SM_contentHolderUnit_" + N.current_img_no, y).height() - Q.height()) / 2) + "px");            N.currentZ_index = 100;            for (m = 1; m <= Math.floor(h.numberOfVisibleItems / 2); m++) {                N.currentZ_index--;                jQuery("#SM_contentHolderUnit_" + (z - m), y).css("left", parseInt((h.width - u) / 2) - m * h.elementsHorizontalSpacing + "px");                jQuery("#SM_contentHolderUnit_" + (z - m), y).css("top", parseInt(h.height - O) - h.verticalAdjustment + m * h.elementsVerticalSpacing + "px");                jQuery("#SM_contentHolderUnit_" + (z - m), y).css("z-index", N.currentZ_index);                jQuery("#SM_contentHolderUnit_" + (z - m), y).css("display", "block")            }            H.html(jQuery(B[0]).attr("data-title"));            F.width(s);            if (h.showOnInitBottomNav) {                F.css("left", parseInt((y.width() - s) / 2) + "px");                o.css("left", parseInt(F.css("left").substring(0, F.css("left").length - 2)) - o.width() + "px");                E.css("left", parseInt(F.css("left").substring(0, F.css("left").length - 2)) + F.width() + parseInt(A.css("padding-left").substring(0, A.css("padding-left").length - 2)) + "px")            }            jQuery("iframe").each(function () {                var i = jQuery(this).attr("src");                var R = "?wmode=transparent";                jQuery(this).attr("src", i + R)            });            N.current_img_no = 0;            N.currentImg = jQuery(B[N.current_img_no]);            y.mouseenter(function () {                N.mouseOverBanner = true;                clearTimeout(N.timeoutID);                if (h.autoHideNavArrows && h.showNavArrows) {                    J.css("display", "block");                    K.css("display", "block")                }                if (h.autoHideBottomNav && h.showBottomNav) {                    F.css("display", "block");                    F.css("left", parseInt((y.width() - s) / 2) + "px");                    o.css("display", "block");                    o.css("left", parseInt(F.css("left").substring(0, F.css("left").length - 2)) - o.width() + "px");                    E.css("display", "block");                    E.css("left", parseInt(F.css("left").substring(0, F.css("left").length - 2)) + F.width() + parseInt(A.css("padding-left").substring(0, A.css("padding-left").length - 2)) + "px")                }            });            var r = jQuery(".SM_contentHolderUnit", y);						r.mouseover(			function(evt)			{				var rollOverImg = $('#'+evt.currentTarget.id).find('img').attr('data-rollver-url');				$('#'+evt.currentTarget.id).find('img').attr('src',rollOverImg)			}			);			r.mouseout(			function(evt)			{				var rollOverImg = $('#'+evt.currentTarget.id).find('img').attr('data-actual-url');				$('#'+evt.currentTarget.id).find('img').attr('src',rollOverImg)			}			);            r.click(function () {                var R = jQuery(this).attr("rel");                callback_function_carousel(R)            });            J.mousedown(function () {                c = true;                if (!N.slideIsRunning && !N.fastForwardRunning) {                    N.isVideoPlaying = false;                    clearTimeout(N.timeoutID);                    g(-1, h, N, l, B, y, u, O, z, Q, H)                }            });            J.mouseup(function () {                c = false            });            K.mousedown(function () {                c = true;                if (!N.slideIsRunning && !N.fastForwardRunning) {                    N.isVideoPlaying = false;                    clearTimeout(N.timeoutID);                    g(1, h, N, l, B, y, u, O, z, Q, H)                }            });            K.mouseup(function () {                c = false            });            J.mousedown(null);            K.mousedown(null);            var l = jQuery(".bottomNavButtonOFF", y);            l.mousedown(function () {                c = true;                if (!N.slideIsRunning && !N.fastForwardRunning) {                    var R = jQuery(this).attr("rel");                    if (R != N.current_img_no) {                        N.isVideoPlaying = false;                        jQuery(l[N.current_img_no]).removeClass("bottomNavButtonON_SM");                        a(parseInt(R), h, N, l, B, y, u, O, z, Q, H)                    }                }            });            if (h.enableTouchScreen) {                var q = Math.floor(Math.random() * 100000);                y.wrap('<div id="SM_carouselParent_MINI" style="position:absolute;" />');                jQuery("#SM_carouselParent_MINI").width(h.width + 1);                jQuery("#SM_carouselParent_MINI").height(h.height);                y.css("left", "0px");                y.css("position", "absolute");                rightVal = parseInt(K.css("right").substring(0, K.css("right").length - 2));                y.mousedown(function () {                    rightVal = parseInt(K.css("right").substring(0, K.css("right").length - 2));                    if (rightVal < 0 && !c) {                        K.css("right", "0")                    }                });                y.mouseup(function () {                    c = false;                    if (rightVal < 0) {                        K.css("right", rightVal + "px")                    }                });                y.draggable({                    axis: "x",                    containment: "parent",                    distance: 10,                    start: function (i, R) {                        origLeft = jQuery(this).css("left")                    },                    stop: function (i, R) {                        if (!N.effectIsRunning) {                            finalLeft = jQuery(this).css("left");                            direction = 1;                            if (origLeft < finalLeft) {                                direction = -1                            }                            g(direction, h, N, l, B, y, u, O, z, Q, H)                        }                        if (rightVal < 0) {                            K.css("right", rightVal + "px");                            K.css("visibility", "visible");                            J.css("visibility", "visible")                        }                        jQuery(this).css("left", "0px")                    }                })            }            g(1, h, N, l, B, y, u, O, z, Q, H)        })    };    e.fn.allinone_carousel_SMALL.defaults_SMALL = {        skin: "attractive",        width: 960,        height: 384,        autoPlay: 4,        numberOfVisibleItems: 7,        elementsHorizontalSpacing: 34,        elementsVerticalSpacing: 5,        verticalAdjustment: 0,        animationTime: 0.8,        easing: "easeOutQuad",        resizeImages: true,        showElementTitle: true,        showAllControllers: true,        showNavArrows: true,        showOnInitNavArrows: true,        autoHideNavArrows: true,        showBottomNav: true,        showOnInitBottomNav: true,        autoHideBottomNav: true,        showPreviewThumbs: true,        enableTouchScreen: true    }})(jQuery);(function (g) {    var e = false;    function c(v, y, n, i, r, x, o, q, l, u, p) {        var k;        var h;        var s;        var j;        if (jQuery(r[n.current_img_no]).attr("data-video") == "true") {            jQuery("#contentHolderUnit_" + n.current_img_no, x).html(jQuery(r[n.current_img_no]).html())        }        jQuery(i[n.current_img_no]).removeClass("bottomNavButtonON");        n.current_img_no = a(n.current_img_no, v, l);        if (jQuery(r[n.current_img_no]).attr("data-video") != "true") {            u.css("display", "none")        }        jQuery(i[n.current_img_no]).addClass("bottomNavButtonON");        n.currentZ_index = 100;        n.currentImg = jQuery("#contentHolderUnit_" + n.current_img_no, x);        k = o;        h = q;        s = parseInt((y.width - o) / 2);        j = parseInt(y.height - q) - y.verticalAdjustment;        d(n.currentImg, s, j, k, h, 1, false, v, n, y, p, r, l, u, i, x, o, q);        w = n.current_img_no;        for (m = 1; m <= Math.floor(y.numberOfVisibleItems / 2); m++) {            n.currentZ_index--;            w = a(w, -1, l);            n.currentImg = jQuery("#contentHolderUnit_" + w);            n.currentImg = jQuery("#contentHolderUnit_" + w, x);            n.currentImg.css("z-index", n.currentZ_index);            if (m == Math.floor(y.numberOfVisibleItems / 2)) {                if (v === 1) {                    last_aux_img_no = a(w, -1, l);                    last_currentImg = jQuery("#contentHolderUnit_" + last_aux_img_no, x);                    h = q - 2 * (m + 1) * y.elementsVerticalSpacing;                    k = parseInt(h * n.aspectOrig);                    s = parseInt((y.width - o) / 2) - (m + 1) * y.elementsHorizontalSpacing;                    j = parseInt(y.height - q) - y.verticalAdjustment + (m + 1) * y.elementsVerticalSpacing;                    d(last_currentImg, s, j, k, h, 0, false, v, n, y, p, r, l, u, i, x, o, q)                } else {                    h = q - 2 * (m + 1) * y.elementsVerticalSpacing;                    k = parseInt(h * n.aspectOrig);                    b(n.currentImg, (m + 1), y, q, n);                    s = parseInt((y.width - o) / 2) - (m + 1) * y.elementsHorizontalSpacing;                    j = parseInt(y.height - q) - y.verticalAdjustment + (m + 1) * y.elementsVerticalSpacing;                    n.currentImg.css("left", s);                    n.currentImg.css("top", j);                    n.currentImg.css("opacity", 0)                }            }            n.currentImg.css("display", "block");            h = q - 2 * m * y.elementsVerticalSpacing;            k = parseInt(h * n.aspectOrig);            s = parseInt((y.width - o) / 2) - m * y.elementsHorizontalSpacing;            j = parseInt(y.height - q) - y.verticalAdjustment + m * y.elementsVerticalSpacing;            d(n.currentImg, s, j, k, h, 1, false, v, n, y, p, r, l, u, i, x, o, q)        }        var w = n.current_img_no;        for (m = 1; m <= Math.floor(y.numberOfVisibleItems / 2); m++) {            n.currentZ_index--;            w = a(w, 1, l);            n.currentImg = jQuery("#contentHolderUnit_" + w, x);            n.currentImg.css("z-index", n.currentZ_index);            if (m == Math.floor(y.numberOfVisibleItems / 2)) {                if (v === 1) {                    b(n.currentImg, (m + 1), y, q, n);                    n.currentImg.css("left", parseInt((y.width - o) / 2) + (o + (m + 1) * y.elementsHorizontalSpacing - n.currentImg.width()) + "px");                    n.currentImg.css("top", parseInt(y.height - q) - y.verticalAdjustment + (m + 1) * y.elementsVerticalSpacing + "px");                    n.currentImg.css("opacity", 0)                } else {                    last_aux_img_no = a(w, 1, l);                    last_currentImg = jQuery("#contentHolderUnit_" + last_aux_img_no, x);                    h = q - 2 * (m + 1) * y.elementsVerticalSpacing;                    k = parseInt(h * n.aspectOrig);                    s = parseInt((y.width - o) / 2) + (o + (m + 1) * y.elementsHorizontalSpacing - k);                    j = parseInt(y.height - q) - y.verticalAdjustment + (m + 1) * y.elementsVerticalSpacing;                    d(last_currentImg, s, j, k, h, 0, false, v, n, y, p, r, l, u, i, x, o, q)                }            }            n.currentImg.css("display", "block");            h = q - 2 * m * y.elementsVerticalSpacing;            k = parseInt(h * n.aspectOrig);            s = parseInt((y.width - o) / 2) + (o + m * y.elementsHorizontalSpacing - k);            j = parseInt(y.height - q) - y.verticalAdjustment + m * y.elementsVerticalSpacing;            if (m == Math.floor(y.numberOfVisibleItems / 2)) {                d(n.currentImg, s, j, k, h, 1, true, v, n, y, p, r, l, u, i, x, o, q)            } else {                d(n.currentImg, s, j, k, h, 1, false, v, n, y, p, r, l, u, i, x, o, q)            }        }    }    function b(n, k, j, l, o) {        var i = l - 2 * k * j.elementsVerticalSpacing;        var h = parseInt(i * o.aspectOrig);        n.css("height", i + "px");        n.css("width", h + "px");        if (j.resizeImages) {            imgInside = n.find("img:first");            if (imgInside.is("img")) {                imgInside.css("height", i + "px");                imgInside.css("width", h + "px")            }        }    }    function d(l, n, w, p, z, k, h, v, x, j, u, s, r, A, i, q, o, y) {        x.slideIsRunning = true;        u.html(jQuery(s[x.current_img_no]).attr("data-title"));        if (k === 0) {            l.css("z-index", x.currentZ_index - 1)        } else {            l.css("z-index", x.currentZ_index)        }        l.css("display", "block");        l.animate({            left: n + "px",            top: w + "px",            width: p + "px",            height: z + "px",            opacity: k        }, j.animationTime * 1000, j.easing, function () {            if (h) {                x.slideIsRunning = false;                if (jQuery(s[x.current_img_no]).attr("data-video") == "true") {                    A.css("display", "block")                }                if ((j.autoPlay > 0 && r > 1 && !x.mouseOverBanner && !x.fastForwardRunning) || (x.current_img_no != x.img_no_where_to_stop && x.fastForwardRunning)) {                    clearTimeout(x.timeoutID)                }                if (x.current_img_no == x.img_no_where_to_stop && x.fastForwardRunning) {                    x.fastForwardRunning = false;                    j.animationTime = x.animationTimeOrig;                    j.autoPlay = x.autoPlayOrig                }            }        });        if (j.resizeImages) {            imgInside = l.find("img:first");            if (imgInside.is("img")) {                imgInside.animate({                    width: p + "px",                    height: z + "px"                }, j.animationTime * 1000, j.easing, function () {})            }        }    }    function a(i, j, h) {        if (i + j >= h) {            i = 0        } else {            if (i + j < 0) {                i = h - 1            } else {                i += j            }        }        return i    }    function f(p, u, k, h, q, s, l, o, j, r, n) {        if (k.current_img_no - p === -1) {            c(1, u, k, h, q, s, l, o, j, r, n)        } else {            if (k.current_img_no - p === 1) {                c(-1, u, k, h, q, s, l, o, j, r, n)            } else {                k.fastForwardRunning = true;                u.animationTime = 0.4;                u.autoPlay = 0.1;                k.img_no_where_to_stop = p;                if (k.current_img_no < p) {                    if (p - k.current_img_no < (j - p + k.current_img_no)) {                        c(1, u, k, h, q, s, l, o, j, r, n)                    } else {                        c(-1, u, k, h, q, s, l, o, j, r, n)                    }                } else {                    if (k.current_img_no > p) {                        if ((k.current_img_no - p) < (j - k.current_img_no + p)) {                            c(-1, u, k, h, q, s, l, o, j, r, n)                        } else {                            c(1, u, k, h, q, s, l, o, j, r, n)                        }                    }                }            }        }    }    g.fn.allinone_carousel = function (h) {        callback_function_carousel_Main = h.callback;        var h = g.extend({}, g.fn.allinone_carousel.defaults, h);        return this.each(function () {            var L = jQuery(this);            var M = jQuery("<div></div>").addClass("allinone_carousel").addClass(h.skin);            var n = jQuery('<div class="bannerControls">   <div  id="carousel_leftNav" class="leftNav"></div>   <div id="carousel_rightNav" class="rightNav"></div>    </div>  <div class="contentHolder"></div>   <div class="elementTitle"></div>	<div class="playOver"></div>');            L.wrap(M);            L.after(n);            document.getElementById("carousel_leftNav").appendChild(_gMainApplication.arrImagesTrack.leftNav_Carousel);            document.getElementById("carousel_rightNav").appendChild(_gMainApplication.arrImagesTrack.rightNav_Carousel);            _gMainApplication.arrImagesTrack.leftNav_Carousel.className = "leftNav_big_img";            _gMainApplication.arrImagesTrack.rightNav_Carousel.className = "rightNav_big_img";            var y = L.parent(".allinone_carousel");            var n = jQuery(".bannerControls", y);            var C = false;            var I = 0;            var P = jQuery(".contentHolder", y);            var x = jQuery('<div class="bottomNavLeft"></div>');            var D = jQuery('<div class="bottomNav"></div>');            var v = jQuery('<div class="bottomNavRight"></div>');            L.after(x);            L.after(D);            L.after(v);            if (!h.showAllControllers) {                n.css("display", "none")            }            var J = jQuery(".leftNav", y);            var K = jQuery(".rightNav", y);            J.css("display", "none");            K.css("display", "none");            if (h.showNavArrows) {                if (h.showOnInitNavArrows) {                    J.css("display", "block");                    K.css("display", "block")                }            }            var F = jQuery(".bottomNav", y);            var o = jQuery(".bottomNavLeft", y);            var E = jQuery(".bottomNavRight", y);            var p;            F.css("display", "block");            o.css("display", "block");            E.css("display", "block");            if (!h.showBottomNav) {                F.css("display", "none");                o.css("display", "none");                E.css("display", "none")            }            if (!h.showOnInitBottomNav) {                F.css("left", "-5000px");                o.css("left", "-5000px");                E.css("left", "-5000px")            }            var H = jQuery(".elementTitle", y);            if (!h.showElementTitle) {                H.css("display", "none")            }            var Q = jQuery(".playOver", y);            var z = 0;            var N = {                current_img_no: 0,                currentImg: 0,                currentZ_index: 101,                slideIsRunning: false,                mouseOverBanner: false,                fastForwardRunning: false,                isVideoPlaying: false,                img_no_where_to_stop: 0,                aspectOrig: 0,                timeoutID: "",                animationTimeOrig: h.animationTime,                autoPlayOrig: h.autoPlay            };            var j;            var G = 0;            y.width(h.width);            y.height(h.height);            P.width(h.width);            P.height(h.height);            n.css("margin-top", parseInt((h.height - J.height()) / 2) + "px");            var w = L.find("ul:first");            var B = w.children();            if (h.numberOfVisibleItems > L.find("ul:first li").length) {                h.numberOfVisibleItems = L.find("ul:first li").length            }            if (!(h.numberOfVisibleItems % 2)) {                h.numberOfVisibleItems--            }            var r;            var u = 0;            var O = 0;            var A;            var s = 0;            var k = 0;            B.each(function () {                N.currentImg = jQuery(this);                if (!N.currentImg.is("li")) {                    N.currentImg = N.currentImg.find("li:first")                }                if (N.currentImg.is("li")) {                    z++;                    r = jQuery('<div class="contentHolderUnit" rel="' + (z - 1) + '" id="contentHolderUnit_' + (z - 1) + '">' + N.currentImg.html() + "</div>");                    P.append(r);                    r.css("display", "none");                    if (u === 0) {                        u = r.width();                        O = r.height();                        N.aspectOrig = u / O                    }                    b(r, 0, h, O, N);                    r.css("left", parseInt((h.width - r.width()) / 2) + "px");                    r.css("top", parseInt(h.height - r.height()) - h.verticalAdjustment + "px");                    if (z == 1) {                        r.css("left", parseInt((h.width - r.width()) / 2) + "px");                        r.css("top", parseInt(h.height - r.height()) - h.verticalAdjustment + "px");                        r.css("z-index", N.currentZ_index);                        r.css("display", "block");                        if (jQuery(B[N.current_img_no]).attr("data-video") == "true") {                            Q.css("display", "block")                        }                    } else {                        if (z <= Math.ceil(h.numberOfVisibleItems / 2)) {                            N.currentZ_index--;                            b(r, (z - 1), h, O, N);                            r.css("left", parseInt((h.width - u) / 2) + (u + (z - 1) * h.elementsHorizontalSpacing - r.width()) + "px");                            r.css("top", parseInt(h.height - O) - h.verticalAdjustment + (z - 1) * h.elementsVerticalSpacing + "px");                            r.css("z-index", N.currentZ_index);                            r.css("display", "block")                        }                    }                    A = jQuery('<div class="bottomNavButtonOFF" rel="' + (z - 1) + '"></div>');                    F.append(A);                    s += parseInt(A.css("padding-left").substring(0, A.css("padding-left").length - 2)) + A.width();                    k = parseInt((F.height() - parseInt(A.css("height").substring(0, A.css("height").length - 2))) / 2);                    A.css("margin-top", k + "px")                }            });            Q.css("left", parseInt((h.width - Q.width()) / 2) + "px");            Q.css("top", parseInt(h.height - r.height() - h.verticalAdjustment + (jQuery("#contentHolderUnit_" + N.current_img_no, y).height() - Q.height()) / 2) + "px");            N.currentZ_index = 100;            for (m = 1; m <= Math.floor(h.numberOfVisibleItems / 2); m++) {                N.currentZ_index--;                b(jQuery("#contentHolderUnit_" + (z - m), y), m, h, O, N);                jQuery("#contentHolderUnit_" + (z - m), y).css("left", parseInt((h.width - u) / 2) - m * h.elementsHorizontalSpacing + "px");                jQuery("#contentHolderUnit_" + (z - m), y).css("top", parseInt(h.height - O) - h.verticalAdjustment + m * h.elementsVerticalSpacing + "px");                jQuery("#contentHolderUnit_" + (z - m), y).css("z-index", N.currentZ_index);                jQuery("#contentHolderUnit_" + (z - m), y).css("display", "block")            }            H.html(jQuery(B[0]).attr("data-title"));            F.width(s);            if (h.showOnInitBottomNav) {                F.css("left", parseInt((y.width() - s) / 2) + "px");                o.css("left", parseInt(F.css("left").substring(0, F.css("left").length - 2)) - o.width() + "px");                E.css("left", parseInt(F.css("left").substring(0, F.css("left").length - 2)) + F.width() + parseInt(A.css("padding-left").substring(0, A.css("padding-left").length - 2)) + "px")            }            jQuery("iframe").each(function () {                var i = jQuery(this).attr("src");                var R = "?wmode=transparent";                jQuery(this).attr("src", i + R)            });            N.current_img_no = 0;            N.currentImg = jQuery(B[N.current_img_no]);            var r = jQuery(".contentHolderUnit", y);			r.mouseover(			function(evt)			{				var rollOverImg = $('#'+evt.currentTarget.id).find('img').attr('data-rollver-url');				$('#'+evt.currentTarget.id).find('img').attr('src',rollOverImg)			}			);			r.mouseout(			function(evt)			{				var rollOverImg = $('#'+evt.currentTarget.id).find('img').attr('data-actual-url');				$('#'+evt.currentTarget.id).find('img').attr('src',rollOverImg)			}			);			            r.click(function () {                if (!N.slideIsRunning && !N.fastForwardRunning) {                    var R = jQuery(this).attr("rel");                    callback_function_carousel_Main(R)                }            });            Q.click(function () {                Q.css("display", "none");                j = jQuery("#contentHolderUnit_" + N.current_img_no, y).find("img:first");                j.css("display", "none");                N.isVideoPlaying = true            });            J.mousedown(function () {                e = true;                if (!N.slideIsRunning && !N.fastForwardRunning) {                    N.isVideoPlaying = false;                    clearTimeout(N.timeoutID);                    c(-1, h, N, l, B, y, u, O, z, Q, H)                }            });            J.mouseup(function () {                e = false            });            K.mousedown(function () {                e = true;                if (!N.slideIsRunning && !N.fastForwardRunning) {                    N.isVideoPlaying = false;                    clearTimeout(N.timeoutID);                    c(1, h, N, l, B, y, u, O, z, Q, H)                }            });            K.mouseup(function () {                e = false            });            var l = jQuery(".bottomNavButtonOFF", y);            l.mousedown(function () {                e = true;                if (!N.slideIsRunning && !N.fastForwardRunning) {                    var R = jQuery(this).attr("rel");                    if (R != N.current_img_no) {                        N.isVideoPlaying = false;                        jQuery(l[N.current_img_no]).removeClass("bottomNavButtonON");                        f(parseInt(R), h, N, l, B, y, u, O, z, Q, H)                    }                }            });            l.mouseup(function () {                e = false            });            l.mouseenter(function () {                var T = jQuery(this);                var S = T.attr("rel");                if (h.showPreviewThumbs) {                    p = jQuery('<div class="bottomOverThumb"></div>');                    T.append(p);                    var R = jQuery(B[S]).attr("data-bottom-thumb");                    p.html('<img src="' + R + '">')                }                T.addClass("bottomNavButtonON")            });            l.mouseleave(function () {                var S = jQuery(this);                var R = S.attr("rel");                if (h.showPreviewThumbs) {                    p.remove()                }                if (N.current_img_no != R) {                    S.removeClass("bottomNavButtonON")                }            });            if (h.enableTouchScreen) {                var q = Math.floor(Math.random() * 100000);                y.wrap('<div id="carouselParent_MAIN_IMG" style="position:relative;" />');                jQuery("#carouselParent_MAIN_IMG").width(h.width + 1);                jQuery("#carouselParent_MAIN_IMG").height(h.height);                y.css("left", "0px");                y.css("position", "absolute");                rightVal = parseInt(K.css("right").substring(0, K.css("right").length - 2));                y.mousedown(function () {                    rightVal = parseInt(K.css("right").substring(0, K.css("right").length - 2));                    if (rightVal < 0 && !e) {                        K.css("visibility", "hidden");                        J.css("visibility", "hidden");                        K.css("right", "0")                    }                });                y.mouseup(function () {                    e = false;                    if (rightVal < 0) {                        K.css("right", rightVal + "px");                        K.css("visibility", "visible");                        J.css("visibility", "visible")                    }                });                y.draggable({                    axis: "x",                    containment: "parent",                    distance: 10,                    start: function (i, R) {                        origLeft = jQuery(this).css("left")                    },                    stop: function (i, R) {                        if (!N.effectIsRunning) {                            finalLeft = jQuery(this).css("left");                            direction = 1;                            if (origLeft < finalLeft) {                                direction = -1                            }                            c(direction, h, N, l, B, y, u, O, z, Q, H)                        }                        if (rightVal < 0) {                            K.css("right", rightVal + "px");                            K.css("visibility", "visible");                            J.css("visibility", "visible")                        }                        jQuery(this).css("left", "0px")                    }                })            }            jQuery(l[N.current_img_no]).addClass("bottomNavButtonON");            if (h.autoPlay > 0 && z > 1) {                N.timeoutID = setTimeout(function () {                    c(1, h, N, l, B, y, u, O, z, Q, H)                }, 100)            }        })    };    g.fn.allinone_carousel.defaults = {        skin: "attractive",        width: 960,        height: 384,        autoPlay: 4,        numberOfVisibleItems: 7,        elementsHorizontalSpacing: 190,        elementsVerticalSpacing: 30,        verticalAdjustment: 0,        animationTime: 0.8,        easing: "easeOutQuad",        resizeImages: true,        showElementTitle: true,        showAllControllers: true,        showNavArrows: true,        showOnInitNavArrows: true,        autoHideNavArrows: true,        showBottomNav: true,        showOnInitBottomNav: true,        autoHideBottomNav: true,        showPreviewThumbs: true,        enableTouchScreen: true    }})(jQuery);function PxLoader(c) {	c = c || {};	if (c.statusInterval == null) {		c.statusInterval = 5000	}	if (c.loggingDelay == null) {		c.loggingDelay = 20 * 1000	}	if (c.noProgressTimeout == null) {		c.noProgressTimeout = Infinity	}	var f = [], a = [], l, b = +new Date;	var i = {		QUEUED : 0,		WAITING : 1,		LOADED : 2,		ERROR : 3,		TIMEOUT : 4	};	var j = function(n) {		if (n == null) {			return []		}		if (Array.isArray(n)) {			return n		}		return [n]	};	this.add = function(n) {		n.tags = new PxLoaderTags(n.tags);		if (n.priority == null) {			n.priority = Infinity		}		f.push({			resource : n,			status : i.QUEUED		})	};	this.addProgressListener = function(o, n) {		a.push({			callback : o,			tags : new PxLoaderTags(n)		})	};	this.addCompletionListener = function(o, n) {		a.push({			tags : new PxLoaderTags(n),			callback : function(p) {				if (p.completedCount === p.totalCount) {					o()				}			}		})	};	var h = function(n) {		n = j(n);		var o = function(s) {			var u = s.resource, r = Infinity;			for (var q = 0; q < u.tags.length; q++) {				for (var p = 0; p < Math.min(n.length, r); p++) {					if (u.tags[q] == n[p] && p < r) {						r = p;						if (r === 0) {							break						}					}					if (r === 0) {						break					}				}			}			return r		};		return function(q, p) {			var s = o(q), r = o(p);			if (s < r) {				return -1			}			if (s > r) {				return 1			}			if (q.priority < p.priority) {				return -1			}			if (q.priority > p.priority) {				return 1			}			return 0		}	};	this.start = function(o) {		l = +new Date;		var p = h(o);		f.sort(p);		for (var q = 0, n = f.length; q < n; q++) {			var r = f[q];			r.status = i.WAITING;			r.resource.start(this)		}		setTimeout(d, 100)	};	var d = function() {		var r = false, s = (+new Date) - b, o = (s >= c.noProgressTimeout), p = (s >= c.loggingDelay);		for (var q = 0, n = f.length; q < n; q++) {			var u = f[q];			if (u.status !== i.WAITING) {				continue			}			if (u.resource.checkStatus) {				u.resource.checkStatus()			}			if (u.status === i.WAITING) {				if (o) {					u.resource.onTimeout()				} else {					r = true				}			}		}		if (p && r) {			e()		}		if (r) {			setTimeout(d, c.statusInterval)		}	};	this.isBusy = function() {		for (var o = 0, n = f.length; o < n; o++) {			if (f[o].status === i.QUEUED || f[o].status === i.WAITING) {				return true			}		}		return false	};	var k = function(p, w) {		var v = null;		for (var q = 0, u = f.length; q < u; q++) {			if (f[q].resource === p) {				v = f[q];				break			}		}		if (v == null || v.status !== i.WAITING) {			return		}		v.status = w;		b = +new Date;		var n = p.tags.length;		for (var q = 0, s = a.length; q < s; q++) {			var o = a[q], r;			if (o.tags.length === 0) {				r = true			} else {				r = p.tags.contains(o.tags)			}			if (r) {				g(v, o)			}		}	};	this.onLoad = function(n) {		k(n, i.LOADED)	};	this.onError = function(n) {		k(n, i.ERROR)	};	this.onTimeout = function(n) {		k(n, i.TIMEOUT)	};	var g = function(o, v) {		var r = 0, u = 0;		for (var q = 0, n = f.length; q < n; q++) {			var s = f[q], p = false;			if (v.tags.length === 0) {				p = true			} else {				p = s.resource.tags.contains(v.tags)			}			if (p) {				u++;				if (s.status === i.LOADED || s.status === i.ERROR || s.status === i.TIMEOUT) {					r++				}			}		}		v.callback({			resource : o.resource,			loaded : (o.status === i.LOADED),			error : (o.status === i.ERROR),			timeout : (o.status === i.TIMEOUT),			completedCount : r,			totalCount : u		})	};	var e = this.log = function(q) {		if (!window.console) {			return		}		var p = Math.round((+new Date - l) / 1000);		window.console.log("PxLoader elapsed: " + p + " sec");		for (var o = 0, n = f.length; o < n; o++) {			var s = f[o];			if (!q && s.status !== i.WAITING) {				continue			}			var r = "PxLoader: #" + o + " " + s.resource.getName();			switch (s.status) {				case i.QUEUED:					r += " (Not Started)";					break;				case i.WAITING:					r += " (Waiting)";					break;				case i.LOADED:					r += " (Loaded)";					break;				case i.ERROR:					r += " (Error)";					break;				case i.TIMEOUT:					r += " (Timeout)";					break			}			if (s.resource.tags.length > 0) {				r += " Tags: [" + s.resource.tags.join(",") + "]"			}			window.console.log(r)		}	}}function PxLoaderTags(a) {	this.array = [];	this.object = {};	this.value = null;	this.length = 0;	if (a !== null && a !== undefined) {		if (Array.isArray(a)) {			this.array = a		} else {			if ( typeof a === "object") {				for (var c in a) {					this.array.push(c)				}			} else {				this.array.push(a);				this.value = a			}		}		this.length = this.array.length;		for (var b = 0; b < this.length; b++) {			this.object[this.array[b]] = true		}	}	this.contains = function(d) {		if (this.length === 0 || d.length === 0) {			return false		} else {			if (this.length === 1 && this.value !== null) {				if (d.length === 1) {					return this.value === d.value				} else {					return d.object.hasOwnProperty(this.value)				}			} else {				if (d.length < this.length) {					return d.contains(this)				} else {					for (var e in this.object) {						if (d.object[e]) {							return true						}					}					return false				}			}		}	}}if (!Array.isArray) {	Array.isArray = function(a) {		return Object.prototype.toString.call(a) == "[object Array]"	}}function PxLoaderImage(a, i, f) {	var h = this, g = null;	this.img = new Image();	this.tags = i;	this.priority = f;	var b = function() {		if (h.img.readyState == "complete") {			c();			g.onLoad(h)		}	};	var e = function() {		c();		g.onLoad(h)	};	var d = function() {		c();		g.onError(h)	};	var c = function() {		h.unbind("load", e);		h.unbind("readystatechange", b);		h.unbind("error", d)	};	this.start = function(j) {		g = j;		h.bind("load", e);		h.bind("readystatechange", b);		h.bind("error", d);		h.img.src = a	};	this.checkStatus = function() {		if (h.img.complete) {			c();			g.onLoad(h)		}	};	this.onTimeout = function() {		c();		if (h.img.complete) {			g.onLoad(h)		} else {			g.onTimeout(h)		}	};	this.getName = function() {		return a	};	this.bind = function(j, k) {		if (h.img.addEventListener) {			h.img.addEventListener(j, k, false)		} else {			if (h.img.attachEvent) {				h.img.attachEvent("on" + j, k)			}		}	};	this.unbind = function(j, k) {		if (h.img.removeEventListener) {			h.img.removeEventListener(j, k, false)		} else {			if (h.img.detachEvent) {				h.img.detachEvent("on" + j, k)			}		}	}}PxLoader.prototype.addImage = function(c, b, d) {	var a = new PxLoaderImage(c, b, d);	this.add(a);	return a.img};/*var config = { questionSet: [{ question: "What does this commercial vehicle have in common with a winning hand of cards? ", option_1: "It delivers Parksons' playing cards throughout India", option_2: "It's called The Ace", option_3: "It ferries customers between tables at the Casino Royale in Goa", option_4: "It's a mobile poker parlor", img_url: "Q_1", correct_answer: "2", solution: "The Ace is Tata Motors' highly successful Small Commercial Vehicle. By focusing on customer segmentation, network optimization, pipeline management and sales operations, the project team helped Tata Motors generate approximately $45 million in additional revenue and significantly boosted market share in all states -- all in less than nine months." }, { question: "What is enjoying record growth in rural India?", option_1: "Tata Motors' retail sales", option_2: "Titan Watches", option_3: "Bollywood films", option_4: "GoAir ticket sales", img_url: "Q_13", correct_answer: "1", solution: "With Accenture's help, Tata Motors has developed an innovative, scalable and sustainable platform for growth in rural markets. Project Neev's (foundation in Sanskrit) potential value has been confirmed by the results from the first-wave deployment areas. To date, the project has delivered more than 7,000 retail sales within the target territories. With successful scaling up of operations, Tata Motors is on track to garner an incremental business growth of roughly 15-20% from its new rural channels." }, { question: "Where did Caterpillar create a mountain of success? ", option_1: "Europe", option_2: "Sub-Saharan Africa", option_3: "Asia Pacific", option_4: "South America", img_url: "Q_3", correct_answer: "3", solution: "Accenture helped Caterpillar develop common processes supported by a single ERP platform to simplify their business and position them for expansion. Since 2005, Caterpillar has grown its business in Asia Pacific by more than 300%.Accenture helped Caterpillar develop common processes supported by a single ERP platform to simplify their business and position them for expansion. Since 2005, Caterpillar has grown its business in Asia Pacific by more than 300%." }, { question: "What is the language of hospitality?", option_1: "English", option_2: "International symbols", option_3: "Whichever language the customer speaks", option_4: "Esperanto", img_url: "Q_4", correct_answer: "3", solution: "With nearly 3,700 properties in more than 70 countries, Marriott wanted to make it easier for customers to book reservations online in different languages. We helped them implement a platform that supports 9 websites in 7 languages. In 2011, sales through Marriott.com websites exceeded $7 billion, making Marriott.com one of the top 10 retail websites." }, { question: "What did Accenture help Unilever untangle?", option_1: "A complex, multi-national business model", option_2: "Conflicting global hair care product regulations ", option_3: "Varying concepts of beauty around the world", option_4: "The best route to reaching professional stylists in different markets", img_url: "Q_5", correct_answer: "1", solution: "With operations in over 100 countries, Unilever asked us to help simplify, standardize and unify their business model. Our teams worked to implement a single HR and talent management model, a harmonized ERP platform as well as other restructuring projects. So far, the results have helped Unilever achieve over &euro; 1 billion in savings and more than halved the time for a new IT systems rollout." }, { question: "How did P&G shave time to market by up to 50%?", option_1: "Transitioned to an end-to-end virtual solutions program", option_2: "Automated distribution centers", option_3: "Hired more workers ", option_4: "Bought out competitive brands", img_url: "Q_6", correct_answer: "1", solution: "Procter & Gamble wanted to increase speed to market and reduce costs. Accenture worked with them to develop cutting-edge 3D store environments that help P&G collaborate with their retail partners and optimize product placement. And we manage their large-scale virtual design studios, giving the consumers the ability to provide feedback on product packaging and placement in real-time. As a result, P&G was able to cut millions of dollars in development costs and put products in consumers’ hands faster." }, { question: "What prescription holds true for both better physical and fiscal health?", option_1: "An apple a day", option_2: "Slim down ", option_3: "Invest in a company gym", option_4: "Keep expanding", img_url: "Q_7", correct_answer: "2", solution: "Trinity Health has always worked to fulfill a mission to provide affordable healthcare to the community. Accenture helped them consolidate their revenue operations into a single unit. This generated more than $500 million in additional revenue over three years and allowed Trinity to continue to reinvest back into the health of the community." }, { question: "What helped Piramal Healthcare turn the corner in growth?", option_1: "Development of a new product line", option_2: "Globalizing their portfolio", option_3: "Creating a road map for sustained growth", option_4: "Analyzing 20,000 hospitals", img_url: "Q_9", correct_answer: "3", solution: "Accenture deployed a team of professionals with deep industry expertise and a solid understanding of Piramal Healthcare's business to help develop Pharma Solutions' road map for sustained growth and profitability. The solutions designed by Accenture and Piramal Healthcare will enable Pharma Solutions to grow at a compounded annual growth rate of 18% over the next 3-4 years." }, { question: "How do people find the answers they're looking for in The Big Apple?", option_1: "Many trips to the New York Public Library", option_2: "Ask the nearest cab driver", option_3: "Direct line to the Mayor's office", option_4: "They dial 311", img_url: "Q_10", correct_answer: "4", solution: "To respond to the 50,000 calls a day, Accenture helped New York City develop 311, a 24/7 phone and online customer service center that provides nearly 4,000 services to free up resources and provide faster customer response time. 125 million calls later the city is performing better than ever." }, { question: "How did Tata Chemicals kick-start a new process?", option_1: "Engaging in Lean Six Sigma training", option_2: "Reading BPM for Dummies ", option_3: "Installing Oracle Business Process Management Suite", option_4: "Downloading the Gartner BPM white paper", img_url: "Q_11", correct_answer: "1", solution: "Lean Six Sigma enables high performance in business organizations. Accenture worked quickly and efficiently to train nearly 500 Tata Chemicals professionals at each of the company’s four locations in Lean Six Sigma principles. By the end of the program Accenture was able to train 11 kaizen leaders, 20 black belts, 48 green belts and 350 blue belts. Besides, 25 projects were successfully completed that together produced savings of US $4.6 million." }, { question: "How did Accenture help Engineers India Ltd answer this command?", option_1: "Recruited leaders from rival engineering firms", option_2: "Built a leadership development capability within the firm", option_3: "Created new HR protocols for hiring", option_4: "Mobilized a corporate take over of another firm", img_url: "Q_14", correct_answer: "2", solution: "Accenture and the senior management team at EIL worked together to discover the leadership needs of the organization vis-&agrave;-vis its strategic goals by assessing the gap between current and aspired organizational culture. The result? Over 40% of program participants moved to new and challenging roles within the organization" }, { question: "How did Accenture help BSES see the light?", option_1: "Upgraded the meters and meter-reading process", option_2: "Created a new, market-driven organizational structure and operating model", option_3: "Reduced costs to strengthen its financial footing", option_4: "All of the above", img_url: "Q_8", correct_answer: "4", solution: "Accenture helped BSES Delhi reduce malpractices and operating costs thereby strengthening its financial footing. As a result, from March '05 through to March '06, electricity losses reduced from 40.64% to 35.53% (South and West Delhi) and from 50.12% to 43.88% (Central and East Delhi). " }, { question: "What's the secret to Scotch Whisky's distinct smoky flavor?", option_1: "Aging in special barrels", option_2: "Drying the malt over a peat-fueled fire ", option_3: "Adding a few drops of Liquid Smoke to each batch", option_4: "Setting a controlled burn in the field at the end of each harvest", img_url: "Q_12", correct_answer: "2", solution: "United Spirits turned to Accenture for help in firing its growth. USL's goals were to become the world's largest spirits company by volume, double its turnover, raise it's EBITDA by 50% and align its employees with this vision. It is now the world's largest spirit company by volume, is growing faster than its global competitors, has doubled its turnover and grown earnings at a compound annual growth rate of approximately 30% in the past six years." }, { question: "How did Accenture help VVF optimize its HR department?", option_1: "Improved the acoustics to reduce ambient noise", option_2: "Instituted raises for all department heads", option_3: "Turned it from a traditional support function into a strategic business partner function", option_4: "Posted photos on company website of employees who made successful hires", img_url: "Q_2", correct_answer: "3", solution: "In helping VVF transform its HR department Accenture created clear benefits in three areas:-	Recruitment process - With a newly enacted service-level-agreement (SLA) process, hiring cycle time cut in half and joiner ratio rose from 40% to 98%-	Performance management - Established &ldquo;goal cascade&rdquo; workshops and clear linkage between performance and rewards with a variable pay scale-	Talent development - total training man days doubled over a 12 month period with no commensurate increase in training budget" }, { question: "What did Accenture help L&T Komatsu uncover?", option_1: "A new copper mine near Jaipur", option_2: "Additional markets in South Asia", option_3: "Increased growth in its after-sales business segment", option_4: "Construction site for a new railway terminal in Assam", img_url: "Q_15", correct_answer: "3", solution: "Accenture helped L&T transform inventory planning, supply chain planning and procurement processes to improve service levels and spares availability. The company was able to develop a strong foundation and robust processes to achieve long-term sustainable growth. They also see a 3.4% increase in profitability for this segment by 2014-2015, a 60% reduction in warranty claims settlement lead time and a 30% reduction in warranty rejections." }, { question: "How far beyond Oz have Dorothy and her friends traveled?", option_1: "To the moon in a time capsule", option_2: "Back to Kansas", option_3: "Into the digital realm of the 21st century", option_4: "To become a theme hotel in Las Vegas", img_url: "Q_17", correct_answer: "3", solution: "Accenture helped Warner Bros., the studio behind The Wizard of Oz, shift its entire film and television distribution to a completely digital process. This meant faster distribution of entertainment content, new revenue streams and an astonishing 85% reduction in all related annual distribution and management costs." }, { question: "What did Accenture do to help L&T Power energize its operations?", option_1: "Facilitated a partnership with Nippo Batteries", option_2: "Initiated a business and operational excellence program", option_3: "Oversaw an incentive program for mid-level managers", option_4: "Replaced the CEO", img_url: "Q_16", correct_answer: "2", solution: "The Accenture team adopted a three-pronged approach to address the key challenges facing Larsen & Toubro-Mitsubishi Heavy Industries Boilers Private Limited (LMB). The first created a firm framework for business excellence. The second focused on operational excellence through process improvement including risk management, Kaizen, and value engineering. The third enabled LMB to execute the steps needed to take the organization closer to its vision. These initiatives have firmly placed LMB on a trajectory toward high performance while enabling it to derive sustainable, long-term business value." }, { question: "How did the Royal Shakespeare Company expand its repertoire while slashing costs?", option_1: "Offered free matinees every other Wednesday", option_2: "Created open call casting sessions to engage theater fans", option_3: "Sent targeted messaging to specific audience segments", option_4: "Partnered with local theater schools to commission new plays", img_url: "Q_18", correct_answer: "3", solution: "The Royal Shakespeare Company was able to increase attendance by 30% with 0% trouble. Accenture helped the RSC define and understand its priority audience segments, and also helped the company select the technology that integrates box office, marketing and fundraising data around a single customer database" }, { question: "How did Accenture help one of India's largest energy companies hear what its consumers had to say?", option_1: 'Wrote a "personal" email from the CEO to each and every customer', option_2: "Created a customer-focused program consisting of measurable initiatives", option_3: "Posted suggestion boxes at every BPCL station", option_4: "Sent out a one-time customer survey", img_url: "Q_19", correct_answer: "2", solution: "The Accenture helped BPCL build a deeper understanding of its customer base and design a sustainable process to convert customer insights into customer-centric initiatives. This would enable BPCL to increase its market share, share of wallet and profitability. As a result, BPCL realized benefits of Rs. 44.2 million from a pilot program in 35 retail outlets in two locations and Rs. 165 million in a pilot reaching 123 customers." }, { question: "Manipur became one of the first three states in India to achieve what?", option_1: "Fielded the winning team for the World Cup", option_2: "Reduced their carbon footprint by 50%", option_3: "Registered the most citizens with the Unique Identification Authority", option_4: "Offered citizen services on a state portal framework", img_url: "Q_20", correct_answer: "4", solution: "The portal is a one-stop shop for government-to-citizen services. Accenture delivered the Manipur State Portal within six months, making Manipur one of the first three states across India to offer citizen services on the new State Portal framework. The portal allows 500 concurrent users and can handle up to 1,000 business transactions a day. The government of Manipur and Accenture will continue to work toward adding more government services, helping the state remain at the leading edge of e-governance." } ] }; */var config = {	buttonLabel:'Next',	questionSet : [{		question : "What does this commercial vehicle have in common with a winning hand of cards? ",		option_1 : "It delivers Parksons' playing cards throughout India",		option_2 : "It's called The Ace",		option_3 : "It ferries customers between tables at the Casino Royale in Goa",		option_4 : "It's a mobile poker parlor",		img_url : "Q_1",		correct_answer : "2",		solution : "The Ace is Tata Motors' highly successful Small Commercial Vehicle. By focusing on customer segmentation, network optimization, pipeline management and sales operations, the project team helped Tata Motors generate approximately $45 million in additional revenue and significantly boosted market share in all states &mdash; all in less than nine months."	}, {		question : "What helped Piramal Healthcare turn the corner in growth?",		option_1 : "Development of a new product line",		option_2 : "Globalizing their portfolio",		option_3 : "Creating a road map for sustained growth",		option_4 : "Analyzing 20,000 hospitals",		img_url : "Q_9",		correct_answer : "3",		solution : "Accenture deployed a team of professionals with deep industry expertise and a solid understanding of Piramal Healthcare's business to help develop Pharma Solutions' road map for sustained growth and profitability. The solutions designed by Accenture and Piramal Healthcare will enable Pharma Solutions to grow at a compounded annual growth rate of 18% over the next 3-4 years."	}, {		question : "How did Tata Chemicals kick-start a new process?",		option_1 : "Engaging in Lean Six Sigma training",		option_2 : "Reading BPM for Dummies ",		option_3 : "Installing Oracle Business Process Management Suite",		option_4 : "Downloading the Gartner BPM white paper",		img_url : "Q_11",		correct_answer : "1",		solution : "Lean Six Sigma enables high performance in business organizations. Accenture worked quickly and efficiently to train nearly 500 Tata Chemicals professionals at each of the company’s four locations in Lean Six Sigma principles. By the end of the program Accenture was able to train 11 kaizen leaders, 20 black belts, 48 green belts and 350 blue belts. Besides, 25 projects were successfully completed that together produced savings of US $4.6 million."	}, {		question : "How did Accenture help Engineers India Ltd answer this command?",		option_1 : "Recruited leaders from rival engineering firms",		option_2 : "Built a leadership development capability within the firm",		option_3 : "Created new HR protocols for hiring",		option_4 : "Mobilized a corporate take over of another firm",		img_url : "Q_14",		correct_answer : "2",		solution : "Accenture and the senior management team at EIL worked together to discover the leadership needs of the organization vis-&agrave;-vis its strategic goals by assessing the gap between current and aspired organizational culture. The result? Over 40% of program participants moved to new and challenging roles within the organization"	}, {		question : "How did Accenture help BSES see the light?",		option_1 : "Upgraded the meters and meter-reading process",		option_2 : "Created a new, market-driven organizational structure and operating model",		option_3 : "Reduced costs to strengthen its financial footing",		option_4 : "All of the above",		img_url : "Q_8",		correct_answer : "4",		solution : "Accenture helped BSES Delhi reduce malpractice and operating costs thereby strengthening its financial footing. As a result, from March '05 through to March '06, electricity losses reduced from 40.64% to 35.53% (South and West Delhi) and from 50.12% to 43.88% (Central and East Delhi). "	}, {		question : "Manipur became one of the first three states in India to achieve what?",		option_1 : "Fielded the winning team for the World Cup",		option_2 : "Reduced their carbon footprint by 50%",		option_3 : "Registered the most citizens with the Unique Identification Authority",		option_4 : "Offered citizen services on a state portal framework",		img_url : "Q_20",		correct_answer : "4",		solution : "The portal is a one-stop shop for government-to-citizen services. Accenture delivered the Manipur State Portal within six months, making Manipur one of the first three states across India to offer citizen services on the new State Portal framework. The portal allows 500 concurrent users and can handle up to 1,000 business transactions a day. The government of Manipur and Accenture will continue to work toward adding more government services, helping the state remain at the leading edge of e-governance."	}]};function PasswordScreen(a) {	this.mApplication = a;	this.mDivName = "passwordScreen";	this.setUp()}PasswordScreen.prototype.setUp = function() {	var b = this;	this.mApplication.showScreen(this.mDivName);	var a = '<div  id="login-form" align="center" style=" margin-top:100px; "><font color="black">Enter Password : </font><input type="password"   id="password_input" size="10"></input><button id="submit_passwd"> LOAD THE ASSETs </button></div>';	document.getElementById(this.mDivName).innerHTML = a;	document.getElementById("submit_passwd").onclick = function() {		if (document.getElementById("password_input") != null) {			if (document.getElementById("password_input").value == "Code@1234") {				b.mApplication.nextTransition()			} else {				alert(" WRONG PASSWORD! TRY AGAIN")			}		}	}};function LoadingScreen(a) {	this.mApplication = a;	this.mDivName = "loadingScreen";	this.mGameSplashLoader = null;	this.mImageRow = 10;	this.loadingProgress = new Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);	this.loadingProgress_ImagName = new Array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 0);	this.mAssetLoaded = false;	this.setUp()}LoadingScreen.prototype.setUp = function() {	this.mApplication.showScreen(this.mDivName);	//Countdown Begins	document.getElementById("loadingScreen").innerHTML = '<div id="loadingScreen_front" style="width: 117px;height: 252px;"></div><br><br><div id="gameLoadingText"> </div>';	this.mGameSplashLoader = new PxLoader();	this.mGameAssetLoader = new PxLoader();	this.mApplication.arrImagesTrack = {};	this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/image2.png"));	this.mApplication.arrImagesTrack.menu_screen_carousel = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/image3.png"));	this.mApplication.arrImagesTrack.menu_screen_logo = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/image4.png"));	//this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/image5.png"));	//this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/image7.png"));	//this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/image8.png"));	//this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/image9.png"));	this.mApplication.arrImagesTrack.C_1 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/1.png"));	this.mApplication.arrImagesTrack.C_2 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/2.png"));	this.mApplication.arrImagesTrack.C_3 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/3.png"));	this.mApplication.arrImagesTrack.C_4 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/4.png"));	this.mApplication.arrImagesTrack.C_5 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/5.png"));	this.mApplication.arrImagesTrack.C_6 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/6.png"));		this.mApplication.arrImagesTrack.C_1_hover = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/1_hover.png"));	this.mApplication.arrImagesTrack.C_2_hover = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/2_hover.png"));	this.mApplication.arrImagesTrack.C_3_hover = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/3_hover.png"));	this.mApplication.arrImagesTrack.C_4_hover = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/4_hover.png"));	this.mApplication.arrImagesTrack.C_5_hover = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/5_hover.png"));	this.mApplication.arrImagesTrack.C_6_hover = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/6_hover.png"));			/*this.mApplication.arrImagesTrack.C_7 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/7.png"));	this.mApplication.arrImagesTrack.C_8 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/8.png"));	this.mApplication.arrImagesTrack.C_9 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/9.png"));	this.mApplication.arrImagesTrack.C_10 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/10.png"));	this.mApplication.arrImagesTrack.C_11 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/11.png"));	this.mApplication.arrImagesTrack.C_12 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/12.png"));	this.mApplication.arrImagesTrack.C_13 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/13.png"));	this.mApplication.arrImagesTrack.C_14 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/14.png"));	this.mApplication.arrImagesTrack.C_15 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/15.png"));	this.mApplication.arrImagesTrack.C_16 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/16.png"));	this.mApplication.arrImagesTrack.C_17 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/17.png"));	this.mApplication.arrImagesTrack.C_18 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/18.png"));	this.mApplication.arrImagesTrack.C_19 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/19.png"));	this.mApplication.arrImagesTrack.C_20 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/20.png"));	this.mApplication.arrImagesTrack.C_21 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/21.png"));	this.mApplication.arrImagesTrack.C_22 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/22.png"));	this.mApplication.arrImagesTrack.C_23 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/23.png"));	this.mApplication.arrImagesTrack.C_24 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/24.png"));	this.mApplication.arrImagesTrack.C_25 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/25.png"));	*/	this.mApplication.arrImagesTrack.Q_1 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_1-Tata-ACE.png"));	this.mApplication.arrImagesTrack.Q_11 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_11-Tata-Chemicals.png"));	this.mApplication.arrImagesTrack.Q_14 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_14-Engineers-India_image.png"));	this.mApplication.arrImagesTrack.Q_9 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_9-Piramal-Healthcare.png"));	this.mApplication.arrImagesTrack.Q_8 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_8-BSES_image.png"));	this.mApplication.arrImagesTrack.Q_20 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_20-Manipur-Govt.png"));			/*	this.mApplication.arrImagesTrack.Q_2 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_2-VVF.png"));	this.mApplication.arrImagesTrack.Q_3 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_3-Caterpillar.png"));	this.mApplication.arrImagesTrack.Q_4 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_4-Mariotte.png"));	this.mApplication.arrImagesTrack.Q_5 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_5-Unilever.png"));	this.mApplication.arrImagesTrack.Q_6 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_6-PandG.png"));	this.mApplication.arrImagesTrack.Q_7 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_7-Trinity-Health.png"));	this.mApplication.arrImagesTrack.Q_10 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_10-New-York-City-311.png"));	this.mApplication.arrImagesTrack.Q_12 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_12-United-Spirits.png"));	this.mApplication.arrImagesTrack.Q_13 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_13-Tota-Motors-Rural.png"));	this.mApplication.arrImagesTrack.Q_15 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_15-LandT-Komatsu_image.png"));	this.mApplication.arrImagesTrack.Q_16 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_16-LandT-Power.png"));	this.mApplication.arrImagesTrack.Q_17 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_17-Wizard-of-OZ.png"));	this.mApplication.arrImagesTrack.Q_18 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_18-Royal-Shakespeare.png"));	this.mApplication.arrImagesTrack.Q_19 = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/question/Q_19-BPCL.png"));	*/	//this.mApplication.arrImagesTrack["next-question-overlay"] = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/next-question_overlay.png"));	//this.mApplication.arrImagesTrack["next-question-normal"] = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/next-question.png"));	this.mApplication.arrImagesTrack.leftNav_Carousel = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/leftNavbig.png"));	this.mApplication.arrImagesTrack.rightNav_Carousel = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/rightNavbig.png"));	this.mApplication.arrImagesTrack.leftNav_Carousel_sm = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/leftNav.png"));	this.mApplication.arrImagesTrack.rightNav_Carousel_sm = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/rightNav.png"));	this.mApplication.arrImagesTrack.pick_ur_question = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/carousel_flashcards/pick.jpg"));	//this.mApplication.arrImagesTrack["Introduction_25-years"] = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/Introduction_25-years.png"));	//this.mApplication.arrImagesTrack["How-to-Play-for-the-25-years"] = this.mGameAssetLoader.addImage(getAssetPath("img", "img/images/How-to-Play-for-the-25-years.png"));	this.mApplication.arrImagesTrack.percent0 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_0.png"));	this.mApplication.arrImagesTrack.percent10 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_10.png"));	this.mApplication.arrImagesTrack.percent20 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_20.png"));	this.mApplication.arrImagesTrack.percent30 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_30.png"));	this.mApplication.arrImagesTrack.percent40 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_40.png"));	this.mApplication.arrImagesTrack.percent50 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_50.png"));	this.mApplication.arrImagesTrack.percent60 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_60.png"));	this.mApplication.arrImagesTrack.percent70 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_70.png"));	this.mApplication.arrImagesTrack.percent80 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_80.png"));	this.mApplication.arrImagesTrack.percent90 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_90.png"));	this.mApplication.arrImagesTrack.percent100 = this.mGameSplashLoader.addImage(getAssetPath("img", "img/images/loading_anim_100.png"));	var a = this;	this.mGameAssetLoader.addProgressListener(function(b) {		a.gameAssetLoadingProgress(b)	});	this.mGameAssetLoader.addCompletionListener(function() {		a.gameAssetLoaded()	});	this.mGameSplashLoader.addCompletionListener(function() {		a.splashAssetLoaded()	});	this.mGameSplashLoader.addProgressListener(function(b) {		a.splashAssetLoadingProgress(b)	});	this.mGameSplashLoader.start()};LoadingScreen.prototype.splashAssetLoaded = function() {	document.getElementById("main_game_screen").style.display = "block";	document.getElementById("loading_script_tags").style.display = "none";	this.mImageRow = 100;	document.getElementById("loadingScreen_front").appendChild(this.mApplication.arrImagesTrack["percent" + this.mImageRow]);	this.mGameAssetLoader.start()};LoadingScreen.prototype.splashAssetLoadingProgress = function(a) {};LoadingScreen.prototype.gameAssetLoaded = function() {	if (document.getElementById("newName") != null) {		document.getElementById("newName").parentNode.removeChild(document.getElementById("newName"))	}	this.mAssetLoaded = true;	this.mApplication.nextTransition()};LoadingScreen.prototype.gameAssetLoadingProgress = function(d) {	var f = parseInt(d.completedCount / d.totalCount * 100);	var a = false;	var b = Number(Math.round(f / 10));	if (Number(this.loadingProgress[b]) == -1) {		this.loadingProgress[b] = 1;		this.mImageRow = this.loadingProgress_ImagName[b];		a = true	}	if (a) {		var c = this;		if (!this.mAssetLoaded) {			$("#loadingScreen_front").flip({				direction : "rl",				speed : 50,				color : "#000",				onEnd : function() {					while (document.getElementById("loadingScreen_front").hasChildNodes()) {						document.getElementById("loadingScreen_front").removeChild(document.getElementById("loadingScreen_front").lastChild)					}					document.getElementById("loadingScreen_front").appendChild(c.mApplication					.arrImagesTrack["percent" + c.mImageRow]);					document.getElementById("loadingScreen_front").style.backgroundColor = "rgb(253, 253, 253)"				}			})		}	}};function SplashScreen(a) {	this.mApplication = a;	this.mDivName = "splashScreen";	this.setUp()}SplashScreen.prototype.setUp = function() {	var a = this;	this.mApplication.showScreen(this.mDivName);	/*var b = this.mApplication.arrImagesTrack["Introduction_25-years"];	document.getElementById("splashScreen").appendChild(b);	b.style.marginTop = "50px";	b.style.marginLeft = "55px";	*/		var mHTML = '';       mHTML  += '<div class="screen1Txt">';				mHTML  += '<div style="color: rgb(187,0,34) !important;font-size: 22px;padding-bottom: 8px;font-weight: bold;">Welcome to &lsquo;Partners in Success&rsquo;</div><br/>';            	mHTML  += 'To celebrate Accenture\'s fabulous 25 years ';				mHTML  += 'of operation in India, we are proud to ';				mHTML  += 'present to you, &lsquo;Partners in Success&rsquo;. This ';				mHTML  += 'digital asset is based on compelling client ';				mHTML  += 'success stories demonstrating the positive ';				mHTML  += 'impact Accenture has brought to our ';				mHTML  += 'partnerships with numerous clients across ';				mHTML  += 'industry verticals, all over the globe. These ';				mHTML  += 'solutions have not only enabled business-';								mHTML  += 'critical applications for our clients, but have ';				mHTML  += 'also brought tremendous value addition to ';				mHTML  += 'our partner\'s business environment forging ';				mHTML  += 'them to be front-runners in their areas of ';				mHTML  += 'expertise.<br /><br />';        mHTML  += '</div>';		mHTML  += '<div class="screen2Txt">';            	mHTML  += '&lsquo;Partners in Success&rsquo; is a simple game to ';				mHTML  += 'play &ndash; but a challenge to win. In the process, ';				mHTML  += 'you might also discover ways in which ';				mHTML  += 'Accenture could help you realize your ';				mHTML  += 'company\'s true potential. Enjoy!';        mHTML  += '</div>';        mHTML  += '<div class="eneterGameButton button" id="enterGame">Enter the game</div>';                        document.getElementById("splashScreen").innerHTML =mHTML;		document.getElementById("enterGame").onclick = function() {		a.mApplication.nextTransition()	}};function MenuScreen(a) {	this.mApplication = a;	this.mDivName = "menuScreen";	this.setUp()}MenuScreen.prototype.setUp = function() {	var a = this;	this.mApplication.showScreen(this.mDivName);	document.getElementById("screen_2_logo").appendChild(this.mApplication.arrImagesTrack.menu_screen_logo);	document.getElementById("carousel_2_img").appendChild(this.mApplication.arrImagesTrack.menu_screen_carousel);	document.getElementById("how_to_play").onclick = function() {		a.mApplication.setGameState(50);		a.mApplication.nextTransition()	};	document.getElementById("play_the_game").onclick = function() {		a.mApplication.setGameState(70);		a.mApplication.nextTransition()	}};function HowToPlayScreen(a) {	this.mApplication = a;	this.mDivName = "howtoplayScreen";	this.setUp()}HowToPlayScreen.prototype.setUp = function() {	var a = this;	this.mApplication.showScreen(this.mDivName);	/*var b = this.mApplication.arrImagesTrack["How-to-Play-for-the-25-years"];	document.getElementById("new_add_on_how_to_play").appendChild(b);	*/	var mHTML =""	mHTML += '<div class="howToPlayDiv">';        	mHTML += '<b>How to play</b><br /><br /><br />';           mHTML += '<div class="howToPlay1Txt">';		    mHTML += '<ul>';              mHTML += '<li style="font-size: 18px;">This game is loaded with six flashcards.<br />';			  mHTML += 'Each flashcard holds an exceptional Accenture client success story.</li>';              mHTML += '<li style="font-size: 18px;">You have to pick one card from the carousel <br />';			  mHTML += 'that appears right at the beginning of the game.</li>';              mHTML += '<li style="font-size: 18px;">Each card holds a question with four <br />';			  mHTML += 'possible answers, based on the Accenture <br />';			  mHTML += 'client solution.</li>';              mHTML += '<li style="font-size: 18px;">All you have to do is pick the right answer <br />';			  mHTML += 'from the given set of options.</li>';			  mHTML += '<li style="font-size: 18px;">You get 100 points for selecting the right <br />';			  mHTML += 'answer in each story.</li>';              mHTML += '<li style="font-size: 18px;">There is no negative marking in case you <br />';			  mHTML += 'select the wrong answer.</li>';            mHTML += '</ul>';			mHTML += '</div>';			           	mHTML += '<div class="howToPlay2Txt">';			mHTML += '<ul style="height:316px;">';			 mHTML += '<li style="font-size: 18px;">Once you have selected the answer, right';				mHTML += 'or wrong, the game moves on to the flashcard ';				mHTML += 'with the next client success story.</span></li>';					mHTML += '<li style="font-size: 18px;">This game is time-bound. You get 150 <br />';					mHTML += 'seconds to  answer all questions.</li>';					 mHTML += '<li style="font-size: 18px;">A score between 100-200 gets you the <br />';					 mHTML += 'copper star, between 201-400 gets you the <br />';					 mHTML += 'bronze star and if you crack a score between <br />';					 mHTML += '401-600 you win the much coveted silver <br /> ';					 mHTML += 'star, in honour of Accenture\'s 25th <br />';					 mHTML += 'anniversary.</li>';				mHTML += '</ul>';								mHTML += '<div style="font-size: 18px; font-weight: bold;  margin-left: 10px;"> So are you ready to get this story started?</div>';			mHTML += '</div>';						mHTML += '</div>';        mHTML += '<div class="buttonsDivPage3">';        	mHTML += '<div id="instruction_back" class="backButton button">Back</div>';			mHTML += '<div id="instruction_play" class="playButton button" style="margin-left:15px;">Play now</div>';        mHTML += '</div>';						document.getElementById("howtoplayScreen").innerHTML= mHTML		document.getElementById("instruction_back").onclick = function() {		a.mApplication.setGameState(30);		a.mApplication.nextTransition()	};	document.getElementById("instruction_play").onclick = function() {		a.mApplication.setGameState(70);		a.mApplication.nextTransition()	}};var callback_function_carousel = null;function CarouselScreen(a) {	this.mApplication = a;	this.mDivName = "carouselScreen";	this.setUp()}CarouselScreen.prototype.setUp = function() {	var d = this;	this.mApplication.showScreen(this.mDivName);	this.mApplication.showSelectedScreen("grey_bottom");	document.getElementById("timer_txt").innerHTML = "000";	document.getElementById("score_txt").innerHTML = "000";	if (!this.mApplication.bcarouselCreated) {		this.mApplication.bcarouselCreated = true;		var c = '<div class="myloader"></div><ul  id ="carousel_ul_li_holder" class="allinone_carousel_list" style="background-color:#999966;">';		document.getElementById("allinone_carousel_charming").innerHTML = c;		for (var b = 0; b < config.questionSet.length; b++) {			var a = b + 1;			var f = document.createElement("li");			f.setAttribute("id", "li_ele_" + b);			document.getElementById("carousel_ul_li_holder").appendChild(f);			var e = this.mApplication.arrImagesTrack["C_" + a];			e.setAttribute("id", "li_" + b);			e.setAttribute("width", "185");			e.setAttribute('data-actual-url',e.src);			var nSt= e.src;			nSt = String(nSt).split('.png')[0];			nSt = nSt +'_hover.png';			e.setAttribute('data-rollver-url',nSt);			e.setAttribute("class", "reflectBelow");			f.appendChild(e)						//console.log(''+e.src);						/*var e1 = this.mApplication.arrImagesTrack["C_" + a+"_hover"];			e1.setAttribute("id", "li_2_hover");			e1.setAttribute("width", "185");			e1.setAttribute("display", "none");			e1.setAttribute("class", "reflectBelow");			f.appendChild(e1)*/					}		jQuery("#allinone_carousel_charming").allinone_carousel({			skin : "powerful",			width : 850,			height : 470,			numberOfVisibleItems : 3,			callback : function(g) {				CLICK_HERE(g)			}		})	}	document.getElementById("carousel_back").onclick = function() {		if (d.mApplication.nGameState == 80) {			d.mApplication.setGameState(30);			d.mApplication.nextTransition()		} else {			if (d.mApplication.nGameState == 130) {				d.mApplication.setGameState(70);				d.mApplication.nextTransition()			} else {				d.mApplication.setGameState(70);				d.mApplication.nextTransition()			}		}	}};function CLICK_HERE(a) {	a = Number(a);	_gMainApplication.startGameTimer(a);	_gMainApplication.setGameState(90);	_gMainApplication.nextTransition()}function GamePlayScreen(a) {	this.mApplication = a;	this.mDivName = "gameplayScreen";	this.setUp()}GamePlayScreen.prototype.setUp = function() {	var b = this;	this.mApplication.showScreen(this.mDivName);	_gMainApplication.resumeTimer();	this.mApplication.showSelectedScreen("grey_bottom");	var a = '<div id="game_screen_logo_2" class="gameScreenLogo"></div><div id= "imgHolder_In_Question" class="gameImg"></div><div class="questionTxt"><p>' + config.questionSet[this.mApplication.nQuestionIndex].question;	a += '</p></div><div class="answerDiv">	<div id="option_1" class="ans"><div style="width:10px;">A.</div><div style="margin-top: -15px;margin-left: 20px;"> ' + config.questionSet[this.mApplication.nQuestionIndex].option_1;	a += '</div> </div><div class="ansSpace"></div><div id="option_2" class="ans"><div style="width:10px;">B.</div><div style="margin-top: -15px;margin-left: 20px;"> ' + config.questionSet[this.mApplication.nQuestionIndex].option_2;	a += '</div> </div><div class="ansSpace"></div> <div id="option_3" class="ans"><div style="width:10px;">C.</div><div style="margin-top: -15px;margin-left: 20px;"> ' + config.questionSet[this.mApplication.nQuestionIndex].option_3;	a += '</div> </div><div class="ansSpace"></div><div id="option_4" class="ans"><div style="width:10px;">D.</div><div style="margin-top: -15px;margin-left: 20px;"> ' + config.questionSet[this.mApplication.nQuestionIndex].option_4;	a += '</div> </div><div class="ansSpace"></div></div>';	document.getElementById("gameplayScreen").innerHTML = "" + a;	var d = getAssetPath("img", "img/images/image4_small.png");	document.getElementById("game_screen_logo_2").style.backgroundImage = "url(" + d + ")";	var c = this.mApplication.arrImagesTrack[config.questionSet[this.mApplication.nQuestionIndex].img_url];	document.getElementById("imgHolder_In_Question").appendChild(c);	document.getElementById("option_1").onclick = function() {		b.mApplication.answerSelected(1)	};	document.getElementById("option_2").onclick = function() {		b.mApplication.answerSelected(2)	};	document.getElementById("option_3").onclick = function() {		b.mApplication.answerSelected(3)	};	document.getElementById("option_4").onclick = function() {		b.mApplication.answerSelected(4)	}};function CorrectAnswerScreen(a) {	this.mApplication = a;	this.mDivName = "correctanswerScreen";	this.setUp()}CorrectAnswerScreen.prototype.setUp = function() {	var b = this;	this.mApplication.showScreen(this.mDivName);	_gMainApplication.pauseTimer();	this.mApplication.showSelectedScreen("grey_bottom");	var e = getAssetPath("img", "img/images/carousel_flashcards/next-question.png");	var a = '<div id="game_screen_logo_3" class="gameScreenLogo"></div><div id="imgHolder_In_CorrectAnswerScreen" class="gameImg"></div><div class="questionTxt"><p>Yes. You are correct!</p></div><div class="explnDiv"><p>' + config.questionSet[this.mApplication.nQuestionIndex].solution + '</p></div>' 			if (_gMainApplication.mQuestionAnswered != undefined && _gMainApplication.mQuestionAnswered.length < config.questionSet.length-1)	{		a += '<div id="correct_next_question" class="nextQues"></div>';	}	else	{		a += '<div id="next_question_next" class="introButtonFooter button nextQues" style="width: 100px;line-height: 32px;">'+config.buttonLabel+'</div>';	}		var d = getAssetPath("img", "img/images/image4_small.png");	document.getElementById("correctanswerScreen").innerHTML = "" + a;	document.getElementById("game_screen_logo_3").style.backgroundImage = "url(" + d + ")";	var b = this;	if (_gMainApplication.mQuestionAnswered != undefined && _gMainApplication.mQuestionAnswered.length < config.questionSet.length-1)	{	document.getElementById("correct_next_question").appendChild(b.mApplication.arrImagesTrack.pick_ur_question);	}	else	{		document.getElementById("next_question_next").onclick = function()		{				_gMainApplication.hideCarousel();				_gMainApplication.nGameState = 130;				_gMainApplication.nextTransition()		}	}	this.mApplication.mQuestionAnswered.push(this.mApplication.nQuestionIndex);	var c = this.mApplication.arrImagesTrack[config.questionSet[this.mApplication.nQuestionIndex].img_url];	document.getElementById("imgHolder_In_CorrectAnswerScreen").appendChild(c);	this.mApplication.loadMiniCarousel()			};function WrongAnswerScreen(a) {	this.mApplication = a;	this.mDivName = "wronganswerScreen";	this.setUp()}WrongAnswerScreen.prototype.setUp = function() {	var c = this;	this.mApplication.showScreen(this.mDivName);	_gMainApplication.pauseTimer();	this.mApplication.showSelectedScreen("grey_bottom");	var e = getAssetPath("img", "img/images/carousel_flashcards/next-question.png");	var b = '<div id="game_screen_logo_4" class="gameScreenLogo"></div><div id= "imgHolder_In_Revealing" class="gameImg"></div><div class="questionTxt"><p>No, almost...</p></div><div class="explnDiv"><p>' + config.questionSet[this.mApplication.nQuestionIndex].solution + '</p></div>'	this.mApplication.mQuestionAnswered.push(this.mApplication.nQuestionIndex);	if (_gMainApplication.mQuestionAnswered != undefined && _gMainApplication.mQuestionAnswered.length < config.questionSet.length)	{		b += '<div id="wrong_next_question" class="nextQues"></div>';	}	 else	{		b += '<div id="next_question_next" class="introButtonFooter button nextQues" style="width: 100px;line-height: 32px;">'+config.buttonLabel+'</div>';	}	 	document.getElementById("wronganswerScreen").innerHTML = "" + b;	var a = getAssetPath("img", "img/images/image4_small.png");	document.getElementById("game_screen_logo_4").style.backgroundImage = "url(" + a + ")";		var d = this.mApplication.arrImagesTrack[config.questionSet[this.mApplication.nQuestionIndex].img_url];	document.getElementById("imgHolder_In_Revealing").appendChild(d);	var c = this;	if (_gMainApplication.mQuestionAnswered != undefined && _gMainApplication.mQuestionAnswered.length < config.questionSet.length)	{		document.getElementById("wrong_next_question").appendChild(c.mApplication.arrImagesTrack.pick_ur_question);	}	else	{		document.getElementById("next_question_next").onclick = function()		{			_gMainApplication.hideCarousel();				_gMainApplication.nGameState = 130;				_gMainApplication.nextTransition()		}	}	this.mApplication.loadMiniCarousel()};function PopUpScreen_NewAddon(a) {	this.mApplication = a;	this.mDivName = "onlyglobalPopup";	this.setUp()}PopUpScreen_NewAddon.prototype.setUp = function() {	document.getElementById("onlyglobalPopup").className="";	var sURL ='http://appstute.in/'	//var sURL = 'https://register.accenture.com/in-en/form/Pages/partnersinsuccess.aspx'	this.mApplication.showScreen(this.mDivName);	//document.getElementById("passwordScreen").innerHTML = "<div id='start_up_light_box' class='startup_light_box'> <div id='s_u_light_box_bg'  ></div><div id='s_u_light_box_content'> <div ='start_up_lb_content_to_be_shown'></div></div> <div id='s_u_light_box_cross_btn'> CLOSE X</div>  </div>" ;	document.getElementById("onlyglobalPopup").innerHTML = "<div id='start_up_light_box' class='startup_light_box'> <div id='s_u_light_box_bg'  ></div><div id='s_u_light_box_content'> <div ='start_up_lb_content_to_be_shown'><object type='text/html' style='width:100%;height:100%'  data='" +sURL+ "'></object></div></div> <div id='s_u_light_box_cross_btn'> CLOSE X</div>  </div>" ;			document.getElementById('s_u_light_box_cross_btn').onclick = function(){			_gMainApplication.nGameState = 20;			_gMainApplication.nextTransition()	};	};function WinnerScreen(a) {	this.mApplication = a;	this.mDivName = "winnerScreen";	this.setUp()}WinnerScreen.prototype.setUp = function() {	var c = this;	this.mApplication.showScreen(this.mDivName);	this.mApplication.showSelectedScreen("grey_bottom");	var h = Number(this.mApplication.nQuizScore);	var d = Number(this.mApplication.nBenchmarkScore);	var g = "";	var e = "";	/*if (h < 100)	{		g = "Your time is up!";		e = ""	}	else if(h >= 100 && h*/ if(h <= 200) {		g = "Congratulations!";		e = "You’ve won the Copper Star! <br>Play again to win the ultimate Silver Star!"	} else {		if (h > 200 && h <= 400) {			g = "Congratulations!";			e = "You’ve won the Bronze Star! <br>Almost made it! Play again to win the coveted Silver Star!"		} else {			if (h > 400) {				g = "Congratulations!";				e = "You’ve won the Silver Star! <br>(In honour of Accenture’s Silver Anniversary)"			}		}	}	var b = '<div id="final_screen" class="finalScreen"><div id="game_screen_logo_5" class="gameScreenLogo"></div><div class="congratsTxt">' + g + '</div><div class="conMsg">' + e + '<br> <br> <a id="last_page_anchor" href="http://www.accenture.com/in-en/client-successes/Pages/index.aspx" target="_blank"><u><font size="2" color="blue">Read more about our success stories</font></u> <span>This link opens in a new window</span></a></div></div>';	document.getElementById("winnerScreen").innerHTML = "" + b;	var a = getAssetPath("img", "img/images/image4_small.png");	document.getElementById("game_screen_logo_5").style.backgroundImage = "url('" + a + "')";	var f = getAssetPath("img", "img/images/image7.png");	document.getElementById("final_screen").style.backgroundImage = "url(" + f + ")";	document.getElementById("carousel_back").innerHTML = "Play Again"};ApplicationWrapper.prototype.nextTransition = function() {	document.getElementById("carousel_Intro").style.display = "none";	document.getElementById("carousel_Help").style.display = "none";	switch (this.nGameState) {		case 0:		case 10:			document.getElementById('outerMostDiv').style.display = "block";			this.nGameState = 11;			this.mCurrentScreen = new LoadingScreen(this);			break;		case 11:		document.getElementById('outerMostDiv').style.display = "none";			this.nGameState = 20;						this.mCurrentScreen = new PopUpScreen_NewAddon(this);			break;			case 20:		document.getElementById('outerMostDiv').style.display = "block";			document.getElementById('main_game_screen').className ="onlySplashScreen";				this.nGameState = 30;			this.mCurrentScreen = new SplashScreen(this);			break;		case 30:			document.getElementById('main_game_screen').className ="mainDiv";				this.nGameState = 40;			this.mCurrentScreen = new MenuScreen(this);			break;		case 50:			this.nGameState = 60;			clearInterval(this.nQuizTimer);			this.mCurrentScreen = new HowToPlayScreen(this);			break;		case 70:			this.hideCarousel();			this.nGameState = 80;			clearInterval(this.nQuizTimer);			var sT = document.getElementById("carousel_back").className;			if(sT.indexOf('playbutn_button_specific') !== -1)			{				sT = sT.replace('playbutn_button_specific','');			}			document.getElementById("carousel_back").className =sT;			document.getElementById("carousel_back").innerHTML = "Back";			this.mCurrentScreen = new CarouselScreen(this);			break;		case 90:			this.nGameState = 100;			this.mCurrentScreen = new GamePlayScreen(this);			break;		case 100:			document.getElementById("carousel_Intro").style.display = "block";			document.getElementById("carousel_Help").style.display = "block";			this.mCurrentScreen = new CorrectAnswerScreen(this);			break;		case 110:			document.getElementById("carousel_Intro").style.display = "block";			document.getElementById("carousel_Help").style.display = "block";			this.mCurrentScreen = new WrongAnswerScreen(this);			break;		case 120:			break;		case 130:			clearInterval(this.nQuizTimer);			 var sT = document.getElementById("carousel_back").className;			if(sT.indexOf('playbutn_button_specific') === -1)			{				sT = sT +' playbutn_button_specific';			}			document.getElementById("carousel_back").className =sT;			document.getElementById("carousel_Intro").style.display = "block";			this.mCurrentScreen = new WinnerScreen(this);			break	}};ApplicationWrapper.prototype.setGameState = function(a) {	this.nGameState = a};ApplicationWrapper.prototype.hideCarousel = function() {	if (document.getElementById("SM_carouselParent_MINI") != null) {		document.getElementById("allinone_carousel_charming_SM_main").removeChild(document.getElementById("SM_carouselParent_MINI"))	}	if (document.getElementById("allinone_carousel_charming_SM") == null) {		var a = document.createElement("div");		a.setAttribute("id", "allinone_carousel_charming_SM");		document.getElementById("allinone_carousel_charming_SM_main").appendChild(a)	}	document.getElementById("allinone_carousel_charming_SM").innerHTML = ""};ApplicationWrapper.prototype.loadMiniCarousel = function() {		if (this.mQuestionAnswered.length <= config.questionSet.length) {		if (this.mQuestionAnswered.length < config.questionSet.length) {			this.mCarouselQuestionTrack = new Array();			this.hideCarousel();			var c = '<div class="myloader_SM"></div><ul  id ="carousel_ul_li_holder_SM" class="allinone_carousel_list_SM" style="background-color:#999966;">';			document.getElementById("allinone_carousel_charming_SM").innerHTML = c;			for (var b = 0; b < config.questionSet.length; b++) {				if (this.mQuestionAnswered.indexOf(Number(b)) == -1) {					this.mCarouselQuestionTrack.push(b);					var a = b + 1;					var e = document.createElement("li");					e.setAttribute("id", "li__ele_SM" + b);					document.getElementById("carousel_ul_li_holder_SM").appendChild(e);					var d = this.arrImagesTrack["C_" + a];					d.setAttribute("id", "li_" + b);					d.setAttribute("width", "50");					d.setAttribute("class", "reflectBelow");					e.appendChild(d)				} else {				}			}			jQuery("#allinone_carousel_charming_SM").allinone_carousel_SMALL({				skin : "powerful",				width : 130,				height : 75,				numberOfVisibleItems : 3,				callback : function(f) {					if (document.getElementById("SM_carouselParent_MINI") != null) {						document.getElementById("SM_carouselParent_MINI").style.display = "none"					}					CLICK_HERE_MINI_CAROUSEL(f)				}			});			document.getElementById("SM_carouselParent_MINI").style.display = "block"		} 	} else {		this.hideCarousel();		this.nGameState = 130;		this.nextTransition()	}};ApplicationWrapper.prototype.pauseTimer = function() {	clearInterval(_gMainApplication.nQuizTimer)};ApplicationWrapper.prototype.resumeTimer = function() {	clearInterval(_gMainApplication.nQuizTimer);	var a = this;	this.nQuizTimer = setInterval(function() {		a.nQuizTimeCntr--;		if (a.nQuizTimeCntr <= 0) {			clearInterval(a.nQuizTimer);			a.nGameState = 130;			a.nextTransition()		}		document.getElementById("timer_txt").innerHTML = "" + a.nQuizTimeCntr;		document.getElementById("score_txt").innerHTML = "" + a.nQuizScore	}, 1000)};function CLICK_HERE_MINI_CAROUSEL(a) {	a = _gMainApplication.mCarouselQuestionTrack[	Number(a)];	_gMainApplication.nQuestionIndex = a;	_gMainApplication.resumeTimer();	_gMainApplication.setGameState(90);	_gMainApplication.nextTransition()}ApplicationWrapper.prototype.startGameTimer = function(a) {	this.arrQuestion = new Array();	this.mQuestionAnswered = new Array();	var b = this;	this.nQuizTimeCntr = 150;	this.nQuizScore = 0;	this.nQuestionIndex = a;	var b = this;	this.nQuizTimer = setInterval(function() {		b.nQuizTimeCntr--;		if (b.nQuizTimeCntr <= 0) {			clearInterval(b.nQuizTimer);			b.nGameState = 130;			b.nextTransition()		}		document.getElementById("timer_txt").innerHTML = "" + b.nQuizTimeCntr;		document.getElementById("score_txt").innerHTML = "" + b.nQuizScore	}, 1000)};ApplicationWrapper.prototype.TimerFunction = function() {	this.nQuizTimeCntr--;	if (this.nQuizTimeCntr <= 0) {		clearInterval(this.nQuizTimer);		this.nGameState = 130;		this.nextTransition()	}	document.getElementById("timer_txt").innerHTML = "" + this.nQuizTimeCntr;	document.getElementById("score_txt").innerHTML = "" + this.nQuizScore};ApplicationWrapper.prototype.answerSelected = function(a) {	if (a == config.questionSet[this.nQuestionIndex].correct_answer) {		this.nQuizScore = this.nQuizScore + this.nCorrectAnswer;		this.nGameState = 100;		document.getElementById("score_txt").innerHTML = "" + this.nQuizScore	} else {		this.nGameState = 110	}	this.nextTransition()};ApplicationWrapper.prototype.showSelectedScreen = function(a) {	document.getElementById(a).style.display = "block"};ApplicationWrapper.prototype.showScreen = function(b) {	var a = 0;	for ( a = 0; a < this.mScreenManager.length; a++) {		if (b != this.mScreenManager[a]) {			document.getElementById(this.mScreenManager[a]).style.display = "none"		} else {			document.getElementById(this.mScreenManager[a]).style.display = "block"		}	}};ApplicationWrapper.prototype.setUp = function(a) {	this.mScreenManager = a.screenNames};function ApplicationWrapper() {	this.nGameState = 0;	this.mScreenManager = new Array();	this.mCurrentScreen = null;	this.nQuestionIndex = 0;	this.nQuizTimer = 0;	this.nQuizTimeCntr = 150;	this.nQuizScore = 0;	this.nCorrectAnswer = 100;	this.nWrongAnswer = 0;	this.nBenchmarkScore = 100;	this.bcarouselCreated = false;	this.arrQuestion = null;	this.arrImagesTrack = {};	this.mQuestionAnswered = new Array();	this.mCarouselQuestionTrack = new Array();	return this}ApplicationWrapper.prototype.closeQuestionOverlay = function() {	document.getElementById("overlayScreen_ForQuestion").style.display = "none";	document.getElementById("opaqueScreen_ForQuestion").style.display = "none";	document.getElementById("opaqueScreen_bg_forQuestion").style.block = "none"};ApplicationWrapper.prototype.showQuestionOverlay = function() {	if (document.getElementById("opaqueScreen_ForQuestion").innerHTML == "-1") {		var a = "TRY AGAIN SAME QUESTION";		document.getElementById("opaqueScreen_ForQuestion").innerHTML = a	}	document.getElementById("overlayScreen_ForQuestion").style.display = "block";	document.getElementById("opaqueScreen_ForQuestion").style.display = "block";	document.getElementById("opaqueScreen_ForQuestion").style.zIndex = 9;	document.getElementById("opaqueScreen_bg_forQuestion").style.display = "block";	document.getElementById("opaqueScreen_bg_forQuestion").style.zIndex = 7;	document.getElementById("overlayScreen_ForQuestion").onclick = function() {		_gMainApplication.closeQuestionOverlay()	}};$("#carousel_Intro").click(function() {	_gMainApplication.hideCarousel();	_gMainApplication.setGameState(20);	_gMainApplication.nextTransition()});$("#carousel_Help").click(function() {	_gMainApplication.hideCarousel();	_gMainApplication.setGameState(50);	_gMainApplication.nextTransition()});function setDivText(h, g, e, a, d, j, f) {	var i = document.getElementById("" + a);	var b = document.getElementById("" + a + "txt");	var c;	if (!b) {		c = document.createElement("div");		c.setAttribute("id", a + "txt")	} else {		b.parentNode.removeChild(b);		c = document.createElement("div");		c.setAttribute("id", a + "txt")	}	c.style.color = d;	c.style.fontSize = j;	c.style.position = "absolute";	c.innerHTML = "" + e;	c.style.marginLeft = h + "px";	c.style.marginTop = g + "px";	i.appendChild(c)}if (!Array.prototype.indexOf) {	Array.prototype.indexOf = function(b) {		var a = this.length >>> 0;		var c = Number(arguments[1]) || 0;		c = (c < 0) ? Math.ceil(c) : Math.floor(c);		if (c < 0) {			c += a		}		for (; c < a; c++) {			if ( c in this && this[c] === b) {				return c			}		}		return -1	}};